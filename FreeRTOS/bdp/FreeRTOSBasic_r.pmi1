THEORY BalanceX IS
  FreeRTOSBasic_r,1063,135,0,913,2,13,0;
  InstanciatedConstraintsLemmas,0,0,0,0,0,0,0;
  Initialisation,0,0,0,0,0,0,0;
  xTaskCreate,2,0,0,2,0,0,0;
  vTaskDelay,5,0,0,4,1,0,0;
  vTaskDelayUntil,4,0,0,4,0,0,0;
  vTaskDelete,19,0,0,19,0,0,0;
  vTaskEndScheduler,0,0,0,0,0,0,0;
  xTaskGetCurrentTaskHandle,0,0,0,0,0,0,0;
  uxTaskGetNumberOfTasks,0,0,0,0,0,0,0;
  uxTaskPriorityGet,0,0,0,0,0,0,0;
  vTaskPrioritySet,1,0,0,1,0,0,0;
  vTaskResume,7,0,0,7,0,0,0;
  beforeResumeAll,1,0,0,1,0,0,0;
  xTaskResumeAll,49,12,0,31,0,6,0;
  vTaskStartScheduler,1,0,0,1,0,0,0;
  vTaskSuspend,14,0,0,14,0,0,0;
  vTaskSuspendAll,0,0,0,0,0,0,0;
  xQueueCreate,1,1,0,0,0,0,0;
  queueDelete,3,0,0,2,0,1,0;
  sendItem,230,28,0,202,0,0,0;
  receiveItem,229,28,0,201,0,0,0;
  createSemaphore,3,3,0,0,0,0,0;
  deleteSemaphore,0,0,0,0,0,0,0;
  takeSemaphore,185,22,0,163,0,0,0;
  giveSemaphore,198,22,0,176,0,0,0;
  createMutex,1,1,0,0,0,0,0;
  takeMutex,11,0,0,11,0,0,0;
  giveMutex,49,6,0,42,1,0,0;
  getTickCount,0,0,0,0,0,0,0;
  incrementTick,1,0,0,1,0,0,0;
  afterIncrementTick,49,12,0,31,0,6,0;
  xQueueCreateMutex,0,0,0,0,0,0,0;
  xSemaphoreCreateRecursiveMutex,0,0,0,0,0,0,0
END
&
THEORY ProofState IS
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(2);
  Proved(0);
  Proved(Util);
  Proved(2);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(2);
  Proved(0);
  Proved(Util);
  Proved(2);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(2);
  Proved(0);
  Proved(Util);
  Proved(2);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(1);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(2);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(2);
  Proved(0);
  Proved(Util);
  Proved(2);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(2);
  Proved(0);
  Proved(Util);
  Proved(2);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(2);
  Proved(0);
  Proved(Util);
  Proved(2);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(1);
  Proved(0);
  Proved(0);
  Proved(0)
END
&
THEORY MethodList IS
  dd & ah(not(n_receiving(q1) = {})) & eh(n_receiving,_h,Goal) & pr & dd & ph(q1,!q1.(q1: queues$1 & q1: dom(n_first) & not(n_receiving(q1) = {}) => n_first(q1): n_receiving(q1))) & pr & pr & pr & eh(n_receiving,_h,Goal);
  pr;
  pr;
  dd & ah(not(n_sending(q1) = {})) & eh(n_sending,_h,Goal) & pr & dd & ph(q1,!q1.(q1: queues$1 & q1: dom(n_first) & not(n_sending(q1) = {}) => n_first(q1): n_sending(q1))) & pr & pr & pr & eh(n_sending,_h,Goal);
  pr;
  pr;
  dd & ah(not(n_receiving(q1) = {})) & eh(n_receiving,_h,Goal) & pr & dd & ph(q1,!q1.(q1: queues$1 & q1: dom(n_first$0) & not(n_receiving(q1) = {}) => n_first$0(q1): n_receiving(q1))) & pr & pr & pr & eh(n_receiving,_h,Goal);
  pr;
  pr;
  dd & ah(not(n_sending(q1) = {})) & eh(n_sending,_h,Goal) & pr & dd & ph(q1,!q1.(q1: queues$1 & q1: dom(n_first) & not(n_sending(q1) = {}) => n_first(q1): n_sending(q1))) & pr & pr & pr & eh(n_sending,_h,Goal);
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & ah(not(n_receiving(q1) = {})) & eh(n_receiving,_h,Goal) & pr & dd & ph(q1,!q1.(q1: queues$1 & q1: dom(n_first) & not(n_receiving(q1) = {}) => n_first(q1): n_receiving(q1))) & pr & pr & pr & eh(n_receiving,_h,Goal);
  pr;
  pr;
  pr;
  dd & ah(not(n_receiving(q1) = {})) & eh(n_receiving,_h,Goal) & pr & dd & ph(q1,!q1.(q1: queues$1 & q1: dom(n_first) & not(n_receiving(q1) = {}) => n_first(q1): n_receiving(q1))) & pr & pr & pr & eh(n_receiving,_h,Goal);
  pr;
  pr;
  pr;
  pr;
  dd & ah(not(n_sending(q1) = {})) & eh(n_sending,_h,Goal) & pr & dd & ph(q1,!q1.(q1: queues$1 & q1: dom(n_first) & not(n_sending(q1) = {}) => n_first(q1): n_sending(q1))) & pr & pr & pr & eh(n_sending,_h,Goal);
  pr;
  pr;
  pr;
  dd & ah(not(n_sending(q1) = {})) & eh(n_sending,_h,Goal) & pr & dd & ph(q1,!q1.(q1: queues$1 & q1: dom(n_first) & not(n_sending(q1) = {}) => n_first(q1): n_sending(q1))) & pr & pr & pr & eh(n_sending,_h,Goal);
  pr;
  pr;
  pr;
  pr;
  dd & ah(not(n_receiving(q1) = {})) & eh(n_receiving,_h,Goal) & pr & dd & ph(q1,!q1.(q1: queues$1 & q1: dom(n_first$0) & not(n_receiving(q1) = {}) => n_first$0(q1): n_receiving(q1))) & pr & pr & pr & eh(n_receiving,_h,Goal);
  pr;
  pr;
  dd & ah(not(n_sending(q1) = {})) & eh(n_sending,_h,Goal) & pr & dd & ph(q1,!q1.(q1: queues$1 & q1: dom(n_first) & not(n_sending(q1) = {}) => n_first(q1): n_sending(q1))) & pr & pr & pr & eh(n_sending,_h,Goal);
  pr;
  pr;
  pr;
  dd & ah(not(n_receiving(q1) = {})) & eh(n_receiving,_h,Goal) & pr & dd & ph(q1,!q1.(q1: queues$1 & q1: dom(n_first$0) & not(n_receiving(q1) = {}) => n_first$0(q1): n_receiving(q1))) & pr & pr & pr & eh(n_receiving,_h,Goal);
  pr;
  pr;
  dd & ah(not(n_sending(q1) = {})) & eh(n_sending,_h,Goal) & pr & dd & ph(q1,!q1.(q1: queues$1 & q1: dom(n_first) & not(n_sending(q1) = {}) => n_first(q1): n_sending(q1))) & pr & pr & pr & eh(n_sending,_h,Goal);
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & ah(#(mutex$1).(mutex$1: QUEUE & not(mutex$1: queues$1) & (queues$1\/{mutex$0} = queues$1\/{mutex$1} & mutexes$1\/{mutex$0} = mutexes$1\/{mutex$1} & queue_receiving$1\/{mutex$0|->{}} = queue_receiving$1\/{mutex$1|->{}} & first_receiving$1\/{mutex$0|->TASK_NULL} = first_receiving$1\/{mutex$1|->TASK_NULL} & queue_sending$1\/{mutex$0|->{}} = queue_sending$1\/{mutex$1|->{}} & first_sending$1\/{mutex$0|->TASK_NULL} = first_sending$1\/{mutex$1|->TASK_NULL} & mutex_holder$1\/{mutex$0|->TASK_NULL} = mutex_holder$1\/{mutex$1|->TASK_NULL} & mutex$0 = mutex$1))) & pr & pp(rp.0);
  ss & pr & ss & pr & pr;
  dd & ss & pr & ss & pr & pr & pr;
  dd & ss & pr & ss & pr & pr & pr;
  dd & ss & pr & ss & pr & pr & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & ss & pr & ss & pr & pr & pr;
  dd & ss & pr & ss & pr & pr & pr;
  dd & ss & pr & ss & pr & pr & pr;
  dd & ss & pr & ss & pr & pr & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & ah(#(semaphore$1).(semaphore$1: QUEUE & not(semaphore$1: queues$1) & (queues$1\/{semaphore$0} = queues$1\/{semaphore$1} & queue_receiving$1\/{semaphore$0|->{}} = queue_receiving$1\/{semaphore$1|->{}} & first_receiving$1\/{semaphore$0|->TASK_NULL} = first_receiving$1\/{semaphore$1|->TASK_NULL} & queue_sending$1\/{semaphore$0|->{}} = queue_sending$1\/{semaphore$1|->{}} & first_sending$1\/{semaphore$0|->TASK_NULL} = first_sending$1\/{semaphore$1|->TASK_NULL} & semaphores$1\/{semaphore$0} = semaphores$1\/{semaphore$1} & semaphore$0 = semaphore$1))) & pr & pp(rp.0);
  dd & ah(#(semaphore$1).(semaphore$1: QUEUE & not(semaphore$1: queues$1) & (queues$1\/{semaphore$0} = queues$1\/{semaphore$1} & queue_receiving$1\/{semaphore$0|->{}} = queue_receiving$1\/{semaphore$1|->{}} & first_receiving$1\/{semaphore$0|->TASK_NULL} = first_receiving$1\/{semaphore$1|->TASK_NULL} & queue_sending$1\/{semaphore$0|->{}} = queue_sending$1\/{semaphore$1|->{}} & first_sending$1\/{semaphore$0|->TASK_NULL} = first_sending$1\/{semaphore$1|->TASK_NULL} & semaphores$1\/{semaphore$0} = semaphores$1\/{semaphore$1} & (semaphores_busy$1 = semaphores_busy$1\/{semaphore$1} & semaphore$0: semaphores_full$1 or semaphores_full$1\/{semaphore$0} = semaphores_full$1\/{semaphore$1} or semaphore$0: semaphores_full$1) & semaphore$0 = semaphore$1))) & se(semaphore$0) & pr & pp(rp.0);
  dd & ah(#(semaphore$1).(semaphore$1: QUEUE & not(semaphore$1: queues$1) & (queues$1\/{semaphore$0} = queues$1\/{semaphore$1} & queue_receiving$1\/{semaphore$0|->{}} = queue_receiving$1\/{semaphore$1|->{}} & first_receiving$1\/{semaphore$0|->TASK_NULL} = first_receiving$1\/{semaphore$1|->TASK_NULL} & queue_sending$1\/{semaphore$0|->{}} = queue_sending$1\/{semaphore$1|->{}} & first_sending$1\/{semaphore$0|->TASK_NULL} = first_sending$1\/{semaphore$1|->TASK_NULL} & semaphores$1\/{semaphore$0} = semaphores$1\/{semaphore$1} & (semaphores_busy$1\/{semaphore$0} = semaphores_busy$1\/{semaphore$1} or (semaphores_full$1 = semaphores_full$1\/{semaphore$1} & semaphore$0: semaphores_busy$1) or semaphore$0: semaphores_busy$1) & semaphore$0 = semaphore$1))) & se(semaphore$0) & pr & pp(rp.0);
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & ss & pr & ss & pr & pr & pr;
  dd & ss & pr & ss & pr & pr & pr;
  dd & ss & pr & ss & pr & pr & pr;
  dd & ss & pr & ss & pr & pr & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & ss & pr & ss & pr & pr & pr;
  dd & ss & pr & ss & pr & pr & pr;
  dd & ss & pr & ss & ah(not(queue_sending$1(pxQueue) = {})) & pr & pr & pr;
  dd & ss & pr & ss & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  dd & se(n_first) & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & ah(#(pxQueue$0).(pxQueue$0: QUEUE & not(pxQueue$0: queues$1) & (queues$1\/{pxQueue} = queues$1\/{pxQueue$0} & queues_msg$1\/{pxQueue} = queues_msg$1\/{pxQueue$0} & queue_items$1\/{pxQueue|->{}} = queue_items$1\/{pxQueue$0|->{}} & queue_receiving$1\/{pxQueue|->{}} = queue_receiving$1\/{pxQueue$0|->{}} & queue_sending$1\/{pxQueue|->{}} = queue_sending$1\/{pxQueue$0|->{}} & queues_msg_empty$1\/{pxQueue} = queues_msg_empty$1\/{pxQueue$0} & pxQueue = pxQueue$0 & first_sending$1\/{pxQueue|->TASK_NULL} = first_sending$1\/{pxQueue$0|->TASK_NULL} & first_receiving$1\/{pxQueue|->TASK_NULL} = first_receiving$1\/{pxQueue$0|->TASK_NULL}))) & se(pxQueue) & pr & dd & ah(#(pxQueue$0).(pxQueue$0: QUEUE & not(pxQueue$0: queues$1) & (queues$1\/{pxQueue} = queues$1\/{pxQueue$0} & queues_msg$1\/{pxQueue} = queues_msg$1\/{pxQueue$0} & queue_items$1\/{pxQueue|->{}} = queue_items$1\/{pxQueue$0|->{}} & queue_receiving$1\/{pxQueue|->{}} = queue_receiving$1\/{pxQueue$0|->{}} & queue_sending$1\/{pxQueue|->{}} = queue_sending$1\/{pxQueue$0|->{}} & queues_msg_empty$1\/{pxQueue} = queues_msg_empty$1\/{pxQueue$0} & pxQueue = pxQueue$0 & first_sending$1\/{pxQueue|->TASK_NULL} = first_sending$1\/{pxQueue$0|->TASK_NULL} & first_receiving$1\/{pxQueue|->TASK_NULL} = first_receiving$1\/{pxQueue$0|->TASK_NULL}))) & pp(rp.0);
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & ph(q1,!q1.(q1: queues$1 & q1: dom(n_first) & not(n_receiving(q1) = {}) => n_first(q1): n_receiving(q1))) & pr & pr & pr & eh(n_receiving,_h,Goal);
  pr;
  pr;
  dd & ah(n_first(q1): n_sending(q1)) & ph(q1,!q1.(q1: queues$1 & q1: dom(n_first) & not(n_sending(q1) = {}) => n_first(q1): n_sending(q1))) & pr & pr & pr & dd & ah(n_first(q1): n_sending(q1)) & eh(n_sending,_h,Goal);
  pr;
  pr;
  dd & ph(q1,!q1.(q1: queues$1 & q1: dom(n_first$0) & not(n_receiving(q1) = {}) => n_first$0(q1): n_receiving(q1))) & pr & pr & pr & eh(n_receiving,_h,Goal);
  pr;
  pr;
  dd & ah(n_first(q1): n_sending(q1)) & ph(q1,!q1.(q1: queues$1 & q1: dom(n_first) & not(n_sending(q1) = {}) => n_first(q1): n_sending(q1))) & pr & pr & pr & dd & ah(n_first(q1): n_sending(q1)) & eh(n_sending,_h,Goal);
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & ph(q1,!q1.(q1: queues$1 & q1: dom(n_first) & not(n_receiving(q1) = {}) => n_first(q1): n_receiving(q1))) & pr & pr & pr & eh(n_receiving,_h,Goal);
  pr;
  pr;
  pr;
  dd & ph(q1,!q1.(q1: queues$1 & q1: dom(n_first) & not(n_receiving(q1) = {}) => n_first(q1): n_receiving(q1))) & pr & pr & pr & eh(n_receiving,_h,Goal);
  pr;
  pr;
  pr;
  pr;
  dd & ah(n_first(q1): n_sending(q1)) & ph(q1,!q1.(q1: queues$1 & q1: dom(n_first) & not(n_sending(q1) = {}) => n_first(q1): n_sending(q1))) & pr & pr & pr & dd & ah(n_first(q1): n_sending(q1)) & eh(n_sending,_h,Goal);
  pr;
  pr;
  pr;
  dd & ah(n_first(q1): n_sending(q1)) & ph(q1,!q1.(q1: queues$1 & q1: dom(n_first) & not(n_sending(q1) = {}) => n_first(q1): n_sending(q1))) & pr & pr & pr & dd & ah(n_first(q1): n_sending(q1)) & eh(n_sending,_h,Goal);
  pr;
  pr;
  pr;
  pr;
  dd & ph(q1,!q1.(q1: queues$1 & q1: dom(n_first$0) & not(n_receiving(q1) = {}) => n_first$0(q1): n_receiving(q1))) & pr & pr & pr & eh(n_receiving,_h,Goal);
  pr;
  pr;
  dd & ah(n_first(q1): n_sending(q1)) & ph(q1,!q1.(q1: queues$1 & q1: dom(n_first) & not(n_sending(q1) = {}) => n_first(q1): n_sending(q1))) & pr & pr & pr & dd & ah(n_first(q1): n_sending(q1)) & eh(n_sending,_h,Goal);
  pr;
  pr;
  pr;
  dd & ph(q1,!q1.(q1: queues$1 & q1: dom(n_first$0) & not(n_receiving(q1) = {}) => n_first$0(q1): n_receiving(q1))) & pr & pr & pr & eh(n_receiving,_h,Goal);
  pr;
  pr;
  dd & ah(n_first(q1): n_sending(q1)) & ph(q1,!q1.(q1: queues$1 & q1: dom(n_first) & not(n_sending(q1) = {}) => n_first(q1): n_sending(q1))) & pr & pr & pr & dd & ah(n_first(q1): n_sending(q1)) & eh(n_sending,_h,Goal);
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr
END
&
THEORY PassList IS
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(2),(?;0;1);
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(2),(?;0;1);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(2),(?;0;1);
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(2),(?;0;1);
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(2),(?;0;1);
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(2),(?;0;1);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(1),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(1),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(1),(?;0;1;2);
  Force(1),(?;0;1;2);
  Force(1),(?;0;1;2);
  Force(1),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0;1;2);
  Force(1),(?;0;1;2);
  Force(1),(?;0;1;2);
  Force(1),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(1),(?;0;1;2);
  Force(1),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0;1;2);
  Force(1),(?;0;1;2);
  Force(1),(?;0;1;2);
  Force(1),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0;1;2);
  Force(1),(?;0;1;2);
  Force(1),(?;0;1;2);
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(2),(?;0;1);
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(2),(?;0;1);
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(2),(?;0;1);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(2),(?;0;1);
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(2),(?;0;1);
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(2),(?;0;1);
  Force(0),?;
  Force(0),(?;0;1;2);
  Force(2),(?;0;1);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0);
  Force(0),?;
  Force(0),?;
  Force(0),?
END
&
THEORY ManForms 
END
&
THEORY Version IS
  POVersion(V3.8.3)(CLT == "V3.7.6")(genOPO == KO,genDivergencePO == KO,local_op == OK);
  PRVersion("V3.3.3.p39")(CLT == "V3.7.6")
END
