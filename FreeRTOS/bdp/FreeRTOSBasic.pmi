THEORY BalanceX IS
  FreeRTOSBasic,468,77,0,311,34,9,0;
  InstanciatedConstraintsLemmas,0,0,0,0,0,0,0;
  AssertionLemmas,5,2,0,3,0,0,0;
  Initialisation,2,0,0,2,0,0,0;
  xTaskCreate,8,0,0,8,0,0,0;
  vTaskDelay,2,2,0,0,0,0,0;
  vTaskDelayUntil,3,2,0,1,0,0,0;
  vTaskDelete,39,0,0,39,0,0,0;
  vTaskEndScheduler,1,0,0,1,0,0,0;
  xTaskGetCurrentTaskHandle,0,0,0,0,0,0,0;
  uxTaskGetNumberOfTasks,0,0,0,0,0,0,0;
  uxTaskPriorityGet,0,0,0,0,0,0,0;
  vTaskPrioritySet,0,0,0,0,0,0,0;
  vTaskResume,6,0,0,6,0,0,0;
  xTaskResumeAll,39,6,0,32,0,1,0;
  vTaskStartScheduler,5,0,0,5,0,0,0;
  vTaskSuspend,12,0,0,12,0,0,0;
  vTaskSuspendAll,0,0,0,0,0,0,0;
  xQueueCreate,6,0,0,2,3,0,0;
  queueDelete,15,0,0,13,1,1,0;
  sendItem,67,6,0,24,2,2,0;
  receiveItem,53,20,0,20,12,0,0;
  createSemaphore,8,0,0,2,4,0,0;
  deleteSemaphore,6,0,0,6,0,0,0;
  takeSemaphore,30,12,0,14,2,2,0;
  giveSemaphore,39,20,0,14,3,2,0;
  createMutex,7,1,0,4,2,0,0;
  takeMutex,12,3,0,9,0,0,0;
  giveMutex,50,0,0,49,1,0,0;
  getTickCount,0,0,0,0,0,0,0;
  incrementTick,39,1,0,37,0,1,0;
  xQueueCreateMutex,7,1,0,4,2,0,0;
  xSemaphoreCreateRecursiveMutex,7,1,0,4,2,0,0
END
&
THEORY ProofState IS
  Proved(1);
  Proved(1);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(1);
  Proved(1);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(2);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(1);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(1);
  Proved(1);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(1);
  Proved(Util);
  Proved(Util);
  Proved(1);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(1);
  Proved(0);
  Proved(2);
  Proved(2);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(2);
  Proved(2);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(1);
  Proved(Util);
  Proved(Util);
  Proved(1);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(1);
  Proved(1);
  Proved(0);
  Proved(1);
  Proved(1);
  Proved(0);
  Unproved;
  Unproved;
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(1);
  Proved(Util);
  Proved(Util);
  Proved(1);
  Proved(Util);
  Proved(Util);
  Proved(1);
  Proved(Util);
  Proved(Util);
  Proved(1);
  Proved(0);
  Proved(1);
  Proved(0);
  Proved(0);
  Proved(1);
  Proved(0);
  Proved(1);
  Proved(0);
  Proved(1);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(1);
  Proved(Util);
  Proved(Util);
  Proved(1);
  Proved(Util);
  Proved(Util);
  Proved(1);
  Proved(Util);
  Proved(Util);
  Proved(1);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Unproved;
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Unproved;
  Unproved;
  Unproved;
  Unproved;
  Unproved;
  Unproved;
  Unproved;
  Unproved;
  Unproved;
  Unproved;
  Unproved;
  Unproved;
  Unproved;
  Unproved;
  Unproved;
  Unproved;
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Unproved;
  Unproved;
  Unproved;
  Unproved;
  Unproved;
  Unproved;
  Unproved;
  Unproved;
  Unproved;
  Unproved;
  Unproved;
  Unproved;
  Unproved;
  Unproved;
  Unproved;
  Unproved;
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Unproved;
  Proved(Util);
  Proved(Util);
  Proved(1);
  Proved(Util);
  Proved(Util);
  Proved(1);
  Proved(0);
  Proved(2);
  Proved(2);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(1);
  Proved(2);
  Proved(0);
  Proved(1);
  Proved(1);
  Proved(0);
  Unproved;
  Proved(1);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(2);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0)
END
&
THEORY MethodList IS
  pr;
  pr;
  pr;
  dc(mutex = mt) & pr & dd & dd & ah((mutex_holder\/{mutex|->TASK_NULL})(mt) = mutex_holder(mt)) & pr & dd & eh((mutex_holder\/{mutex|->TASK_NULL})(mt),_h,Goal) & ph(mt,!mt.(mt: mutexes & not(mt: mutexes_busy) => not(mutex_holder(mt): tasks))) & ah(mt: mutexes\/{mutex} & mt/:{mutex}) & pr & pr & pr & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dc(mutex = mt) & pr & dd & dd & ah((mutex_holder\/{mutex|->TASK_NULL})(mt) = mutex_holder(mt)) & pr & dd & eh((mutex_holder\/{mutex|->TASK_NULL})(mt),_h,Goal) & ph(mt,!mt.(mt: mutexes & not(mt: mutexes_busy) => not(mutex_holder(mt): tasks))) & pr & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dc(mutex = mt) & pr & dd & dd & ah((mutex_holder<+{mutex|->running})(mt) = mutex_holder(mt)) & pr & dd & eh((mutex_holder<+{mutex|->running})(mt),_h,Goal) & ah(active = TRUE) & dd & ph(mt,!mt.(mt: mutexes_busy => mutex_holder(mt): tasks)) & ah(mt: mutexes_busy\/{mutex}) & dd & ah(mt: mutexes_busy\/{mutex} & mt/:{mutex}) & pr & pr & pr;
  pr;
  pr;
  pr;
  dc(mutex = que) & dd & pr & ph(que,!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) & pr & dd & ah(blocked\/suspended <: blocked\/{running}\/suspended) & pr & dd & pr & dd & dd & ah((queue_receiving<+{mutex|->(queue_receiving(mutex)\/{running})})(que) = queue_receiving(que)) & pr & dd & eh((queue_receiving<+{mutex|->(queue_receiving(mutex)\/{running})})(que),_h,Goal) & ah(blocked\/suspended <: blocked\/{running}\/suspended) & pr & dd & pr;
  dd & ph(que,!que.(que: queues => queue_sending(que) <: blocked\/suspended)) & pr & dd & ah(blocked\/suspended <: blocked\/{running}\/suspended) & pr & dd & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dc(mutex$0 = mt) & pr & dd & dd & ah((mutex_holder\/{mutex$0|->TASK_NULL})(mt) = mutex_holder(mt)) & pr & dd & eh((mutex_holder\/{mutex$0|->TASK_NULL})(mt),_h,Goal) & ph(mt,!mt.(mt: mutexes & not(mt: mutexes_busy) => not(mutex_holder(mt): tasks))) & ah(mt: mutexes\/{mutex$0} & mt/:{mutex$0}) & pr & pr & pr & pr;
  pr;
  pr;
  pr;
  dd & ph(que,!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) & pr & dd & ah(blocked\/suspended <: blocked\/(suspended\/{running})) & pr & ah(suspended <: suspended\/{running}) & pr & dd & pr & pr & ah(suspended <: suspended\/{running}) & pr & dd & pr & dd & pr;
  dd & ph(que,!que.(que: queues => queue_sending(que) <: blocked\/suspended)) & pr & dd & ah(blocked\/suspended <: blocked\/(suspended\/{running})) & pr & ah(suspended <: suspended\/{running}) & pr & dd & pr & pr & ah(suspended <: blocked\/suspended) & pr & pr & ah(suspended <: suspended\/{running}) & pr & pr & dd & dc(semaphore = que) & pr & dd & ah((queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(que) = queue_sending(que)) & pr & dd & eh((queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(que),_h,Goal) & pr;
  pr;
  dd & ph(que,!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) & pr & dd & ah(blocked\/suspended <: blocked\/{running}\/suspended) & pr & dd & pr;
  dd & ph(que,!que.(que: queues => queue_sending(que) <: blocked\/suspended)) & pr & dd & ah(blocked\/suspended <: blocked\/{running}\/suspended) & pr & dd & pr & pr & pr & pr & pr & pr;
  pr;
  pr;
  pr;
  dd & ph(que,!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) & pr & dd & dc(semaphore = que) & pr & dd & ah((queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(que) = queue_receiving(que)) & pr & dd & eh((queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(que),_h,Goal) & ah(queue_receiving(que)-{task} <: blocked-{task}\/suspended) & pr & dd & ph(semaphore,que,task,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_receiving(q1) => tk/:queue_receiving(q2))) & pr & pr & pr & pr & pr & dd & ah(queue_receiving(que)-{task} = queue_receiving(que)) & pr & dd & eh(queue_receiving(que),_h,Goal) & pr;
  dd & ph(que,!que.(que: queues => queue_sending(que) <: blocked\/suspended)) & pr & dd & ah(queue_sending(que)-{task} <: blocked-{task}\/suspended) & pr & dd & ph(semaphore,que,task,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & dd & ah(queue_sending(que)-{task} = queue_sending(que)) & pr & dd & eh(queue_sending(que),_h,Goal) & pr;
  dd & ph(que,!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) & pr & dd & dc(semaphore = que) & pr & dd & ah((queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(que) = queue_receiving(que)) & pr & dd & eh((queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(que),_h,Goal) & ah(queue_receiving(que)-{task} <: blocked-{task}\/suspended) & pr & dd & ph(semaphore,que,task,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_receiving(q1) => tk/:queue_receiving(q2))) & pr & pr & pr & pr & pr & dd & ah(queue_receiving(que)-{task} = queue_receiving(que)) & pr & dd & eh(queue_receiving(que),_h,Goal) & pr;
  dd & ph(que,!que.(que: queues => queue_sending(que) <: blocked\/suspended)) & pr & dd & ah(queue_sending(que)-{task} <: blocked-{task}\/suspended) & pr & dd & ph(semaphore,que,task,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & dd & ah(queue_sending(que)-{task} = queue_sending(que)) & pr & dd & eh(queue_sending(que),_h,Goal) & pr;
  dd & ph(que,!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) & pr & dd & dc(semaphore = que) & pr & dd & ah((queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(que) = queue_receiving(que)) & pr & dd & eh((queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(que),_h,Goal) & ah(queue_receiving(que)-{task} <: blocked\/suspended-{task}) & pr & dd & ph(semaphore,que,task,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_receiving(q1) => tk/:queue_receiving(q2))) & pr & pr & pr & pr & pr & dd & ah(queue_receiving(que)-{task} = queue_receiving(que)) & pr & dd & eh(queue_receiving(que),_h,Goal) & pr;
  dd & ph(que,!que.(que: queues => queue_sending(que) <: blocked\/suspended)) & pr & dd & ah(queue_sending(que)-{task} <: blocked\/suspended-{task}) & pr & dd & ph(semaphore,que,task,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & dd & ah(queue_sending(que)-{task} = queue_sending(que)) & pr & dd & eh(queue_sending(que),_h,Goal) & pr;
  dd & ph(que,!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) & pr & dd & dc(semaphore = que) & pr & dd & ah((queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(que) = queue_receiving(que)) & pr & dd & eh((queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(que),_h,Goal) & ah(queue_receiving(que)-{task} <: blocked\/suspended-{task}) & pr & dd & ph(semaphore,que,task,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_receiving(q1) => tk/:queue_receiving(q2))) & pr & pr & pr & pr & pr & dd & ah(queue_receiving(que)-{task} = queue_receiving(que)) & pr & dd & eh(queue_receiving(que),_h,Goal) & pr;
  dd & ph(que,!que.(que: queues => queue_sending(que) <: blocked\/suspended)) & pr & dd & ah(queue_sending(que)-{task} <: blocked\/suspended-{task}) & pr & dd & ph(semaphore,que,task,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & dd & ah(queue_sending(que)-{task} = queue_sending(que)) & pr & dd & eh(queue_sending(que),_h,Goal) & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & ph(que,!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) & pr & dd & dc(semaphore = que) & pr & dd & ah((queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(que) = queue_receiving(que)) & pr & dd & eh((queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(que),_h,Goal) & ah(queue_receiving(que)-{task} <: blocked-{task}\/suspended) & pr & dd & ph(semaphore,que,task,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_receiving(q1) => tk/:queue_receiving(q2))) & pr & pr & pr & pr & pr & dd & ah(queue_receiving(que)-{task} = queue_receiving(que)) & pr & dd & eh(queue_receiving(que),_h,Goal) & pr;
  dd & ph(que,!que.(que: queues => queue_sending(que) <: blocked\/suspended)) & pr & dd & ah(queue_sending(que)-{task} <: blocked-{task}\/suspended) & pr & dd & ph(semaphore,que,task,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & dd & ah(queue_sending(que)-{task} = queue_sending(que)) & pr & dd & eh(queue_sending(que),_h,Goal) & pr;
  dd & ph(que,!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) & pr & dd & dc(semaphore = que) & pr & dd & ah((queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(que) = queue_receiving(que)) & pr & dd & eh((queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(que),_h,Goal) & ah(queue_receiving(que)-{task} <: blocked-{task}\/suspended) & pr & dd & ph(semaphore,que,task,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_receiving(q1) => tk/:queue_receiving(q2))) & pr & pr & pr & pr & pr & dd & ah(queue_receiving(que)-{task} = queue_receiving(que)) & pr & dd & eh(queue_receiving(que),_h,Goal) & pr;
  dd & ph(que,!que.(que: queues => queue_sending(que) <: blocked\/suspended)) & pr & dd & ah(queue_sending(que)-{task} <: blocked-{task}\/suspended) & pr & dd & ph(semaphore,que,task,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & dd & ah(queue_sending(que)-{task} = queue_sending(que)) & pr & dd & eh(queue_sending(que),_h,Goal) & pr;
  dd & ph(que,!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) & pr & dd & dc(semaphore = que) & pr & dd & ah((queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(que) = queue_receiving(que)) & pr & dd & eh((queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(que),_h,Goal) & ah(queue_receiving(que)-{task} <: blocked\/suspended-{task}) & pr & dd & ph(semaphore,que,task,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_receiving(q1) => tk/:queue_receiving(q2))) & pr & pr & pr & pr & pr & dd & ah(queue_receiving(que)-{task} = queue_receiving(que)) & pr & dd & eh(queue_receiving(que),_h,Goal) & pr;
  dd & ph(que,!que.(que: queues => queue_sending(que) <: blocked\/suspended)) & pr & dd & ah(queue_sending(que)-{task} <: blocked\/suspended-{task}) & pr & dd & ph(semaphore,que,task,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & dd & ah(queue_sending(que)-{task} = queue_sending(que)) & pr & dd & eh(queue_sending(que),_h,Goal) & pr;
  dd & ph(que,!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) & pr & dd & dc(semaphore = que) & pr & dd & ah((queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(que) = queue_receiving(que)) & pr & dd & eh((queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(que),_h,Goal) & ah(queue_receiving(que)-{task} <: blocked\/suspended-{task}) & pr & dd & ph(semaphore,que,task,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_receiving(q1) => tk/:queue_receiving(q2))) & pr & pr & pr & pr & pr & dd & ah(queue_receiving(que)-{task} = queue_receiving(que)) & pr & dd & eh(queue_receiving(que),_h,Goal) & pr;
  dd & ph(que,!que.(que: queues => queue_sending(que) <: blocked\/suspended)) & pr & dd & ah(queue_sending(que)-{task} <: blocked\/suspended-{task}) & pr & dd & ph(semaphore,que,task,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & dd & ah(queue_sending(que)-{task} = queue_sending(que)) & pr & dd & eh(queue_sending(que),_h,Goal) & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & ph(que,!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) & pr & dd & dc(semaphore = que) & pr & ah(blocked\/suspended <: blocked\/(suspended\/{running})) & pr & dd & pr & dd & ah((queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})})(que) = queue_receiving(que)) & pr & dd & eh((queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})})(que),_h,Goal) & ah(blocked\/suspended <: blocked\/(suspended\/{running})) & pr & ah(suspended <: suspended\/{running}) & pr & pr & dd & ah(suspended <: suspended\/{running}) & pr & dd & ah(suspended\/{running} <: blocked\/(suspended\/{running})) & pr & dd & pr & dd & pr;
  dd & ph(que,!que.(que: queues => queue_sending(que) <: blocked\/suspended)) & pr & dd & ah(blocked\/suspended <: blocked\/(suspended\/{running})) & pr & ah(suspended <: suspended\/{running}) & pr & dd & dd & pr;
  dd & ph(que,!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) & pr & dd & dc(semaphore = que) & pr & ah(blocked\/suspended <: blocked\/{running}\/suspended) & pr & dd & pr & pr & ph(que,!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) & pr & dd & ah(blocked\/suspended <: blocked\/{running}\/suspended) & pr & dd & pr & dd & ah((queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})})(que) = queue_receiving(que)) & pr & dd & eh((queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})})(que),_h,Goal) & ah(blocked\/suspended <: blocked\/{running}\/suspended) & pr & dd & pr;
  dd & ph(que,!que.(que: queues => queue_sending(que) <: blocked\/suspended)) & pr & dd & ah(blocked\/suspended <: blocked\/{running}\/suspended) & pr & dd & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & ph(que,!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) & pr & dd & ah(queue_receiving(que)-{task} <: blocked-{task}\/suspended) & pr & dd & ph(que,semaphore,task,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => tk/:queue_receiving(q1))) & pr & pr & pr & ah(task: blocked & blocked <: TASK) & pr & pr & dd & ah(queue_receiving(que)-{task} = queue_receiving(que)) & pr & dd & eh(queue_receiving(que),_h,Goal) & pr;
  dd & ph(que,!que.(que: queues => queue_sending(que) <: blocked\/suspended)) & pr & dd & dc(semaphore = que) & pr & dd & ah((queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(que) = queue_sending(que)) & pr & dd & eh((queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(que),_h,Goal) & ah(queue_sending(que)-{task} <: blocked-{task}\/suspended) & pr & dd & ph(semaphore,que,task,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_sending(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & pr & dd & ah(queue_sending(que)-{task} = queue_sending(que)) & pr & dd & eh(queue_sending(que),_h,Goal) & pr;
  pr;
  dd & ph(que,!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) & pr & dd & ah(queue_receiving(que)-{task} <: blocked\/suspended-{task}) & pr & dd & ph(que,semaphore,task,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => tk/:queue_receiving(q1))) & pr & pr & pr & pr & dd & ah(queue_receiving(que) = queue_receiving(que)-{task}) & pr & dd & eh(queue_receiving(que),_h,Goal) & pr;
  dd & ph(que,!que.(que: queues => queue_sending(que) <: blocked\/suspended)) & pr & dd & dc(semaphore = que) & pr & dd & ah((queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(que) = queue_sending(que)) & pr & dd & eh((queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(que),_h,Goal) & ah(queue_sending(que)-{task} <: blocked\/suspended-{task}) & pr & dd & ph(semaphore,que,task,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_sending(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & pr & dd & ah(queue_sending(que)-{task} = queue_sending(que)) & pr & dd & eh(queue_sending(que),_h,Goal) & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & ph(que,!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) & pr & dd & ah(queue_receiving(que)-{task} <: blocked-{task}\/suspended) & pr & dd & ph(que,semaphore,task,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => tk/:queue_receiving(q1))) & pr & pr & pr & ah(task: blocked & blocked <: TASK) & pr & pr & dd & ah(queue_receiving(que)-{task} = queue_receiving(que)) & pr & dd & eh(queue_receiving(que),_h,Goal) & pr;
  dd & ph(que,!que.(que: queues => queue_sending(que) <: blocked\/suspended)) & pr & dd & dc(semaphore = que) & pr & dd & ah((queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(que) = queue_sending(que)) & pr & dd & eh((queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(que),_h,Goal) & ah(queue_sending(que)-{task} <: blocked-{task}\/suspended) & pr & dd & ph(semaphore,que,task,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_sending(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & pr & dd & ah(queue_sending(que)-{task} = queue_sending(que)) & pr & dd & eh(queue_sending(que),_h,Goal) & pr;
  pr;
  dd & ph(que,!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) & pr & dd & ah(queue_receiving(que)-{task} <: blocked\/suspended-{task}) & pr & dd & ph(que,semaphore,task,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => tk/:queue_receiving(q1))) & pr & pr & pr & pr & dd & ah(queue_receiving(que) = queue_receiving(que)-{task}) & pr & dd & eh(queue_receiving(que),_h,Goal) & pr;
  dd & ph(que,!que.(que: queues => queue_sending(que) <: blocked\/suspended)) & pr & dd & dc(semaphore = que) & pr & dd & ah((queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(que) = queue_sending(que)) & pr & dd & eh((queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(que),_h,Goal) & ah(queue_sending(que)-{task} <: blocked\/suspended-{task}) & pr & dd & ph(semaphore,que,task,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_sending(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & pr & dd & ah(queue_sending(que)-{task} = queue_sending(que)) & pr & dd & eh(queue_sending(que),_h,Goal) & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & ah(queue_receiving(que)-{task} <: blocked-{task}\/suspended) & pr & ph(que,!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) & pr & dd & pr & ph(que,pxQueue,task,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => tk/:queue_receiving(q1))) & pr & pr & pr & pr & dd & ah(queue_receiving(que)-{task} = queue_receiving(que)) & pr & dd & eh(queue_receiving(que),_h,Goal) & pr & pr;
  dd & ph(que,!que.(que: queues => queue_sending(que) <: blocked\/suspended)) & pr & dd & dc(pxQueue = que) & pr & dd & ah((queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(que) = queue_sending(que)) & pr & dd & eh((queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(que),_h,Goal) & ah(queue_sending(que)-{task} <: blocked-{task}\/suspended) & pr & dd & ph(pxQueue,que,task,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_sending(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & pr & dd & ah(queue_sending(que)-{task} = queue_sending(que)) & pr & dd & eh(queue_sending(que),_h,Goal) & pr;
  pr;
  dd & ah(queue_receiving(que)-{task} <: blocked-{task}\/suspended) & pr & ph(que,!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) & pr & dd & pr & ph(que,pxQueue,task,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => tk/:queue_receiving(q1))) & pr & pr & pr & pr & dd & ah(queue_receiving(que)-{task} = queue_receiving(que)) & pr & dd & eh(queue_receiving(que),_h,Goal) & pr & pr;
  dd & ph(que,!que.(que: queues => queue_sending(que) <: blocked\/suspended)) & pr & dd & dc(pxQueue = que) & pr & dd & ah((queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(que) = queue_sending(que)) & pr & dd & eh((queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(que),_h,Goal) & ah(queue_sending(que)-{task} <: blocked-{task}\/suspended) & pr & dd & ph(pxQueue,que,task,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_sending(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & pr & dd & ah(queue_sending(que)-{task} = queue_sending(que)) & pr & dd & eh(queue_sending(que),_h,Goal) & pr;
  pr;
  dd & ph(que,!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) & pr & dd & ah(queue_receiving(que)-{task} <: blocked\/suspended-{task}) & pr & dd & ph(que,pxQueue,task,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => tk/:queue_receiving(q1))) & pr & pr & pr & pr & dd & ah(queue_receiving(que)-{task} = queue_receiving(que)) & pr & dd & eh(queue_receiving(que),_h,Goal) & pr;
  dd & ph(que,!que.(que: queues => queue_sending(que) <: blocked\/suspended)) & pr & dd & dc(pxQueue = que) & pr & dd & ah((queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(que) = queue_sending(que)) & pr & dd & eh((queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(que),_h,Goal) & ah(queue_sending(que)-{task} <: blocked\/suspended-{task}) & pr & dd & ph(pxQueue,que,task,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_sending(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & pr & dd & ah(queue_sending(que)-{task} = queue_sending(que)) & pr & dd & eh(queue_sending(que),_h,Goal) & pr;
  pr;
  dd & ph(que,!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) & pr & dd & ah(queue_receiving(que)-{task} <: blocked\/suspended-{task}) & pr & dd & ph(que,pxQueue,task,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => tk/:queue_receiving(q1))) & pr & pr & pr & pr & dd & ah(queue_receiving(que)-{task} = queue_receiving(que)) & pr & dd & eh(queue_receiving(que),_h,Goal) & pr;
  dd & ph(que,!que.(que: queues => queue_sending(que) <: blocked\/suspended)) & pr & dd & dc(pxQueue = que) & pr & dd & ah((queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(que) = queue_sending(que)) & pr & dd & eh((queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(que),_h,Goal) & ah(queue_sending(que)-{task} <: blocked\/suspended-{task}) & pr & dd & ph(pxQueue,que,task,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_sending(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & pr & dd & ah(queue_sending(que)-{task} = queue_sending(que)) & pr & dd & eh(queue_sending(que),_h,Goal) & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & ph(que,!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) & pr & dd & ah(queue_receiving(que)-{task} <: blocked-{task}\/suspended) & pr & dd & ph(que,pxQueue,task,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => tk/:queue_receiving(q1))) & pr & pr & pr & pr & dd & ah(queue_receiving(que) = queue_receiving(que)-{task}) & pr & dd & eh(queue_receiving(que),_h,Goal) & pr;
  dd & ph(que,!que.(que: queues => queue_sending(que) <: blocked\/suspended)) & pr & dd & dc(pxQueue = que) & pr & dd & ah((queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(que) = queue_sending(que)) & pr & dd & eh((queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(que),_h,Goal) & ah(queue_sending(que)-{task} <: blocked-{task}\/suspended) & pr & dd & ph(pxQueue,que,task,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_sending(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & pr & dd & ah(queue_sending(que)-{task} = queue_sending(que)) & pr & dd & eh(queue_sending(que),_h,Goal) & pr;
  pr;
  dd & ph(que,!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) & pr & dd & ah(queue_receiving(que)-{task} <: blocked-{task}\/suspended) & pr & dd & ph(que,pxQueue,task,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => tk/:queue_receiving(q1))) & pr & pr & pr & pr & dd & ah(queue_receiving(que) = queue_receiving(que)-{task}) & pr & dd & eh(queue_receiving(que),_h,Goal) & pr;
  dd & ph(que,!que.(que: queues => queue_sending(que) <: blocked\/suspended)) & pr & dd & dc(pxQueue = que) & pr & dd & ah((queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(que) = queue_sending(que)) & pr & dd & eh((queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(que),_h,Goal) & ah(queue_sending(que)-{task} <: blocked-{task}\/suspended) & pr & dd & ph(pxQueue,que,task,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_sending(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & pr & dd & ah(queue_sending(que)-{task} = queue_sending(que)) & pr & dd & eh(queue_sending(que),_h,Goal) & pr;
  pr;
  dd & ph(que,!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) & pr & dd & ah(queue_receiving(que)-{task} <: blocked\/suspended-{task}) & pr & dd & ph(que,pxQueue,task,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => tk/:queue_receiving(q1))) & pr & pr & pr & pr & dd & ah(queue_receiving(que)-{task} = queue_receiving(que)) & pr & dd & eh(queue_receiving(que),_h,Goal) & pr;
  dd & ph(que,!que.(que: queues => queue_sending(que) <: blocked\/suspended)) & pr & dd & dc(pxQueue = que) & pr & dd & ah((queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(que) = queue_sending(que)) & pr & dd & eh((queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(que),_h,Goal) & ah(queue_sending(que)-{task} <: blocked\/suspended-{task}) & pr & dd & ph(pxQueue,que,task,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_sending(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & pr & dd & ah(queue_sending(que)-{task} = queue_sending(que)) & pr & dd & eh(queue_sending(que),_h,Goal) & pr;
  pr;
  dd & ph(que,!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) & pr & dd & ah(queue_receiving(que)-{task} <: blocked\/suspended-{task}) & pr & dd & ph(que,pxQueue,task,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => tk/:queue_receiving(q1))) & pr & pr & pr & pr & dd & ah(queue_receiving(que)-{task} = queue_receiving(que)) & pr & dd & eh(queue_receiving(que),_h,Goal) & pr;
  dd & ph(que,!que.(que: queues => queue_sending(que) <: blocked\/suspended)) & pr & dd & dc(pxQueue = que) & pr & dd & ah((queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(que) = queue_sending(que)) & pr & dd & eh((queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(que),_h,Goal) & ah(queue_sending(que)-{task} <: blocked\/suspended-{task}) & pr & dd & ph(pxQueue,que,task,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_sending(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & pr & dd & ah(queue_sending(que)-{task} = queue_sending(que)) & pr & dd & eh(queue_sending(que),_h,Goal) & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & ph(que,!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) & pr & dd & ah(blocked\/suspended <: blocked\/(suspended\/{running})) & pr & ah(suspended <: suspended\/{running}) & pr & pr & dd & dc(pxQueue = que) & pr & dd & ah((queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(que) = queue_receiving(que)) & pr & dd & eh((queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(que),_h,Goal) & pr;
  dd & ph(que,!que.(que: queues => queue_sending(que) <: blocked\/suspended)) & pr & dd & ah(blocked\/suspended <: blocked\/(suspended\/{running})) & pr & ah(suspended <: suspended\/{running}) & pr & pr & dd & pr;
  dd & ph(que,!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) & pr & dd & ah(blocked\/suspended <: blocked\/{running}\/suspended) & pr & dd & dc(pxQueue = que) & pr & dd & ah((queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(que) = queue_receiving(que)) & pr & dd & eh((queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(que),_h,Goal) & pr;
  dd & ph(que,!que.(que: queues => queue_sending(que) <: blocked\/suspended)) & pr & dd & ah(blocked\/suspended <: blocked\/{running}\/suspended) & pr & dd & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & ph(que,!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) & pr & dd & dc(pxQueue = que) & pr & dd & ah((queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que) = queue_receiving(que)) & pr & ah(pxQueue/=que) & pr;
  dd & ph(que,!que.(que: queues => queue_sending(que) <: blocked\/suspended)) & pr & dd & ah(queue_sending(que)-{task} <: blocked-{task}\/suspended) & pr & dd & ph(pxQueue,que,task,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & dd & ah(queue_sending(que)-{task} = queue_sending(que)) & pr & dd & eh(queue_sending(que),_h,Goal) & pr;
  dd & ph(que,!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) & pr & dd & dc(pxQueue = que) & pr & dd & ah((queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que) = queue_receiving(que)) & pr & ah(pxQueue/=que) & pr & pr & dd & eh((queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que),_h,Goal) & ah(queue_receiving(que)-{task} <: blocked-{task}\/suspended) & pr & dd & ph(pxQueue,que,task,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_receiving(q1) => tk/:queue_receiving(q2))) & pr & pr & pr & pr & pr & dd & ah(queue_receiving(que)-{task} = queue_receiving(que)) & pr & dd & eh(queue_receiving(que),_h,Goal) & pr;
  dd & ph(que,!que.(que: queues => queue_sending(que) <: blocked\/suspended)) & pr & dd & ah(queue_sending(que)-{task} <: blocked-{task}\/suspended) & pr & dd & ph(pxQueue,que,task,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & dd & ah(queue_sending(que)-{task} = queue_sending(que)) & pr & dd & eh(queue_sending(que),_h,Goal) & pr;
  dd & ph(que,!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) & pr & dd & dc(pxQueue = que) & pr & dd & ah((queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que) = queue_receiving(que)) & pr & ah(pxQueue/=que) & pr & pr & dd & eh((queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que),_h,Goal) & ah(queue_receiving(que)-{task} <: blocked-{task}\/suspended) & pr & dd & ph(pxQueue,que,task,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_receiving(q1) => tk/:queue_receiving(q2))) & pr & pr & pr & pr & pr & dd & ah(queue_receiving(que)-{task} = queue_receiving(que)) & pr & dd & eh(queue_receiving(que),_h,Goal) & pr;
  dd & ph(que,!que.(que: queues => queue_sending(que) <: blocked\/suspended)) & pr & dd & ah(queue_sending(que)-{task} <: blocked-{task}\/suspended) & pr & dd & ph(pxQueue,que,task,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & dd & ah(queue_sending(que)-{task} = queue_sending(que)) & pr & dd & eh(queue_sending(que),_h,Goal) & pr;
  dd & ph(que,!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) & pr & dd & dc(pxQueue = que) & pr & dd & ah((queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que) = queue_receiving(que)) & pr & ah(pxQueue/=que) & pr & pr & dd & eh((queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que),_h,Goal) & ah(queue_receiving(que)-{task} <: blocked-{task}\/suspended) & pr & dd & ph(pxQueue,que,task,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_receiving(q1) => tk/:queue_receiving(q2))) & pr & pr & pr & pr & pr & dd & ah(queue_receiving(que)-{task} = queue_receiving(que)) & pr & dd & eh(queue_receiving(que),_h,Goal) & pr;
  dd & ph(que,!que.(que: queues => queue_sending(que) <: blocked\/suspended)) & pr & dd & ah(queue_sending(que)-{task} <: blocked-{task}\/suspended) & pr & dd & ph(pxQueue,que,task,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & dd & ah(queue_sending(que)-{task} = queue_sending(que)) & pr & dd & eh(queue_sending(que),_h,Goal) & pr;
  dd & ph(que,!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) & pr & dd & dc(pxQueue = que) & pr & dd & ah((queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que) = queue_receiving(que)) & pr & dd & eh((queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que),_h,Goal) & ah(queue_receiving(que)-{task} <: blocked\/suspended-{task}) & pr & dd & ph(pxQueue,que,task,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_receiving(q1) => tk/:queue_receiving(q2))) & pr & pr & pr & pr & pr & dd & ah(queue_receiving(que)-{task} = queue_receiving(que)) & pr & dd & eh(queue_receiving(que),_h,AllHyp) & pr;
  dd & ph(que,!que.(que: queues => queue_sending(que) <: blocked\/suspended)) & pr & dd & ah(queue_sending(que)-{task} <: blocked\/suspended-{task}) & pr & dd & ph(pxQueue,que,task,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & dd & ah(queue_sending(que)-{task} = queue_sending(que)) & pr & dd & eh(queue_sending(que),_h,Goal) & pr;
  dd & ph(que,!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) & pr & dd & dc(pxQueue = que) & pr & dd & ah((queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que) = queue_receiving(que)) & pr & dd & eh((queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que),_h,Goal) & ah(queue_receiving(que)-{task} <: blocked\/suspended-{task}) & pr & dd & ph(pxQueue,que,task,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_receiving(q1) => tk/:queue_receiving(q2))) & pr & pr & pr & pr & pr & dd & ah(queue_receiving(que)-{task} = queue_receiving(que)) & pr & dd & eh(queue_receiving(que),_h,AllHyp) & pr;
  dd & ph(que,!que.(que: queues => queue_sending(que) <: blocked\/suspended)) & pr & dd & ah(queue_sending(que)-{task} <: blocked\/suspended-{task}) & pr & dd & ph(pxQueue,que,task,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & dd & ah(queue_sending(que)-{task} = queue_sending(que)) & pr & dd & eh(queue_sending(que),_h,Goal) & pr;
  dd & ph(que,!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) & pr & dd & dc(pxQueue = que) & pr & dd & ah((queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que) = queue_receiving(que)) & pr & dd & eh((queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que),_h,Goal) & ah(queue_receiving(que)-{task} <: blocked\/suspended-{task}) & pr & dd & ph(pxQueue,que,task,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_receiving(q1) => tk/:queue_receiving(q2))) & pr & pr & pr & pr & pr & dd & ah(queue_receiving(que)-{task} = queue_receiving(que)) & pr & dd & eh(queue_receiving(que),_h,AllHyp) & pr;
  dd & ph(que,!que.(que: queues => queue_sending(que) <: blocked\/suspended)) & pr & dd & ah(queue_sending(que)-{task} <: blocked\/suspended-{task}) & pr & dd & ph(pxQueue,que,task,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & dd & ah(queue_sending(que)-{task} = queue_sending(que)) & pr & dd & eh(queue_sending(que),_h,Goal) & pr;
  dd & ph(que,!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) & pr & dd & dc(pxQueue = que) & pr & dd & ah((queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que) = queue_receiving(que)) & pr & dd & eh((queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que),_h,Goal) & ah(queue_receiving(que)-{task} <: blocked\/suspended-{task}) & pr & dd & ph(pxQueue,que,task,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_receiving(q1) => tk/:queue_receiving(q2))) & pr & pr & pr & pr & pr & dd & ah(queue_receiving(que)-{task} = queue_receiving(que)) & pr & dd & eh(queue_receiving(que),_h,AllHyp) & pr;
  dd & ph(que,!que.(que: queues => queue_sending(que) <: blocked\/suspended)) & pr & dd & ah(queue_sending(que)-{task} <: blocked\/suspended-{task}) & pr & dd & ph(pxQueue,que,task,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & dd & ah(queue_sending(que)-{task} = queue_sending(que)) & pr & dd & eh(queue_sending(que),_h,Goal) & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & ph(que,!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) & pr & dd & dc(pxQueue = que) & pr & dd & ah((queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que) = queue_receiving(que)) & pr & ah(pxQueue/=que) & pr;
  dd & ph(que,!que.(que: queues => queue_sending(que) <: blocked\/suspended)) & pr & dd & ah(queue_sending(que)-{task} <: blocked-{task}\/suspended) & pr & dd & ph(pxQueue,que,task,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & dd & ah(queue_sending(que)-{task} = queue_sending(que)) & pr & dd & eh(queue_sending(que),_h,Goal) & pr;
  dd & ph(que,!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) & pr & dd & dc(pxQueue = que) & pr & dd & ah((queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que) = queue_receiving(que)) & pr & ah(pxQueue/=que) & pr & pr & dd & eh((queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que),_h,Goal) & ah(queue_receiving(que)-{task} <: blocked-{task}\/suspended) & pr & dd & ph(pxQueue,que,task,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_receiving(q1) => tk/:queue_receiving(q2))) & pr & pr & pr & pr & pr & dd & ah(queue_receiving(que)-{task} = queue_receiving(que)) & pr & dd & eh(queue_receiving(que),_h,Goal) & pr;
  dd & ph(que,!que.(que: queues => queue_sending(que) <: blocked\/suspended)) & pr & dd & ah(queue_sending(que)-{task} <: blocked-{task}\/suspended) & pr & dd & ph(pxQueue,que,task,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & dd & ah(queue_sending(que)-{task} = queue_sending(que)) & pr & dd & eh(queue_sending(que),_h,Goal) & pr;
  dd & ph(que,!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) & pr & dd & dc(pxQueue = que) & pr & dd & ah((queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que) = queue_receiving(que)) & pr & ah(pxQueue/=que) & pr & pr & dd & eh((queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que),_h,Goal) & ah(queue_receiving(que)-{task} <: blocked-{task}\/suspended) & pr & dd & ph(pxQueue,que,task,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_receiving(q1) => tk/:queue_receiving(q2))) & pr & pr & pr & pr & pr & dd & ah(queue_receiving(que)-{task} = queue_receiving(que)) & pr & dd & eh(queue_receiving(que),_h,Goal) & pr;
  dd & ph(que,!que.(que: queues => queue_sending(que) <: blocked\/suspended)) & pr & dd & ah(queue_sending(que)-{task} <: blocked-{task}\/suspended) & pr & dd & ph(pxQueue,que,task,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & dd & ah(queue_sending(que)-{task} = queue_sending(que)) & pr & dd & eh(queue_sending(que),_h,Goal) & pr;
  dd & ph(que,!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) & pr & dd & dc(pxQueue = que) & pr & dd & ah((queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que) = queue_receiving(que)) & pr & ah(pxQueue/=que) & pr & pr & dd & eh((queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que),_h,Goal) & ah(queue_receiving(que)-{task} <: blocked-{task}\/suspended) & pr & dd & ph(pxQueue,que,task,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_receiving(q1) => tk/:queue_receiving(q2))) & pr & pr & pr & pr & pr & dd & ah(queue_receiving(que)-{task} = queue_receiving(que)) & pr & dd & eh(queue_receiving(que),_h,Goal) & pr;
  dd & ph(que,!que.(que: queues => queue_sending(que) <: blocked\/suspended)) & pr & dd & ah(queue_sending(que)-{task} <: blocked-{task}\/suspended) & pr & dd & ph(pxQueue,que,task,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & dd & ah(queue_sending(que)-{task} = queue_sending(que)) & pr & dd & eh(queue_sending(que),_h,Goal) & pr;
  dd & ph(que,!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) & pr & dd & dc(pxQueue = que) & pr & dd & ah((queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que) = queue_receiving(que)) & ah(pxQueue/=que) & pr & ah(pxQueue/=que) & pr & ah(pxQueue/=que) & pr & ah(queue_receiving(que)-{task} <: blocked\/suspended-{task}) & pr & dd & ph(pxQueue,que,task,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_receiving(q1) => tk/:queue_receiving(q2))) & pr & pr & pr & pr & pr & dd & ah(queue_receiving(que)-{task} = queue_receiving(que)) & pr & dd & eh(queue_receiving(que),_h,Goal) & pr & dd & pr & pr & pr & ah(queue_receiving(que)-{task} <: blocked\/suspended-{task}) & pr & dd & ph(pxQueue,que,task,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_receiving(q1) => tk/:queue_receiving(q2))) & pr & pr & pr & pr & pr & dd & ah(queue_receiving(que)-{task} = queue_receiving(que)) & pr & dd & eh(queue_receiving(que),_h,Goal) & pr & dd & pr;
  dd & ph(que,!que.(que: queues => queue_sending(que) <: blocked\/suspended)) & pr & dd & ah(queue_sending(que)-{task} <: blocked\/suspended-{task}) & pr & dd & ph(pxQueue,que,task,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & dd & ah(queue_sending(que)-{task} = queue_sending(que)) & pr & dd & eh(queue_sending(que),_h,Goal) & pr;
  dd & ph(que,!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) & pr & dd & dc(pxQueue = que) & pr & dd & ah((queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que) = queue_receiving(que)) & ah(pxQueue/=que) & pr & ah(pxQueue/=que) & pr & ah(pxQueue/=que) & pr & ah(queue_receiving(que)-{task} <: blocked\/suspended-{task}) & pr & dd & ph(pxQueue,que,task,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_receiving(q1) => tk/:queue_receiving(q2))) & pr & pr & pr & pr & pr & dd & ah(queue_receiving(que)-{task} = queue_receiving(que)) & pr & dd & eh(queue_receiving(que),_h,Goal) & pr & dd & pr & pr & pr & ah(queue_receiving(que)-{task} <: blocked\/suspended-{task}) & pr & dd & ph(pxQueue,que,task,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_receiving(q1) => tk/:queue_receiving(q2))) & pr & pr & pr & pr & pr & dd & ah(queue_receiving(que)-{task} = queue_receiving(que)) & pr & dd & eh(queue_receiving(que),_h,Goal) & pr & dd & pr;
  dd & ph(que,!que.(que: queues => queue_sending(que) <: blocked\/suspended)) & pr & dd & ah(queue_sending(que)-{task} <: blocked\/suspended-{task}) & pr & dd & ph(pxQueue,que,task,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & dd & ah(queue_sending(que)-{task} = queue_sending(que)) & pr & dd & eh(queue_sending(que),_h,Goal) & pr;
  dd & ph(que,!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) & pr & dd & dc(pxQueue = que) & pr & dd & ah((queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que) = queue_receiving(que)) & ah(pxQueue/=que) & pr & ah(pxQueue/=que) & pr & ah(pxQueue/=que) & pr & ah(queue_receiving(que)-{task} <: blocked\/suspended-{task}) & pr & dd & ph(pxQueue,que,task,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_receiving(q1) => tk/:queue_receiving(q2))) & pr & pr & pr & pr & pr & dd & ah(queue_receiving(que)-{task} = queue_receiving(que)) & pr & dd & eh(queue_receiving(que),_h,Goal) & pr & dd & pr & pr & pr & ah(queue_receiving(que)-{task} <: blocked\/suspended-{task}) & pr & dd & ph(pxQueue,que,task,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_receiving(q1) => tk/:queue_receiving(q2))) & pr & pr & pr & pr & pr & dd & ah(queue_receiving(que)-{task} = queue_receiving(que)) & pr & dd & eh(queue_receiving(que),_h,Goal) & pr & dd & pr;
  dd & ph(que,!que.(que: queues => queue_sending(que) <: blocked\/suspended)) & pr & dd & ah(queue_sending(que)-{task} <: blocked\/suspended-{task}) & pr & dd & ph(pxQueue,que,task,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & dd & ah(queue_sending(que)-{task} = queue_sending(que)) & pr & dd & eh(queue_sending(que),_h,Goal) & pr;
  dd & ph(que,!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) & pr & dd & dc(pxQueue = que) & pr & dd & ah((queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que) = queue_receiving(que)) & ah(pxQueue/=que) & pr & ah(pxQueue/=que) & pr & ah(pxQueue/=que) & pr & ah(queue_receiving(que)-{task} <: blocked\/suspended-{task}) & pr & dd & ph(pxQueue,que,task,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_receiving(q1) => tk/:queue_receiving(q2))) & pr & pr & pr & pr & pr & dd & ah(queue_receiving(que)-{task} = queue_receiving(que)) & pr & dd & eh(queue_receiving(que),_h,Goal) & pr & dd & pr & pr & pr & ah(queue_receiving(que)-{task} <: blocked\/suspended-{task}) & pr & dd & ph(pxQueue,que,task,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_receiving(q1) => tk/:queue_receiving(q2))) & pr & pr & pr & pr & pr & dd & ah(queue_receiving(que)-{task} = queue_receiving(que)) & pr & dd & eh(queue_receiving(que),_h,Goal) & pr & dd & pr;
  dd & ph(que,!que.(que: queues => queue_sending(que) <: blocked\/suspended)) & pr & dd & ah(queue_sending(que)-{task} <: blocked\/suspended-{task}) & pr & dd & ph(pxQueue,que,task,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & dd & ah(queue_sending(que)-{task} = queue_sending(que)) & pr & dd & eh(queue_sending(que),_h,Goal) & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & ph(que,!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) & pr & dd & ah(blocked\/suspended <: blocked\/(suspended\/{running})) & pr & pr & ah(suspended <: suspended\/{running}) & pr & dd & ah(suspended\/{running} = suspended\/{running}) & pr & pr & pr & ah(suspended <: suspended\/{running}) & pr & pr & dd & pr;
  dd & ph(que,!que.(que: queues => queue_sending(que) <: blocked\/suspended)) & pr & dd & ah(blocked\/suspended <: blocked\/(suspended\/{running})) & pr & pr & ah(suspended <: suspended\/{running}) & pr & dd & pp(rp.0) & pr & ah(suspended <: suspended\/{running}) & pr & dd & ah(suspended <: suspended\/{running}) & dd & ah(suspended <: suspended\/{running}) & pr & dd & dc(pxQueue = que) & pr & dd & pr;
  pr;
  dd & ph(que,!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) & pr & dd & ah(blocked\/suspended <: blocked\/{running}\/suspended) & pr & dd & pr;
  dd & dc(pxQueue = que) & pr & ph(que,!que.(que: queues => queue_sending(que) <: blocked\/suspended)) & pr & dd & ah(blocked\/suspended <: blocked\/{running}\/suspended) & pr & dd & pr & pr & ah(queue_sending(que) <: blocked\/suspended & blocked\/suspended <: blocked\/{running}\/suspended) & pr & ph(que,!que.(que: queues => queue_sending(que) <: blocked\/suspended)) & pr & pr & pr & dd & ah((queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(que) = queue_sending(que)) & ah(pxQueue/=que) & pr & pr & pr & dd & eh((queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(que),_h,Goal) & ph(que,!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) & pr & dd & ah(blocked\/suspended <: blocked\/{running}\/suspended) & pr & dd & ah(queue_receiving(que) <: blocked\/suspended & blocked\/suspended <: blocked\/{running}\/suspended) & pr & pr & pr & ph(que,!que.(que: queues => queue_sending(que) <: blocked\/suspended)) & pr & dd & ah(queue_sending(que) <: blocked\/suspended & blocked\/suspended <: blocked\/{running}\/suspended) & pr & pr & pr & pr & ah(queue_sending(que) <: blocked\/suspended & blocked\/suspended <: blocked\/{running}\/suspended) & ph(que,!que.(que: queues => queue_sending(que) <: blocked\/suspended)) & pr & pr & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & pr;
  pr;
  pr;
  dd & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & pr;
  pr;
  pr;
  dd & ah(queue_sending = remove_task(queue_sending,unblocked)) & pr & dd & pr;
  dd & pr;
  pr;
  pr;
  pr;
  dd & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & ph(que,!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) & pr & dd & ah(blocked\/suspended <: blocked\/{running}\/suspended) & pr & dd & pr;
  dd & ph(que,!que.(que: queues => queue_sending(que) <: blocked\/suspended)) & pr & dd & ah(blocked\/suspended <: blocked\/{running}\/suspended) & pr & dd & pr;
  pr;
  dd & ph(que,!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) & pr & dd & ah(blocked\/suspended <: blocked\/{running}\/suspended) & pr & dd & pr;
  dd & ph(que,!que.(que: queues => queue_sending(que) <: blocked\/suspended)) & pr & dd & ah(blocked\/suspended <: blocked\/{running}\/suspended) & pr & dd & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & ph(que,!que.(que: queues => queue_sending(que) <: blocked\/suspended)) & pr & dd & dc(task: queue_sending(que)) & dd & pr;
  dd & ph(que,!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) & pr & dd & dc(task: queue_receiving(que)) & dd & pr;
  pr;
  pr;
  pr;
  pr
END
&
THEORY PassList IS
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(2),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(2),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(2),?;
  Force(2),?;
  Force(0),?;
  Force(2),?;
  Force(3),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(2),?;
  Force(2),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(1),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(1),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(1),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(1),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(1),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(2),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(2),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(2),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(2),(?;0;1;2;3);
  Force(1),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(1),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(1),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(1),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(2),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(2),?;
  Force(2),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(2),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(1),(?;0;1;2;3);
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(2),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?
END
&
THEORY ManForms 
END
&
THEORY Version IS
  POVersion(V3.8.3)(CLT == "V3.7.6")(genOPO == KO,genDivergencePO == KO,local_op == OK);
  PRVersion("V3.3.3.p39")(CLT == "V3.7.6")
END
