
THEORY ProofList IS
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(216) & _f(217) & q_resumeAllSubstitution.6,(_f(228) => _f(229));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(216) & _f(217) & q_resumeAllSubstitution.5,(_f(226) => _f(227));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(216) & _f(217) & q_resumeAllSubstitution.4,(_f(224) => _f(225));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(216) & _f(217) & q_resumeAllSubstitution.3,(_f(222) => _f(223));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(216) & _f(217) & q_resumeAllSubstitution.2,(_f(220) => _f(221));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(216) & _f(217) & q_resumeAllSubstitution.1,(_f(218) => _f(219));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(206) & _f(207) & q_giveMutexSubstitution.3,(_f(212) => _f(213));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(206) & _f(207) & q_giveMutexSubstitution.2,(_f(210) => _f(211));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(206) & _f(207) & q_giveMutexSubstitution.1,(_f(208) => _f(209));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(202) & _f(203) & q_takeMutexSubstitution.1,(_f(204) => _f(205));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(180) & _f(181) & q_giveSemaphoreSubstitution.9,(_f(198) => _f(199));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(180) & _f(181) & q_giveSemaphoreSubstitution.8,(_f(196) => _f(197));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(180) & _f(181) & q_giveSemaphoreSubstitution.7,(_f(194) => _f(195));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(180) & _f(181) & q_giveSemaphoreSubstitution.6,(_f(192) => _f(193));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(180) & _f(181) & q_giveSemaphoreSubstitution.5,(_f(190) => _f(191));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(180) & _f(181) & q_giveSemaphoreSubstitution.4,(_f(188) => _f(189));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(180) & _f(181) & q_giveSemaphoreSubstitution.3,(_f(186) => _f(187));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(180) & _f(181) & q_giveSemaphoreSubstitution.2,(_f(184) => _f(185));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(180) & _f(181) & q_giveSemaphoreSubstitution.1,(_f(182) => _f(183));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(168) & _f(169) & q_takeSemaphoreSubstitution.5,(_f(178) => _f(179));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(168) & _f(169) & q_takeSemaphoreSubstitution.4,(_f(176) => _f(177));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(168) & _f(169) & q_takeSemaphoreSubstitution.3,(_f(174) => _f(175));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(168) & _f(169) & q_takeSemaphoreSubstitution.2,(_f(172) => _f(173));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(168) & _f(169) & q_takeSemaphoreSubstitution.1,(_f(170) => _f(171));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(146) & _f(147) & q_removeFromEventListQueueSubstitution.8,(_f(162) => _f(163));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(146) & _f(147) & q_removeFromEventListQueueSubstitution.7,(_f(160) => _f(161));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(146) & _f(147) & q_removeFromEventListQueueSubstitution.6,(_f(158) => _f(159));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(146) & _f(147) & q_removeFromEventListQueueSubstitution.5,(_f(156) => _f(157));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(146) & _f(147) & q_removeFromEventListQueueSubstitution.4,(_f(154) => _f(155));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(146) & _f(147) & q_removeFromEventListQueueSubstitution.3,(_f(152) => _f(153));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(146) & _f(147) & q_removeFromEventListQueueSubstitution.2,(_f(150) => _f(151));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(146) & _f(147) & q_removeFromEventListQueueSubstitution.1,(_f(148) => _f(149));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(138) & _f(139) & q_insertTaskWaitingToReceiveSubstitution.3,(_f(144) => _f(145));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(138) & _f(139) & q_insertTaskWaitingToReceiveSubstitution.2,(_f(142) => _f(143));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(138) & _f(139) & q_insertTaskWaitingToReceiveSubstitution.1,(_f(140) => _f(141));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(130) & _f(131) & q_insertTaskWaitingToSendSubstitution.3,(_f(136) => _f(137));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(130) & _f(131) & q_insertTaskWaitingToSendSubstitution.2,(_f(134) => _f(135));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(130) & _f(131) & q_insertTaskWaitingToSendSubstitution.1,(_f(132) => _f(133));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(102) & _f(103) & q_receivedItemSubstitution.13,(_f(128) => _f(129));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(102) & _f(103) & q_receivedItemSubstitution.12,(_f(126) => _f(127));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(102) & _f(103) & q_receivedItemSubstitution.11,(_f(124) => _f(125));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(102) & _f(103) & q_receivedItemSubstitution.10,(_f(122) => _f(123));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(102) & _f(103) & q_receivedItemSubstitution.9,(_f(120) => _f(121));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(102) & _f(103) & q_receivedItemSubstitution.8,(_f(118) => _f(119));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(102) & _f(103) & q_receivedItemSubstitution.7,(_f(116) => _f(117));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(102) & _f(103) & q_receivedItemSubstitution.6,(_f(114) => _f(115));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(102) & _f(103) & q_receivedItemSubstitution.5,(_f(112) => _f(113));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(102) & _f(103) & q_receivedItemSubstitution.4,(_f(110) => _f(111));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(102) & _f(103) & q_receivedItemSubstitution.3,(_f(108) => _f(109));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(102) & _f(103) & q_receivedItemSubstitution.2,(_f(106) => _f(107));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(102) & _f(103) & q_receivedItemSubstitution.1,(_f(104) => _f(105));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(74) & _f(75) & q_sendItemSubstitution.13,(_f(100) => _f(101));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(74) & _f(75) & q_sendItemSubstitution.12,(_f(98) => _f(99));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(74) & _f(75) & q_sendItemSubstitution.11,(_f(96) => _f(97));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(74) & _f(75) & q_sendItemSubstitution.10,(_f(94) => _f(95));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(74) & _f(75) & q_sendItemSubstitution.9,(_f(92) => _f(93));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(74) & _f(75) & q_sendItemSubstitution.8,(_f(90) => _f(91));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(74) & _f(75) & q_sendItemSubstitution.7,(_f(88) => _f(89));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(74) & _f(75) & q_sendItemSubstitution.6,(_f(86) => _f(87));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(74) & _f(75) & q_sendItemSubstitution.5,(_f(84) => _f(85));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(74) & _f(75) & q_sendItemSubstitution.4,(_f(82) => _f(83));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(74) & _f(75) & q_sendItemSubstitution.3,(_f(80) => _f(81));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(74) & _f(75) & q_sendItemSubstitution.2,(_f(78) => _f(79));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & _f(6) & _f(10) & _f(74) & _f(75) & q_sendItemSubstitution.1,(_f(76) => _f(77));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & Invariants.28,(_f(68) => _f(69));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & Invariants.27,(_f(66) => _f(67));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & Invariants.26,(_f(64) => _f(65));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & Invariants.25,(_f(62) => _f(63));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & Invariants.24,(_f(60) => _f(61));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & Invariants.23,(_f(58) => _f(59));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & Invariants.22,(_f(56) => _f(57));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & Invariants.21,(_f(54) => _f(55));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & Invariants.20,(_f(52) => _f(53));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & Invariants.19,(_f(50) => _f(51));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & Invariants.18,(_f(48) => _f(49));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & Invariants.17,(_f(46) => _f(47));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & Invariants.16,(_f(44) => _f(45));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & Invariants.15,(_f(42) => _f(43));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & Invariants.14,(_f(40) => _f(41));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & Invariants.13,(_f(38) => _f(39));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & Invariants.12,(_f(36) => _f(37));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & Invariants.11,(_f(34) => _f(35));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & Invariants.10,(_f(32) => _f(33));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & Invariants.9,(_f(30) => _f(31));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & Invariants.8,(_f(28) => _f(29));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & Invariants.7,(_f(26) => _f(27));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & Invariants.6,(_f(24) => _f(25));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & Invariants.5,(_f(22) => _f(23));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & Invariants.4,(_f(20) => _f(21));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & Invariants.3,(_f(18) => _f(19));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & Invariants.2,(_f(16) => _f(17));
_f(4) & _f(3) & _f(5) & _f(2) & _f(1) & _f(8) & _f(7) & _f(12) & _f(11) & _f(9) & _f(13) & Invariants.1,(_f(14) => _f(15))

END
&

THEORY Formulas IS
("`Component constraints'" & btrue);
("`Component properties'" & btrue);
("`Seen and used machines properties'" & BIT = 0..1 & MAX_DELAY: 0..maxint & 1<=MAX_DELAY & NULL_PARAMETER: PARAMETER & PRIORITY: POW(NAT) & TICK: POW(NAT) & TICK = 0..MAX_DELAY & TICK_INCREMENT: TICK*TICK +-> TICK & dom(TICK_INCREMENT) = TICK*TICK & TICK_INCREMENT = %(tick,inc).(tick: TICK & inc: TICK | (tick+inc) mod MAX_DELAY) & QUEUE_NULL: QUEUE & ITEM_NULL: ITEM & ITEM_EMPTY: ITEM & TASK_NULL: TASK & REMOVE_EVENT: TASK*POW(QUEUE)*(QUEUE +-> POW(TASK)) +-> (QUEUE +-> POW(TASK)) & REMOVE_EVENT = %(task,queues,pending).(task: TASK & queues: POW(QUEUE) & pending: QUEUE +-> POW(TASK) | %queue.(queue: queues & queue: dom(pending) | pending(queue)-{task})) & semGIVE_BLOCK_TIME: TICK & IDLE_PRIORITY: PRIORITY & IDLE_PRIORITY = 0 & QUEUE_LENGTH: POW(NAT) & QUEUE_LENGTH = 1..maxint & QUEUE_QUANT: POW(NAT) & QUEUE_QUANT = 0..maxint & NAME: FIN(INTEGER) & not(NAME = {}) & PARAMETER: FIN(INTEGER) & not(PARAMETER = {}) & TASK: FIN(INTEGER) & not(TASK = {}) & STACK: FIN(INTEGER) & not(STACK = {}) & TASK_CODE: FIN(INTEGER) & not(TASK_CODE = {}) & ITEM: FIN(INTEGER) & not(ITEM = {}) & QUEUE: FIN(INTEGER) & not(QUEUE = {}) & (1..3)*{SCHEDULER_STATE}: FIN(NATURAL*{SCHEDULER_STATE}) & not((1..3)*{SCHEDULER_STATE} = {}) & (1..2)*{COPY_POSITION}: FIN(NATURAL*{COPY_POSITION}) & not((1..2)*{COPY_POSITION} = {}) & (1..3)*{QUEUE_TYPE}: FIN(NATURAL*{QUEUE_TYPE}) & not((1..3)*{QUEUE_TYPE} = {}) & (1..10)*{ERROR_DEFINITION}: FIN(NATURAL*{ERROR_DEFINITION}) & not((1..10)*{ERROR_DEFINITION} = {}));
("`Included,imported and extended machines properties'" & btrue);
("`Previous components properties'" & remove_task: (QUEUE +-> POW(TASK))*POW(TASK) +-> (QUEUE +-> POW(TASK)) & dom(remove_task) = (QUEUE +-> POW(TASK))*POW(TASK) & remove_task = %(q_task,unblocked).(q_task: QUEUE +-> POW(TASK) & unblocked: POW(TASK) | %q1.(q1: QUEUE & q1: dom(q_task) | q_task(q1)-unblocked)) & update_first: (QUEUE +-> POW(TASK))*POW(TASK) +-> (QUEUE +-> TASK) & dom(update_first) = (QUEUE +-> POW(TASK))*POW(TASK) & update_first = %(q_task,unblocked).(q_task: QUEUE +-> POW(TASK) & unblocked: POW(TASK) | SET(q1,task).(q1: QUEUE & q1: dom(q_task) & not(q_task(q1): POW(unblocked)) & task: TASK & task: q_task(q1) & not(task: unblocked))));
("`Component invariant'" & queue_size: QUEUE +-> QUEUE_LENGTH & queue_quant: QUEUE +-> QUEUE_QUANT & queue_items_r: QUEUE +-> iseq(ITEM) & dom(queue_size) = queues & dom(queue_quant) = queues & dom(queue_items_r) = dom(queue_items) & !queue.(queue: queues => queue_quant(queue)<=queue_size(queue)) & !queue.(queue: queues_msg => ran(queue_items_r(queue)) = queue_items(queue) & size(queue_items_r(queue)) = queue_quant(queue)) & !queue.(queue: queues_msg_empty => queue_quant(queue) = 0) & !queue.(queue: queues_msg_full => queue_quant(queue) = queue_size(queue)) & !queue.(queue: queues_msg & queue_quant(queue) = queue_size(queue) => queue: queues_msg_full) & !queue.(queue: queues_msg & queue_quant(queue) = queue_size(queue) => queue: queues_msg_full) & !queue.(queue: queues_msg & queue_quant(queue) = 0 => queue: queues_msg_empty) & !queue.(queue: queues_msg & not(queue: queues_msg_full) => queue_quant(queue)+1<=queue_size(queue)) & !queue.(queue: queues_msg & not(queue: queues_msg_empty) => 1<=queue_quant(queue)) & !queue.(queue: queues_msg & 1<=queue_quant(queue) => not(queue: queues_msg_empty)) & !queue.(queue: queues_msg & queue_quant(queue)+1<=queue_size(queue) => not(queue: queues_msg_full)) & !semaphore.(semaphore: semaphores_busy => queue_quant(semaphore) = 0) & !semaphore.(semaphore: semaphores & queue_quant(semaphore) = 0 => semaphore: semaphores_busy) & !semaphore.(semaphore: semaphores & not(semaphore: semaphores_busy) => not(queue_quant(semaphore) = 0)) & !semaphore.(semaphore: semaphores & not(queue_quant(semaphore) = 0) => not(semaphore: semaphores_busy)) & !mutex.(mutex: mutexes => queue_size(mutex) = 1) & !mutex.(mutex: mutexes_busy => queue_quant(mutex) = 0) & !mutex.(mutex: mutexes & queue_quant(mutex) = 0 => mutex: mutexes_busy) & !mutex.(mutex: mutexes & not(mutex: mutexes_busy) => queue_quant(mutex) = 1) & !mutex.(mutex: mutexes & queue_quant(mutex) = 1 => not(mutex: mutexes_busy)) & btrue);
("`Seen and used machines invariants'" & active: BOOL);
("`Included,imported and extended machines invariants'" & btrue);
("`Previous components invariants'" & queues: POW(QUEUE) & queue_receiving: QUEUE +-> POW(TASK) & queue_sending: QUEUE +-> POW(TASK) & queues = dom(queue_receiving) & queues = dom(queue_sending) & first_receiving: QUEUE +-> TASK & first_sending: QUEUE +-> TASK & dom(first_receiving) = dom(queue_receiving) & dom(first_sending) = dom(queue_sending) & !q1.(q1: queues & q1: dom(first_receiving) & not(queue_receiving(q1) = {}) => first_receiving(q1): queue_receiving(q1)) & !q1.(q1: queues & q1: dom(first_sending) & not(queue_sending(q1) = {}) => first_sending(q1): queue_sending(q1)) & queues_msg: POW(queues) & queues_msg_full: POW(queues_msg) & queues_msg_empty: POW(queues_msg) & queues_msg_full/\queues_msg_empty = {} & queue_items: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: queue_receiving(q1) => not(tk: queue_receiving(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: queue_sending(q1) => not(tk: queue_sending(q2))) & semaphores: POW(QUEUE) & semaphores: POW(queues) & semaphores_busy: POW(semaphores) & semaphores_full: POW(semaphores) & semaphores_busy/\semaphores_full = {} & mutexes: POW(queues) & mutex_holder: QUEUE +-> TASK & mutexes = dom(mutex_holder) & mutexes_busy: POW(mutexes) & !mt.(mt: mutexes_busy => not(mutex_holder(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy) => mutex_holder(mt) = TASK_NULL) & queues_msg/\semaphores = {} & queues_msg/\mutexes = {} & mutexes/\semaphores = {});
("`Component assertions'" & btrue);
("`Seen and used machines assertions'" & BIT: POW(NATURAL) & QUEUE_LENGTH: POW(QUEUE_QUANT));
("`Included,imported and extended machines assertions'" & btrue);
("`Previous components assertions'" & !que.(que: QUEUE & not(que: queues) => not(que: mutexes)) & !que.(que: QUEUE & not(que: queues) => not(que: semaphores)) & !que.(que: queues_msg & que: queues_msg_full => not(que: queues_msg_empty)) & !que.(que: queues_msg & que: queues_msg_empty => not(que: queues_msg_full)));
("`Local hypotheses'" & queue_size: QUEUE +-> QUEUE_LENGTH & queue_quant: QUEUE +-> QUEUE_QUANT & queue_items_r: QUEUE +-> iseq(ITEM) & dom(queue_size) = queues & dom(queue_quant) = queues & dom(queue_items_r) = dom(queue_items) & !queue.(queue: queues => queue_quant(queue)<=queue_size(queue)) & queue: queues_msg);
(queue: dom(queue_items_r));
("`Local hypotheses'" & queue_size: QUEUE +-> QUEUE_LENGTH & queue_quant: QUEUE +-> QUEUE_QUANT & queue_items_r: QUEUE +-> iseq(ITEM) & dom(queue_size) = queues & dom(queue_quant) = queues & dom(queue_items_r) = dom(queue_items) & !queue.(queue: queues => queue_quant(queue)<=queue_size(queue)) & queue: queues_msg);
(queue: dom(queue_items));
("`Local hypotheses'" & queue_size: QUEUE +-> QUEUE_LENGTH & queue_quant: QUEUE +-> QUEUE_QUANT & queue_items_r: QUEUE +-> iseq(ITEM) & dom(queue_size) = queues & dom(queue_quant) = queues & dom(queue_items_r) = dom(queue_items) & !queue.(queue: queues => queue_quant(queue)<=queue_size(queue)) & queue: queues_msg & ran(queue_items_r(queue)) = queue_items(queue));
(queue_items_r(queue): seq(ran(queue_items_r(queue))));
("`Local hypotheses'" & queue_size: QUEUE +-> QUEUE_LENGTH & queue_quant: QUEUE +-> QUEUE_QUANT & queue_items_r: QUEUE +-> iseq(ITEM) & dom(queue_size) = queues & dom(queue_quant) = queues & dom(queue_items_r) = dom(queue_items) & !queue.(queue: queues => queue_quant(queue)<=queue_size(queue)) & queue: queues_msg & ran(queue_items_r(queue)) = queue_items(queue));
(queue: dom(queue_items_r));
("`Local hypotheses'" & queue_size: QUEUE +-> QUEUE_LENGTH & queue_quant: QUEUE +-> QUEUE_QUANT & queue_items_r: QUEUE +-> iseq(ITEM) & dom(queue_size) = queues & dom(queue_quant) = queues & dom(queue_items_r) = dom(queue_items) & !queue.(queue: queues => queue_quant(queue)<=queue_size(queue)) & queue: queues_msg & ran(queue_items_r(queue)) = queue_items(queue));
(queue: dom(queue_quant));
("`Local hypotheses'" & queue_size: QUEUE +-> QUEUE_LENGTH & queue_quant: QUEUE +-> QUEUE_QUANT & queue_items_r: QUEUE +-> iseq(ITEM) & dom(queue_size) = queues & dom(queue_quant) = queues & dom(queue_items_r) = dom(queue_items) & !queue.(queue: queues => queue_quant(queue)<=queue_size(queue)) & !queue.(queue: queues_msg => ran(queue_items_r(queue)) = queue_items(queue) & size(queue_items_r(queue)) = queue_quant(queue)) & queue: queues_msg_empty);
(queue: dom(queue_quant));
("`Local hypotheses'" & queue_size: QUEUE +-> QUEUE_LENGTH & queue_quant: QUEUE +-> QUEUE_QUANT & queue_items_r: QUEUE +-> iseq(ITEM) & dom(queue_size) = queues & dom(queue_quant) = queues & dom(queue_items_r) = dom(queue_items) & !queue.(queue: queues => queue_quant(queue)<=queue_size(queue)) & !queue.(queue: queues_msg => ran(queue_items_r(queue)) = queue_items(queue) & size(queue_items_r(queue)) = queue_quant(queue)) & !queue.(queue: queues_msg_empty => queue_quant(queue) = 0) & queue: queues_msg_full);
(queue: dom(queue_quant));
("`Local hypotheses'" & queue_size: QUEUE +-> QUEUE_LENGTH & queue_quant: QUEUE +-> QUEUE_QUANT & queue_items_r: QUEUE +-> iseq(ITEM) & dom(queue_size) = queues & dom(queue_quant) = queues & dom(queue_items_r) = dom(queue_items) & !queue.(queue: queues => queue_quant(queue)<=queue_size(queue)) & !queue.(queue: queues_msg => ran(queue_items_r(queue)) = queue_items(queue) & size(queue_items_r(queue)) = queue_quant(queue)) & !queue.(queue: queues_msg_empty => queue_quant(queue) = 0) & queue: queues_msg_full);
(queue: dom(queue_size));
("`Local hypotheses'" & queue_size: QUEUE +-> QUEUE_LENGTH & queue_quant: QUEUE +-> QUEUE_QUANT & queue_items_r: QUEUE +-> iseq(ITEM) & dom(queue_size) = queues & dom(queue_quant) = queues & dom(queue_items_r) = dom(queue_items) & !queue.(queue: queues => queue_quant(queue)<=queue_size(queue)) & !queue.(queue: queues_msg => ran(queue_items_r(queue)) = queue_items(queue) & size(queue_items_r(queue)) = queue_quant(queue)) & !queue.(queue: queues_msg_empty => queue_quant(queue) = 0) & !queue.(queue: queues_msg_full => queue_quant(queue) = queue_size(queue)) & queue: queues_msg);
(queue: dom(queue_quant));
("`Local hypotheses'" & queue_size: QUEUE +-> QUEUE_LENGTH & queue_quant: QUEUE +-> QUEUE_QUANT & queue_items_r: QUEUE +-> iseq(ITEM) & dom(queue_size) = queues & dom(queue_quant) = queues & dom(queue_items_r) = dom(queue_items) & !queue.(queue: queues => queue_quant(queue)<=queue_size(queue)) & !queue.(queue: queues_msg => ran(queue_items_r(queue)) = queue_items(queue) & size(queue_items_r(queue)) = queue_quant(queue)) & !queue.(queue: queues_msg_empty => queue_quant(queue) = 0) & !queue.(queue: queues_msg_full => queue_quant(queue) = queue_size(queue)) & queue: queues_msg);
(queue: dom(queue_size));
("`Local hypotheses'" & queue_size: QUEUE +-> QUEUE_LENGTH & queue_quant: QUEUE +-> QUEUE_QUANT & queue_items_r: QUEUE +-> iseq(ITEM) & dom(queue_size) = queues & dom(queue_quant) = queues & dom(queue_items_r) = dom(queue_items) & !queue.(queue: queues => queue_quant(queue)<=queue_size(queue)) & !queue.(queue: queues_msg => ran(queue_items_r(queue)) = queue_items(queue) & size(queue_items_r(queue)) = queue_quant(queue)) & !queue.(queue: queues_msg_empty => queue_quant(queue) = 0) & !queue.(queue: queues_msg_full => queue_quant(queue) = queue_size(queue)) & !queue.(queue: queues_msg & queue_quant(queue) = queue_size(queue) => queue: queues_msg_full) & queue: queues_msg);
(queue: dom(queue_quant));
("`Local hypotheses'" & queue_size: QUEUE +-> QUEUE_LENGTH & queue_quant: QUEUE +-> QUEUE_QUANT & queue_items_r: QUEUE +-> iseq(ITEM) & dom(queue_size) = queues & dom(queue_quant) = queues & dom(queue_items_r) = dom(queue_items) & !queue.(queue: queues => queue_quant(queue)<=queue_size(queue)) & !queue.(queue: queues_msg => ran(queue_items_r(queue)) = queue_items(queue) & size(queue_items_r(queue)) = queue_quant(queue)) & !queue.(queue: queues_msg_empty => queue_quant(queue) = 0) & !queue.(queue: queues_msg_full => queue_quant(queue) = queue_size(queue)) & !queue.(queue: queues_msg & queue_quant(queue) = queue_size(queue) => queue: queues_msg_full) & queue: queues_msg);
(queue: dom(queue_size));
("`Local hypotheses'" & queue_size: QUEUE +-> QUEUE_LENGTH & queue_quant: QUEUE +-> QUEUE_QUANT & queue_items_r: QUEUE +-> iseq(ITEM) & dom(queue_size) = queues & dom(queue_quant) = queues & dom(queue_items_r) = dom(queue_items) & !queue.(queue: queues => queue_quant(queue)<=queue_size(queue)) & !queue.(queue: queues_msg => ran(queue_items_r(queue)) = queue_items(queue) & size(queue_items_r(queue)) = queue_quant(queue)) & !queue.(queue: queues_msg_empty => queue_quant(queue) = 0) & !queue.(queue: queues_msg_full => queue_quant(queue) = queue_size(queue)) & !queue.(queue: queues_msg & queue_quant(queue) = queue_size(queue) => queue: queues_msg_full) & queue: queues_msg);
(queue: dom(queue_quant));
("`Local hypotheses'" & queue_size: QUEUE +-> QUEUE_LENGTH & queue_quant: QUEUE +-> QUEUE_QUANT & queue_items_r: QUEUE +-> iseq(ITEM) & dom(queue_size) = queues & dom(queue_quant) = queues & dom(queue_items_r) = dom(queue_items) & !queue.(queue: queues => queue_quant(queue)<=queue_size(queue)) & !queue.(queue: queues_msg => ran(queue_items_r(queue)) = queue_items(queue) & size(queue_items_r(queue)) = queue_quant(queue)) & !queue.(queue: queues_msg_empty => queue_quant(queue) = 0) & !queue.(queue: queues_msg_full => queue_quant(queue) = queue_size(queue)) & !queue.(queue: queues_msg & queue_quant(queue) = queue_size(queue) => queue: queues_msg_full) & !queue.(queue: queues_msg & queue_quant(queue) = 0 => queue: queues_msg_empty) & queue: queues_msg & not(queue: queues_msg_full));
(queue: dom(queue_quant));
("`Local hypotheses'" & queue_size: QUEUE +-> QUEUE_LENGTH & queue_quant: QUEUE +-> QUEUE_QUANT & queue_items_r: QUEUE +-> iseq(ITEM) & dom(queue_size) = queues & dom(queue_quant) = queues & dom(queue_items_r) = dom(queue_items) & !queue.(queue: queues => queue_quant(queue)<=queue_size(queue)) & !queue.(queue: queues_msg => ran(queue_items_r(queue)) = queue_items(queue) & size(queue_items_r(queue)) = queue_quant(queue)) & !queue.(queue: queues_msg_empty => queue_quant(queue) = 0) & !queue.(queue: queues_msg_full => queue_quant(queue) = queue_size(queue)) & !queue.(queue: queues_msg & queue_quant(queue) = queue_size(queue) => queue: queues_msg_full) & !queue.(queue: queues_msg & queue_quant(queue) = 0 => queue: queues_msg_empty) & queue: queues_msg & not(queue: queues_msg_full));
(queue: dom(queue_size));
("`Local hypotheses'" & queue_size: QUEUE +-> QUEUE_LENGTH & queue_quant: QUEUE +-> QUEUE_QUANT & queue_items_r: QUEUE +-> iseq(ITEM) & dom(queue_size) = queues & dom(queue_quant) = queues & dom(queue_items_r) = dom(queue_items) & !queue.(queue: queues => queue_quant(queue)<=queue_size(queue)) & !queue.(queue: queues_msg => ran(queue_items_r(queue)) = queue_items(queue) & size(queue_items_r(queue)) = queue_quant(queue)) & !queue.(queue: queues_msg_empty => queue_quant(queue) = 0) & !queue.(queue: queues_msg_full => queue_quant(queue) = queue_size(queue)) & !queue.(queue: queues_msg & queue_quant(queue) = queue_size(queue) => queue: queues_msg_full) & !queue.(queue: queues_msg & queue_quant(queue) = 0 => queue: queues_msg_empty) & !queue.(queue: queues_msg & not(queue: queues_msg_full) => queue_quant(queue)+1<=queue_size(queue)) & queue: queues_msg & not(queue: queues_msg_empty));
(queue: dom(queue_quant));
("`Local hypotheses'" & queue_size: QUEUE +-> QUEUE_LENGTH & queue_quant: QUEUE +-> QUEUE_QUANT & queue_items_r: QUEUE +-> iseq(ITEM) & dom(queue_size) = queues & dom(queue_quant) = queues & dom(queue_items_r) = dom(queue_items) & !queue.(queue: queues => queue_quant(queue)<=queue_size(queue)) & !queue.(queue: queues_msg => ran(queue_items_r(queue)) = queue_items(queue) & size(queue_items_r(queue)) = queue_quant(queue)) & !queue.(queue: queues_msg_empty => queue_quant(queue) = 0) & !queue.(queue: queues_msg_full => queue_quant(queue) = queue_size(queue)) & !queue.(queue: queues_msg & queue_quant(queue) = queue_size(queue) => queue: queues_msg_full) & !queue.(queue: queues_msg & queue_quant(queue) = 0 => queue: queues_msg_empty) & !queue.(queue: queues_msg & not(queue: queues_msg_full) => queue_quant(queue)+1<=queue_size(queue)) & !queue.(queue: queues_msg & not(queue: queues_msg_empty) => 1<=queue_quant(queue)) & queue: queues_msg);
(queue: dom(queue_quant));
("`Local hypotheses'" & queue_size: QUEUE +-> QUEUE_LENGTH & queue_quant: QUEUE +-> QUEUE_QUANT & queue_items_r: QUEUE +-> iseq(ITEM) & dom(queue_size) = queues & dom(queue_quant) = queues & dom(queue_items_r) = dom(queue_items) & !queue.(queue: queues => queue_quant(queue)<=queue_size(queue)) & !queue.(queue: queues_msg => ran(queue_items_r(queue)) = queue_items(queue) & size(queue_items_r(queue)) = queue_quant(queue)) & !queue.(queue: queues_msg_empty => queue_quant(queue) = 0) & !queue.(queue: queues_msg_full => queue_quant(queue) = queue_size(queue)) & !queue.(queue: queues_msg & queue_quant(queue) = queue_size(queue) => queue: queues_msg_full) & !queue.(queue: queues_msg & queue_quant(queue) = 0 => queue: queues_msg_empty) & !queue.(queue: queues_msg & not(queue: queues_msg_full) => queue_quant(queue)+1<=queue_size(queue)) & !queue.(queue: queues_msg & not(queue: queues_msg_empty) => 1<=queue_quant(queue)) & !queue.(queue: queues_msg & 1<=queue_quant(queue) => not(queue: queues_msg_empty)) & queue: queues_msg);
(queue: dom(queue_quant));
("`Local hypotheses'" & queue_size: QUEUE +-> QUEUE_LENGTH & queue_quant: QUEUE +-> QUEUE_QUANT & queue_items_r: QUEUE +-> iseq(ITEM) & dom(queue_size) = queues & dom(queue_quant) = queues & dom(queue_items_r) = dom(queue_items) & !queue.(queue: queues => queue_quant(queue)<=queue_size(queue)) & !queue.(queue: queues_msg => ran(queue_items_r(queue)) = queue_items(queue) & size(queue_items_r(queue)) = queue_quant(queue)) & !queue.(queue: queues_msg_empty => queue_quant(queue) = 0) & !queue.(queue: queues_msg_full => queue_quant(queue) = queue_size(queue)) & !queue.(queue: queues_msg & queue_quant(queue) = queue_size(queue) => queue: queues_msg_full) & !queue.(queue: queues_msg & queue_quant(queue) = 0 => queue: queues_msg_empty) & !queue.(queue: queues_msg & not(queue: queues_msg_full) => queue_quant(queue)+1<=queue_size(queue)) & !queue.(queue: queues_msg & not(queue: queues_msg_empty) => 1<=queue_quant(queue)) & !queue.(queue: queues_msg & 1<=queue_quant(queue) => not(queue: queues_msg_empty)) & queue: queues_msg);
(queue: dom(queue_size));
("`Local hypotheses'" & queue_size: QUEUE +-> QUEUE_LENGTH & queue_quant: QUEUE +-> QUEUE_QUANT & queue_items_r: QUEUE +-> iseq(ITEM) & dom(queue_size) = queues & dom(queue_quant) = queues & dom(queue_items_r) = dom(queue_items) & !queue.(queue: queues => queue_quant(queue)<=queue_size(queue)) & !queue.(queue: queues_msg => ran(queue_items_r(queue)) = queue_items(queue) & size(queue_items_r(queue)) = queue_quant(queue)) & !queue.(queue: queues_msg_empty => queue_quant(queue) = 0) & !queue.(queue: queues_msg_full => queue_quant(queue) = queue_size(queue)) & !queue.(queue: queues_msg & queue_quant(queue) = queue_size(queue) => queue: queues_msg_full) & !queue.(queue: queues_msg & queue_quant(queue) = 0 => queue: queues_msg_empty) & !queue.(queue: queues_msg & not(queue: queues_msg_full) => queue_quant(queue)+1<=queue_size(queue)) & !queue.(queue: queues_msg & not(queue: queues_msg_empty) => 1<=queue_quant(queue)) & !queue.(queue: queues_msg & 1<=queue_quant(queue) => not(queue: queues_msg_empty)) & !queue.(queue: queues_msg & queue_quant(queue)+1<=queue_size(queue) => not(queue: queues_msg_full)) & semaphore: semaphores_busy);
(semaphore: dom(queue_quant));
("`Local hypotheses'" & queue_size: QUEUE +-> QUEUE_LENGTH & queue_quant: QUEUE +-> QUEUE_QUANT & queue_items_r: QUEUE +-> iseq(ITEM) & dom(queue_size) = queues & dom(queue_quant) = queues & dom(queue_items_r) = dom(queue_items) & !queue.(queue: queues => queue_quant(queue)<=queue_size(queue)) & !queue.(queue: queues_msg => ran(queue_items_r(queue)) = queue_items(queue) & size(queue_items_r(queue)) = queue_quant(queue)) & !queue.(queue: queues_msg_empty => queue_quant(queue) = 0) & !queue.(queue: queues_msg_full => queue_quant(queue) = queue_size(queue)) & !queue.(queue: queues_msg & queue_quant(queue) = queue_size(queue) => queue: queues_msg_full) & !queue.(queue: queues_msg & queue_quant(queue) = 0 => queue: queues_msg_empty) & !queue.(queue: queues_msg & not(queue: queues_msg_full) => queue_quant(queue)+1<=queue_size(queue)) & !queue.(queue: queues_msg & not(queue: queues_msg_empty) => 1<=queue_quant(queue)) & !queue.(queue: queues_msg & 1<=queue_quant(queue) => not(queue: queues_msg_empty)) & !queue.(queue: queues_msg & queue_quant(queue)+1<=queue_size(queue) => not(queue: queues_msg_full)) & !semaphore.(semaphore: semaphores_busy => queue_quant(semaphore) = 0) & semaphore: semaphores);
(semaphore: dom(queue_quant));
("`Local hypotheses'" & queue_size: QUEUE +-> QUEUE_LENGTH & queue_quant: QUEUE +-> QUEUE_QUANT & queue_items_r: QUEUE +-> iseq(ITEM) & dom(queue_size) = queues & dom(queue_quant) = queues & dom(queue_items_r) = dom(queue_items) & !queue.(queue: queues => queue_quant(queue)<=queue_size(queue)) & !queue.(queue: queues_msg => ran(queue_items_r(queue)) = queue_items(queue) & size(queue_items_r(queue)) = queue_quant(queue)) & !queue.(queue: queues_msg_empty => queue_quant(queue) = 0) & !queue.(queue: queues_msg_full => queue_quant(queue) = queue_size(queue)) & !queue.(queue: queues_msg & queue_quant(queue) = queue_size(queue) => queue: queues_msg_full) & !queue.(queue: queues_msg & queue_quant(queue) = 0 => queue: queues_msg_empty) & !queue.(queue: queues_msg & not(queue: queues_msg_full) => queue_quant(queue)+1<=queue_size(queue)) & !queue.(queue: queues_msg & not(queue: queues_msg_empty) => 1<=queue_quant(queue)) & !queue.(queue: queues_msg & 1<=queue_quant(queue) => not(queue: queues_msg_empty)) & !queue.(queue: queues_msg & queue_quant(queue)+1<=queue_size(queue) => not(queue: queues_msg_full)) & !semaphore.(semaphore: semaphores_busy => queue_quant(semaphore) = 0) & !semaphore.(semaphore: semaphores & queue_quant(semaphore) = 0 => semaphore: semaphores_busy) & semaphore: semaphores & not(semaphore: semaphores_busy));
(semaphore: dom(queue_quant));
("`Local hypotheses'" & queue_size: QUEUE +-> QUEUE_LENGTH & queue_quant: QUEUE +-> QUEUE_QUANT & queue_items_r: QUEUE +-> iseq(ITEM) & dom(queue_size) = queues & dom(queue_quant) = queues & dom(queue_items_r) = dom(queue_items) & !queue.(queue: queues => queue_quant(queue)<=queue_size(queue)) & !queue.(queue: queues_msg => ran(queue_items_r(queue)) = queue_items(queue) & size(queue_items_r(queue)) = queue_quant(queue)) & !queue.(queue: queues_msg_empty => queue_quant(queue) = 0) & !queue.(queue: queues_msg_full => queue_quant(queue) = queue_size(queue)) & !queue.(queue: queues_msg & queue_quant(queue) = queue_size(queue) => queue: queues_msg_full) & !queue.(queue: queues_msg & queue_quant(queue) = 0 => queue: queues_msg_empty) & !queue.(queue: queues_msg & not(queue: queues_msg_full) => queue_quant(queue)+1<=queue_size(queue)) & !queue.(queue: queues_msg & not(queue: queues_msg_empty) => 1<=queue_quant(queue)) & !queue.(queue: queues_msg & 1<=queue_quant(queue) => not(queue: queues_msg_empty)) & !queue.(queue: queues_msg & queue_quant(queue)+1<=queue_size(queue) => not(queue: queues_msg_full)) & !semaphore.(semaphore: semaphores_busy => queue_quant(semaphore) = 0) & !semaphore.(semaphore: semaphores & queue_quant(semaphore) = 0 => semaphore: semaphores_busy) & !semaphore.(semaphore: semaphores & not(semaphore: semaphores_busy) => not(queue_quant(semaphore) = 0)) & semaphore: semaphores);
(semaphore: dom(queue_quant));
("`Local hypotheses'" & queue_size: QUEUE +-> QUEUE_LENGTH & queue_quant: QUEUE +-> QUEUE_QUANT & queue_items_r: QUEUE +-> iseq(ITEM) & dom(queue_size) = queues & dom(queue_quant) = queues & dom(queue_items_r) = dom(queue_items) & !queue.(queue: queues => queue_quant(queue)<=queue_size(queue)) & !queue.(queue: queues_msg => ran(queue_items_r(queue)) = queue_items(queue) & size(queue_items_r(queue)) = queue_quant(queue)) & !queue.(queue: queues_msg_empty => queue_quant(queue) = 0) & !queue.(queue: queues_msg_full => queue_quant(queue) = queue_size(queue)) & !queue.(queue: queues_msg & queue_quant(queue) = queue_size(queue) => queue: queues_msg_full) & !queue.(queue: queues_msg & queue_quant(queue) = 0 => queue: queues_msg_empty) & !queue.(queue: queues_msg & not(queue: queues_msg_full) => queue_quant(queue)+1<=queue_size(queue)) & !queue.(queue: queues_msg & not(queue: queues_msg_empty) => 1<=queue_quant(queue)) & !queue.(queue: queues_msg & 1<=queue_quant(queue) => not(queue: queues_msg_empty)) & !queue.(queue: queues_msg & queue_quant(queue)+1<=queue_size(queue) => not(queue: queues_msg_full)) & !semaphore.(semaphore: semaphores_busy => queue_quant(semaphore) = 0) & !semaphore.(semaphore: semaphores & queue_quant(semaphore) = 0 => semaphore: semaphores_busy) & !semaphore.(semaphore: semaphores & not(semaphore: semaphores_busy) => not(queue_quant(semaphore) = 0)) & !semaphore.(semaphore: semaphores & not(queue_quant(semaphore) = 0) => not(semaphore: semaphores_busy)) & mutex: mutexes);
(mutex: dom(queue_size));
("`Local hypotheses'" & queue_size: QUEUE +-> QUEUE_LENGTH & queue_quant: QUEUE +-> QUEUE_QUANT & queue_items_r: QUEUE +-> iseq(ITEM) & dom(queue_size) = queues & dom(queue_quant) = queues & dom(queue_items_r) = dom(queue_items) & !queue.(queue: queues => queue_quant(queue)<=queue_size(queue)) & !queue.(queue: queues_msg => ran(queue_items_r(queue)) = queue_items(queue) & size(queue_items_r(queue)) = queue_quant(queue)) & !queue.(queue: queues_msg_empty => queue_quant(queue) = 0) & !queue.(queue: queues_msg_full => queue_quant(queue) = queue_size(queue)) & !queue.(queue: queues_msg & queue_quant(queue) = queue_size(queue) => queue: queues_msg_full) & !queue.(queue: queues_msg & queue_quant(queue) = 0 => queue: queues_msg_empty) & !queue.(queue: queues_msg & not(queue: queues_msg_full) => queue_quant(queue)+1<=queue_size(queue)) & !queue.(queue: queues_msg & not(queue: queues_msg_empty) => 1<=queue_quant(queue)) & !queue.(queue: queues_msg & 1<=queue_quant(queue) => not(queue: queues_msg_empty)) & !queue.(queue: queues_msg & queue_quant(queue)+1<=queue_size(queue) => not(queue: queues_msg_full)) & !semaphore.(semaphore: semaphores_busy => queue_quant(semaphore) = 0) & !semaphore.(semaphore: semaphores & queue_quant(semaphore) = 0 => semaphore: semaphores_busy) & !semaphore.(semaphore: semaphores & not(semaphore: semaphores_busy) => not(queue_quant(semaphore) = 0)) & !semaphore.(semaphore: semaphores & not(queue_quant(semaphore) = 0) => not(semaphore: semaphores_busy)) & !mutex.(mutex: mutexes => queue_size(mutex) = 1) & mutex: mutexes_busy);
(mutex: dom(queue_quant));
("`Local hypotheses'" & queue_size: QUEUE +-> QUEUE_LENGTH & queue_quant: QUEUE +-> QUEUE_QUANT & queue_items_r: QUEUE +-> iseq(ITEM) & dom(queue_size) = queues & dom(queue_quant) = queues & dom(queue_items_r) = dom(queue_items) & !queue.(queue: queues => queue_quant(queue)<=queue_size(queue)) & !queue.(queue: queues_msg => ran(queue_items_r(queue)) = queue_items(queue) & size(queue_items_r(queue)) = queue_quant(queue)) & !queue.(queue: queues_msg_empty => queue_quant(queue) = 0) & !queue.(queue: queues_msg_full => queue_quant(queue) = queue_size(queue)) & !queue.(queue: queues_msg & queue_quant(queue) = queue_size(queue) => queue: queues_msg_full) & !queue.(queue: queues_msg & queue_quant(queue) = 0 => queue: queues_msg_empty) & !queue.(queue: queues_msg & not(queue: queues_msg_full) => queue_quant(queue)+1<=queue_size(queue)) & !queue.(queue: queues_msg & not(queue: queues_msg_empty) => 1<=queue_quant(queue)) & !queue.(queue: queues_msg & 1<=queue_quant(queue) => not(queue: queues_msg_empty)) & !queue.(queue: queues_msg & queue_quant(queue)+1<=queue_size(queue) => not(queue: queues_msg_full)) & !semaphore.(semaphore: semaphores_busy => queue_quant(semaphore) = 0) & !semaphore.(semaphore: semaphores & queue_quant(semaphore) = 0 => semaphore: semaphores_busy) & !semaphore.(semaphore: semaphores & not(semaphore: semaphores_busy) => not(queue_quant(semaphore) = 0)) & !semaphore.(semaphore: semaphores & not(queue_quant(semaphore) = 0) => not(semaphore: semaphores_busy)) & !mutex.(mutex: mutexes => queue_size(mutex) = 1) & !mutex.(mutex: mutexes_busy => queue_quant(mutex) = 0) & mutex: mutexes);
(mutex: dom(queue_quant));
("`Local hypotheses'" & queue_size: QUEUE +-> QUEUE_LENGTH & queue_quant: QUEUE +-> QUEUE_QUANT & queue_items_r: QUEUE +-> iseq(ITEM) & dom(queue_size) = queues & dom(queue_quant) = queues & dom(queue_items_r) = dom(queue_items) & !queue.(queue: queues => queue_quant(queue)<=queue_size(queue)) & !queue.(queue: queues_msg => ran(queue_items_r(queue)) = queue_items(queue) & size(queue_items_r(queue)) = queue_quant(queue)) & !queue.(queue: queues_msg_empty => queue_quant(queue) = 0) & !queue.(queue: queues_msg_full => queue_quant(queue) = queue_size(queue)) & !queue.(queue: queues_msg & queue_quant(queue) = queue_size(queue) => queue: queues_msg_full) & !queue.(queue: queues_msg & queue_quant(queue) = 0 => queue: queues_msg_empty) & !queue.(queue: queues_msg & not(queue: queues_msg_full) => queue_quant(queue)+1<=queue_size(queue)) & !queue.(queue: queues_msg & not(queue: queues_msg_empty) => 1<=queue_quant(queue)) & !queue.(queue: queues_msg & 1<=queue_quant(queue) => not(queue: queues_msg_empty)) & !queue.(queue: queues_msg & queue_quant(queue)+1<=queue_size(queue) => not(queue: queues_msg_full)) & !semaphore.(semaphore: semaphores_busy => queue_quant(semaphore) = 0) & !semaphore.(semaphore: semaphores & queue_quant(semaphore) = 0 => semaphore: semaphores_busy) & !semaphore.(semaphore: semaphores & not(semaphore: semaphores_busy) => not(queue_quant(semaphore) = 0)) & !semaphore.(semaphore: semaphores & not(queue_quant(semaphore) = 0) => not(semaphore: semaphores_busy)) & !mutex.(mutex: mutexes => queue_size(mutex) = 1) & !mutex.(mutex: mutexes_busy => queue_quant(mutex) = 0) & !mutex.(mutex: mutexes & queue_quant(mutex) = 0 => mutex: mutexes_busy) & mutex: mutexes & not(mutex: mutexes_busy));
(mutex: dom(queue_quant));
("`Local hypotheses'" & queue_size: QUEUE +-> QUEUE_LENGTH & queue_quant: QUEUE +-> QUEUE_QUANT & queue_items_r: QUEUE +-> iseq(ITEM) & dom(queue_size) = queues & dom(queue_quant) = queues & dom(queue_items_r) = dom(queue_items) & !queue.(queue: queues => queue_quant(queue)<=queue_size(queue)) & !queue.(queue: queues_msg => ran(queue_items_r(queue)) = queue_items(queue) & size(queue_items_r(queue)) = queue_quant(queue)) & !queue.(queue: queues_msg_empty => queue_quant(queue) = 0) & !queue.(queue: queues_msg_full => queue_quant(queue) = queue_size(queue)) & !queue.(queue: queues_msg & queue_quant(queue) = queue_size(queue) => queue: queues_msg_full) & !queue.(queue: queues_msg & queue_quant(queue) = 0 => queue: queues_msg_empty) & !queue.(queue: queues_msg & not(queue: queues_msg_full) => queue_quant(queue)+1<=queue_size(queue)) & !queue.(queue: queues_msg & not(queue: queues_msg_empty) => 1<=queue_quant(queue)) & !queue.(queue: queues_msg & 1<=queue_quant(queue) => not(queue: queues_msg_empty)) & !queue.(queue: queues_msg & queue_quant(queue)+1<=queue_size(queue) => not(queue: queues_msg_full)) & !semaphore.(semaphore: semaphores_busy => queue_quant(semaphore) = 0) & !semaphore.(semaphore: semaphores & queue_quant(semaphore) = 0 => semaphore: semaphores_busy) & !semaphore.(semaphore: semaphores & not(semaphore: semaphores_busy) => not(queue_quant(semaphore) = 0)) & !semaphore.(semaphore: semaphores & not(queue_quant(semaphore) = 0) => not(semaphore: semaphores_busy)) & !mutex.(mutex: mutexes => queue_size(mutex) = 1) & !mutex.(mutex: mutexes_busy => queue_quant(mutex) = 0) & !mutex.(mutex: mutexes & queue_quant(mutex) = 0 => mutex: mutexes_busy) & !mutex.(mutex: mutexes & not(mutex: mutexes_busy) => queue_quant(mutex) = 1) & mutex: mutexes);
(mutex: dom(queue_quant));
("`q_queueCreate preconditions in previous components'" & uxQueueLength: QUEUE_LENGTH & uxItemSize: INTEGER & 0<=uxItemSize & uxItemSize<=maxint);
("`q_queueCreate preconditions in this component'" & btrue);
("`q_queueDelete preconditions in previous components'" & pxQueue: queues & not(pxQueue: semaphores) & not(pxQueue: mutexes) & queue_receiving(pxQueue) = {} & queue_sending(pxQueue) = {});
("`q_queueDelete preconditions in this component'" & btrue);
("`q_sendItem preconditions in previous components'" & pxQueue: queues_msg & pxItem: ITEM & not(pxItem: queue_items(pxQueue)) & copy_position: (1..2)*{COPY_POSITION} & not(pxQueue: queues_msg_full));
("`q_sendItem preconditions in this component'" & btrue);
("`Local hypotheses'" & copy_position = 1|->COPY_POSITION);
(queue_items_r(pxQueue): seq(ran(queue_items_r(pxQueue))));
("`Local hypotheses'" & copy_position = 1|->COPY_POSITION);
(pxQueue: dom(queue_items_r));
("`Local hypotheses'" & not(copy_position = 1|->COPY_POSITION));
(queue_items_r(pxQueue): seq(ran(queue_items_r(pxQueue))));
("`Local hypotheses'" & not(copy_position = 1|->COPY_POSITION));
(pxQueue: dom(queue_items_r));
("`Local hypotheses'" & btrue);
(pxQueue: dom(queue_receiving));
("`Local hypotheses'" & not(queue_receiving(pxQueue) = {}) & n_receiving: POW(TASK) & n_first: TASK);
(pxQueue: dom(queue_receiving));
("`Local hypotheses'" & not(queue_receiving(pxQueue) = {}) & n_receiving: POW(TASK) & n_first: TASK);
(pxQueue: dom(first_receiving));
("`Local hypotheses'" & btrue);
(pxQueue: dom(queue_receiving));
("`Local hypotheses'" & btrue);
(pxQueue: dom(queue_quant));
("`Local hypotheses'" & btrue);
(pxQueue: dom(queue_size));
("`Local hypotheses'" & btrue);
(pxQueue: dom(queue_quant));
("`Local hypotheses'" & btrue);
(pxQueue: dom(queue_size));
("`Local hypotheses'" & btrue);
(pxQueue: dom(queue_quant));
("`q_receivedItem preconditions in previous components'" & pxQueue: queues_msg & justPeeking: BOOL & not(pxQueue: queues_msg_empty));
("`q_receivedItem preconditions in this component'" & btrue);
("`Local hypotheses'" & btrue);
(queue_items_r(pxQueue): seq(ran(queue_items_r(pxQueue))));
("`Local hypotheses'" & btrue);
(pxQueue: dom(queue_items_r));
("`Local hypotheses'" & btrue);
(not(queue_items_r(pxQueue) = {}));
("`Local hypotheses'" & justPeeking = FALSE);
(pxQueue: dom(queue_sending));
("`Local hypotheses'" & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_sending: POW(TASK) & n_first: TASK);
(pxQueue: dom(queue_sending));
("`Local hypotheses'" & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_sending: POW(TASK) & n_first: TASK);
(pxQueue: dom(first_sending));
("`Local hypotheses'" & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending);
(queue_items_r(pxQueue): seq(ran(queue_items_r(pxQueue))));
("`Local hypotheses'" & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending);
(pxQueue: dom(queue_items_r));
("`Local hypotheses'" & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending);
(not(queue_items_r(pxQueue) = {}));
("`Local hypotheses'" & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending);
(pxQueue: dom(queue_quant));
("`Local hypotheses'" & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending);
(pxQueue: dom(queue_quant));
("`Local hypotheses'" & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending);
(pxQueue: dom(queue_quant));
("`Local hypotheses'" & justPeeking = FALSE);
(pxQueue: dom(queue_sending));
("`q_insertTaskWaitingToSend preconditions in previous components'" & pxQueue: queues & pxTask: TASK & !q1.(q1: queues => not(pxTask: queue_sending(q1)) & not(pxTask: queue_receiving(q1))));
("`q_insertTaskWaitingToSend preconditions in this component'" & btrue);
("`Local hypotheses'" & btrue);
(pxQueue: dom(queue_sending));
("`Local hypotheses'" & btrue);
(pxQueue: dom(queue_sending));
("`Local hypotheses'" & btrue);
(pxQueue: dom(queue_sending));
("`q_insertTaskWaitingToReceive preconditions in previous components'" & pxQueue: queues & pxTask: TASK & !q1.(q1: queues => not(pxTask: queue_sending(q1)) & not(pxTask: queue_receiving(q1))));
("`q_insertTaskWaitingToReceive preconditions in this component'" & btrue);
("`Local hypotheses'" & btrue);
(pxQueue: dom(queue_receiving));
("`Local hypotheses'" & btrue);
(pxQueue: dom(queue_receiving));
("`Local hypotheses'" & btrue);
(pxQueue: dom(queue_receiving));
("`q_removeFromEventListQueue preconditions in previous components'" & task: TASK);
("`q_removeFromEventListQueue preconditions in this component'" & btrue);
("`Local hypotheses'" & pxQueue: queues);
(pxQueue: dom(queue_receiving));
("`Local hypotheses'" & pxQueue: queues & task: queue_receiving(pxQueue) & n_receiving: POW(TASK));
(pxQueue: dom(queue_receiving));
("`Local hypotheses'" & pxQueue: queues & task: queue_receiving(pxQueue) & n_receiving: POW(TASK));
(pxQueue: dom(first_receiving));
("`Local hypotheses'" & pxQueue: queues & task: queue_receiving(pxQueue) & n_receiving: POW(TASK) & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: TASK);
(pxQueue: dom(queue_receiving));
("`Local hypotheses'" & pxQueue: queues & n_sending: POW(TASK) & n_first: TASK);
(pxQueue: dom(queue_sending));
("`Local hypotheses'" & pxQueue: queues & n_sending: POW(TASK) & n_first: TASK & task: queue_sending(pxQueue));
(pxQueue: dom(queue_sending));
("`Local hypotheses'" & pxQueue: queues & n_sending: POW(TASK) & n_first: TASK & task: queue_sending(pxQueue));
(pxQueue: dom(first_sending));
("`Local hypotheses'" & pxQueue: queues & n_sending: POW(TASK) & n_first: TASK & task: queue_sending(pxQueue) & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)});
(pxQueue: dom(first_sending));
("`q_createSemaphore preconditions in previous components'" & maxCount: QUEUE_LENGTH & initialCount: QUEUE_QUANT & initialCount<=maxCount);
("`q_createSemaphore preconditions in this component'" & btrue);
("`q_deleteSemaphore preconditions in previous components'" & semaphore: semaphores);
("`q_deleteSemaphore preconditions in this component'" & semaphore: semaphores);
("`q_takeSemaphore preconditions in previous components'" & semaphore: semaphores & not(semaphore: semaphores_busy));
("`q_takeSemaphore preconditions in this component'" & btrue);
("`Local hypotheses'" & btrue);
(semaphore: dom(queue_quant));
("`Local hypotheses'" & btrue);
(semaphore: dom(queue_quant));
("`Local hypotheses'" & btrue);
(semaphore: dom(queue_quant));
("`Local hypotheses'" & n_sending: POW(TASK));
(semaphore: dom(queue_sending));
("`Local hypotheses'" & n_sending: POW(TASK));
(semaphore: dom(first_sending));
("`q_giveSemaphore preconditions in previous components'" & semaphore: semaphores);
("`q_giveSemaphore preconditions in this component'" & btrue);
("`Local hypotheses'" & btrue);
(semaphore: dom(queue_quant));
("`Local hypotheses'" & btrue);
(semaphore: dom(queue_size));
("`Local hypotheses'" & queue_quant(semaphore)+1<=queue_size(semaphore));
(semaphore: dom(queue_quant));
("`Local hypotheses'" & queue_quant(semaphore)+1<=queue_size(semaphore));
(semaphore: dom(queue_quant));
("`Local hypotheses'" & queue_quant(semaphore)+1<=queue_size(semaphore));
(semaphore: dom(queue_quant));
("`Local hypotheses'" & queue_quant(semaphore)+1<=queue_size(semaphore) & n_receiving: POW(TASK));
(semaphore: dom(queue_receiving));
("`Local hypotheses'" & queue_quant(semaphore)+1<=queue_size(semaphore) & n_receiving: POW(TASK));
(semaphore: dom(first_receiving));
("`Local hypotheses'" & btrue);
(semaphore: dom(queue_quant));
("`Local hypotheses'" & btrue);
(semaphore: dom(queue_size));
("`q_createMutex preconditions in previous components'" & btrue);
("`q_createMutex preconditions in this component'" & btrue);
("`q_takeMutex preconditions in previous components'" & mutex: mutexes & not(mutex: mutexes_busy) & task: TASK & not(task = TASK_NULL));
("`q_takeMutex preconditions in this component'" & btrue);
("`Local hypotheses'" & btrue);
(mutex: dom(queue_quant));
("`q_giveMutex preconditions in previous components'" & mutex: mutexes & mutex: mutexes_busy);
("`q_giveMutex preconditions in this component'" & btrue);
("`Local hypotheses'" & btrue);
(mutex: dom(queue_quant));
("`Local hypotheses'" & n_receiving: POW(TASK));
(mutex: dom(queue_receiving));
("`Local hypotheses'" & n_receiving: POW(TASK));
(mutex: dom(first_receiving));
("`q_endScheduler preconditions in previous components'" & btrue);
("`q_endScheduler preconditions in this component'" & btrue);
("`q_resumeAll preconditions in previous components'" & unblocked: POW(TASK));
("`q_resumeAll preconditions in this component'" & btrue);
("`Local hypotheses'" & not(queue_sending = {}) & n_sending: QUEUE +-> POW(TASK) & dom(n_sending) = dom(queue_sending));
(queue_sending,unblocked: dom(remove_task));
("`Local hypotheses'" & not(queue_sending = {}) & n_sending: QUEUE +-> POW(TASK) & dom(n_sending) = dom(queue_sending) & n_sending = remove_task(queue_sending,unblocked) & n_first: QUEUE +-> TASK & dom(n_first) = dom(first_sending) & q1: queues & q1: dom(n_first));
(q1: dom(n_sending));
("`Local hypotheses'" & not(queue_sending = {}) & n_sending: QUEUE +-> POW(TASK) & dom(n_sending) = dom(queue_sending) & n_sending = remove_task(queue_sending,unblocked) & n_first: QUEUE +-> TASK & dom(n_first) = dom(first_sending) & q1: queues & q1: dom(n_first) & not(n_sending(q1) = {}));
(q1: dom(n_sending));
("`Local hypotheses'" & not(queue_receiving = {}) & n_receiving: QUEUE +-> POW(TASK) & dom(n_receiving) = dom(queue_receiving));
(queue_receiving,unblocked: dom(remove_task));
("`Local hypotheses'" & not(queue_receiving = {}) & n_receiving: QUEUE +-> POW(TASK) & dom(n_receiving) = dom(queue_receiving) & n_receiving = remove_task(queue_receiving,unblocked) & n_first: QUEUE +-> TASK & dom(n_first) = dom(first_receiving) & q1: queues & q1: dom(n_first));
(q1: dom(n_receiving));
("`Local hypotheses'" & not(queue_receiving = {}) & n_receiving: QUEUE +-> POW(TASK) & dom(n_receiving) = dom(queue_receiving) & n_receiving = remove_task(queue_receiving,unblocked) & n_first: QUEUE +-> TASK & dom(n_first) = dom(first_receiving) & q1: queues & q1: dom(n_first) & not(n_receiving(q1) = {}));
(q1: dom(n_receiving))

END
&

THEORY EnumerateX IS
(SCHEDULER_STATE == {taskSCHEDULER_NOT_STARTED,taskSCHEDULER_RUNNING,taskSCHEDULER_SUSPENDED});
(COPY_POSITION == {queueSEND_TO_BACK,queueSEND_TO_FRONT});
(QUEUE_TYPE == {TQUE,TSEMAPH,TMUT});
(ERROR_DEFINITION == {errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY,errNO_TASK_TO_RUN,errQUEUE_BLOCKED,errQUEUE_YIELD,errQUEUE_EMPTY,errQUEUE_FULL,pdPASS,pdFAIL,pdTRUE,pdFALSE});
(SCHEDULER_STATE == {taskSCHEDULER_NOT_STARTED,taskSCHEDULER_RUNNING,taskSCHEDULER_SUSPENDED});
(COPY_POSITION == {queueSEND_TO_BACK,queueSEND_TO_FRONT});
(QUEUE_TYPE == {TQUE,TSEMAPH,TMUT});
(ERROR_DEFINITION == {errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY,errNO_TASK_TO_RUN,errQUEUE_BLOCKED,errQUEUE_YIELD,errQUEUE_EMPTY,errQUEUE_FULL,pdPASS,pdFAIL,pdTRUE,pdFALSE})

END
