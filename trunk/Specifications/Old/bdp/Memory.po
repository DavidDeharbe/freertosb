THEORY ProofList IS
  _f(1) & _f(2) & _f(5) & _f(6) & setHeap.1,(_f(7) => _f(8));
  _f(1) & _f(2) & Initialisation.1,(_f(3) => _f(4))
END
&
THEORY Formulas IS
  ("`Seen and used machines properties'" & configMAX_PRIORITIES: INTEGER & 0<=configMAX_PRIORITIES & configTOTAL_HEAP_SIZE: INTEGER & 0<=configTOTAL_HEAP_SIZE & configMINIMAL_STACK_SIZE: INTEGER & 0<=configMINIMAL_STACK_SIZE & INCLUDE_uxTaskPriorityGet: BIT & INCLUDE_vTaskDelete: BIT & INCLUDE_vTaskSuspend: BIT & INCLUDE_xTaskGetSchedulerState: BIT & INCLUDE_vTaskPrioritySet: BIT & INCLUDE_xTaskGetCurrentTaskHandle: BIT & configUSE_PREEMPTION: BIT & configUSE_IDLE_HOOK: BIT & configUSE_TICK_HOOK: BIT & configCPU_CLOCK_HZ: INTEGER & 0<=configCPU_CLOCK_HZ & configTICK_RATE_HZ: INTEGER & 0<=configTICK_RATE_HZ & configMAX_TASK_NAME_LEN: INTEGER & 0<=configMAX_TASK_NAME_LEN & configUSE_TRACE_FACILITY: BIT & configUSE_16_BIT_TICKS: BIT & configIDLE_SHOULD_YIELD: BIT & configUSE_USE_MUTEXES: BIT & configUSE_RECURSIVE_MUTEXES: BIT & configUSE_COUNTING_SEMAPHORES: BIT & configUSE_ALTERNATIVE_API: BIT & configCHECK_FOR_STACK_OVERFLOW: BIT & configQUEUE_REGISTRY_SIZE: BIT & configUSE_CO_ROUTINES: BIT & configMAX_CO_ROUTINE_PRIORITIES: INTEGER & 0<=configMAX_CO_ROUTINE_PRIORITIES & configKERNEL_INTERRUPT_PRIORITY: INTEGER & 0<=configKERNEL_INTERRUPT_PRIORITY & configMAX_SYSCALL_INTERRUPT_PRIORITY: INTEGER & 0<=configMAX_SYSCALL_INTERRUPT_PRIORITY & INCLUDE_vTaskCleanUpResources: BIT & INCLUDE_vTaskDelayUntil: BIT & INCLUDE_vTaskDelay: BIT & BIT = {0}\/{1} & ERROR_DEFINITION = { -5}\/{ -4}\/{ -2}\/{ -1} & pdTRUE: BIT & pdTRUE = 0 & pdFALSE: BIT & pdFALSE = 1 & pdPASS: BIT & pdPASS = 1 & pdFAIL: BIT & pdFAIL = 0 & errQUEUE_EMPTY: BIT & errQUEUE_EMPTY = 0 & errQUEUE_FULL: BIT & errQUEUE_FULL = 0 & errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY: ERROR_DEFINITION & errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY = -1 & errNO_TASK_TO_RUN: ERROR_DEFINITION & errNO_TASK_TO_RUN = -2 & errQUEUE_BLOCKED: ERROR_DEFINITION & errQUEUE_BLOCKED = -4 & errQUEUE_YIELD: ERROR_DEFINITION & errQUEUE_YIELD = -5 & pointer: POINTER & POINTER: FIN(INTEGER) & not(POINTER = {}) & NAME: FIN(INTEGER) & not(NAME = {}) & "`Component properties'" & STACK = POINTER*NATURAL & STACK_NULL: STACK & HEAP_SIZE = 0..configTOTAL_HEAP_SIZE & portMalloc: HEAP_SIZE*HEAP_SIZE +-> HEAP_SIZE*STACK & dom(portMalloc) = HEAP_SIZE*HEAP_SIZE & portMalloc = %(heap,sz).(heap: HEAP_SIZE & sz: HEAP_SIZE & 0<=heap-sz | heap-sz,(pointer,sz)) & portMalloc = %(heap,sz).(heap: HEAP_SIZE & sz: HEAP_SIZE & heap-sz+1<=0 | 0,STACK_NULL) & portFree: HEAP_SIZE*POINTER*HEAP_SIZE +-> HEAP_SIZE & dom(portFree) = HEAP_SIZE*POINTER*HEAP_SIZE & portFree = %(heap,pt,sz).(heap: HEAP_SIZE & pt: POINTER & sz: HEAP_SIZE & heap+sz<=configTOTAL_HEAP_SIZE | heap+sz) & portFree = %(heap,pt,sz).(heap: HEAP_SIZE & pt: POINTER & sz: HEAP_SIZE & configTOTAL_HEAP_SIZE+1<=heap+sz | heap));
  ("`Seen and used machines assertions'" & ERROR_DEFINITION: POW(INTEGER) & BIT: POW(NATURAL));
  "`Check that the invariant (heap: HEAP_SIZE) is established by the initialisation - ref 3.3'";
  (configTOTAL_HEAP_SIZE: HEAP_SIZE);
  ("`Component invariant'" & heap: HEAP_SIZE);
  ("`setHeap preconditions in this component'" & mem: INTEGER & 0<=mem & mem<=configTOTAL_HEAP_SIZE);
  "`Check that the invariant (heap: HEAP_SIZE) is preserved by the operation - ref 3.4'";
  (mem: HEAP_SIZE)
END
&
THEORY EnumerateX 
END
&
THEORY Version IS
  POVersion(V3.8.3)(CLT == "V3.7.6")(genOPO == KO, local_op == OK)
END
