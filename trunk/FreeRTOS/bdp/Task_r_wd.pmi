THEORY BalanceX IS
  Task_r,48,19,0,29,0,0,0;
  Properties,3,3,0,0,0,0,0;
  Invariants,3,0,0,3,0,0,0;
  Assertions,5,2,0,3,0,0,0;
  t_deleteSubstitution,1,0,0,1,0,0,0;
  t_suspendSubstitution,3,2,0,1,0,0,0;
  t_resumeSubstitution,8,0,0,8,0,0,0;
  t_getPrioritySubstitution,0,0,0,0,0,0,0;
  t_getNumberOfTasksSubstitution,1,0,0,1,0,0,0;
  t_delayTaskSubstitution,3,2,0,1,0,0,0;
  t_startSchedulerSubstitution,3,2,0,1,0,0,0;
  t_resumeAllSubstitution,7,4,0,3,0,0,0;
  t_unblockSubstitution,4,0,0,4,0,0,0;
  t_setPrioritySubstitution,7,4,0,3,0,0,0
END
&
THEORY ProofState IS
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util)
END
&
THEORY MethodList IS
  dd & ah(t_priority[ready]: FIN(NATURAL)) & ah(t_priority: TASK +-> PRIORITY & PRIORITY <: NATURAL & ready: FIN(TASK)) & pr & pr & pr & pr & pr;
  dd & ah(ready <: dom(t_priority) & not(ready = {})) & pr & eh(task,running,AllHyp) & ss & dd & ah(not(running: ready) & (running = idle or idle: ready) & not(running = idle)) & pr & pr & pr & pp(rp.0) & pp(rp.0);
  pr;
  dd & ah(t_priority[ready]: FIN(NATURAL)) & ah(t_priority: TASK +-> PRIORITY & PRIORITY <: NATURAL & ready: FIN(TASK)) & pr & pr & pr & pr & pr;
  dd & ah(ready <: dom(t_priority) & not(ready = {})) & pr & eh(task,running,AllHyp) & ss & dd & ah(not(running: ready) & (running = idle or idle: ready) & not(running = idle)) & pr & pr & pr & pp(rp.0) & pp(rp.0);
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & ah(t_priority[unblocked]: FIN(NATURAL)) & ah(t_priority: TASK +-> PRIORITY & PRIORITY <: NATURAL & unblocked: FIN(TASK)) & pr & pr & pr & pr & pr;
  dd & ah(unblocked <: dom(t_priority) & not(unblocked = {})) & pr & pr & pp(rp.0);
  pr;
  pr;
  dd & ah(t_priority[unblocked]: FIN(NATURAL)) & ah(t_priority: TASK +-> PRIORITY & PRIORITY <: NATURAL & unblocked: FIN(TASK)) & pr & pr & pr & pr & pr;
  dd & ah(unblocked <: dom(t_priority) & not(unblocked = {})) & pr & pr & pp(rp.0);
  pr;
  dd & ah(t_priority[tasks]: FIN(NATURAL)) & pr & ah(t_priority: TASK +-> PRIORITY & PRIORITY <: NATURAL) & pr & pr & pr;
  dd & ah(ready <: dom(t_priority) & not(ready = {})) & pr & ah(not(ready = {})) & mp & ah(ready <: dom(t_priority) & not(ready = {})) & pr & pr & pp(rp.0);
  pr;
  dd & ah(t_priority[ready]: FIN(NATURAL)) & ah(t_priority: TASK +-> PRIORITY & PRIORITY <: NATURAL & ready: FIN(TASK)) & pr & pr & pr & pr & pr;
  dd & ah(ready <: dom(t_priority) & not(ready = {})) & pr & eh(active,TRUE,AllHyp) & ss & dd & ah(not(ready = {})) & mp & ah(ready <: dom(t_priority) & not(ready = {})) & pr & pr & pp(rp.0);
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & ah(t_priority[ready]: FIN(NATURAL)) & ah(t_priority: TASK +-> PRIORITY & PRIORITY <: NATURAL & ready: FIN(TASK)) & pr & pr & pr & pr & pr;
  dd & ah(not(ready = {}) & ready <: dom(t_priority)) & pr & ah(task: ready) & dd & ah(not(running: ready) & (running = idle or idle: ready)) & pr & pr & pp(rp.1) & pr & pp(rp.0);
  pr;
  pr;
  dd & ah(t_priority$0[tasks$0]: FIN(NATURAL)) & ah(t_priority$0: TASK +-> PRIORITY & PRIORITY <: NATURAL & tasks: FIN(TASK)) & pr & pr & pr & pr & pr;
  dd & ah(tasks$0 <: dom(t_priority$0) & not(tasks$0 = {})) & pr & pr & pp(rp.0);
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & ah(t_priority[tasks]: FIN(NATURAL)) & pr & ah(t_priority: TASK +-> PRIORITY & PRIORITY <: NATURAL) & pr & pr & pr & pr;
  dd & ah(not(tasks = {}) & tasks <: dom(t_priority)) & pr & pr & pp(rp.0);
  dd & ah({tmp_mprt_ready,t_prt}: FIN(NATURAL)) & pr & pr
END
&
THEORY PassList IS
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?
END
&
THEORY ManForms 
END
&
THEORY Version IS
  PRVersion("V3.3.3.p39")(CLT == "V3.7.6")
END
