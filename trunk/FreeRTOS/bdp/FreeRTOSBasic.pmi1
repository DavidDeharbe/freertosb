THEORY BalanceX IS
  FreeRTOSBasic,436,204,0,168,45,6,0;
  InstanciatedConstraintsLemmas,0,0,0,0,0,0,0;
  Initialisation,2,0,0,2,0,0,0;
  xQueueGenericSend,30,14,0,13,3,0,0;
  xQueueGenericReceive,90,38,0,38,14,0,0;
  xTaskCreate,6,2,0,3,1,0,0;
  vTaskDelete,32,5,0,12,14,1,0;
  vTaskSuspend,4,0,0,4,0,0,0;
  vTaskResume,0,0,0,0,0,0,0;
  uxTaskPriorityGet,0,0,0,0,0,0,0;
  xTaskGetCurrentTaskHandle,0,0,0,0,0,0,0;
  uxTaskGetNumberOfTasks,0,0,0,0,0,0,0;
  vTaskDelay,3,0,0,3,0,0,0;
  vTaskDelayUntil,4,0,0,3,1,0,0;
  xTaskGetTickCount,0,0,0,0,0,0,0;
  vTaskStartScheduler,4,1,0,2,1,0,0;
  vTaskEndScheduler,2,0,0,1,1,0,0;
  vTaskSuspendAll,0,0,0,0,0,0,0;
  xTaskResumeAll,121,76,0,45,0,0,0;
  incrementTick,97,66,0,26,0,5,0;
  vQueueDelete,18,0,0,16,2,0,0;
  vTaskPrioritySet,0,0,0,0,0,0,0;
  vSemaphoreCreateBinary,4,2,0,0,2,0,0;
  xSemaphoreCreateCounting,5,0,0,0,2,0,0;
  xQueueCreateMutex,5,0,0,0,1,0,0;
  xSemaphoreCreateRecursiveMutex,5,0,0,0,1,0,0;
  xQueueCreate,4,0,0,0,2,0,0
END
&
THEORY ProofState IS
  Unproved;
  Unproved;
  Proved(1);
  Proved(1);
  Unproved;
  Unproved;
  Unproved;
  Unproved;
  Proved(1);
  Unproved;
  Unproved;
  Unproved;
  Unproved;
  Proved(1);
  Unproved;
  Unproved;
  Proved(1);
  Proved(1);
  Unproved;
  Proved(Util);
  Proved(Util);
  Proved(1);
  Proved(1);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(1);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(1);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(2);
  Proved(Util);
  Proved(2);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(2);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(2);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(2);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(1);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(1);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(1);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(2);
  Proved(0);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(0);
  Proved(1);
  Proved(1);
  Proved(0);
  Proved(Util);
  Proved(1);
  Proved(1);
  Proved(0);
  Proved(1);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(1);
  Proved(1);
  Proved(0);
  Proved(1);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(1);
  Proved(1);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(1);
  Proved(1);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(1);
  Proved(1);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(1);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(1);
  Proved(1);
  Proved(0);
  Proved(0);
  Proved(1);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(1);
  Proved(1);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(1);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(1);
  Proved(Util);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(1);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(1);
  Proved(Util);
  Proved(Util);
  Proved(1);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(1);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0)
END
&
THEORY MethodList IS
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dc(semaphore$0 = que) & pr & dd & dd & ph(que,task,!(que,task).(que: queues & task: TASK & task: queue_receiving(que) => task: blocked)) & pr & pr & ah(task: (queue_receiving\/{semaphore$0|->{}})(que) & semaphore$0/=que) & pr & pr & ah((queue_receiving\/{semaphore$0|->{}})(que) = queue_receiving(que)) & pr & dd & eh((queue_receiving\/{semaphore$0|->{}})(que),_h,Goal);
  dc(semaphore$0 = que) & pr & dd & dd & ph(que,task,!(que,task).(que: queues & task: TASK & task: queue_sending(que) => task: blocked)) & pr & pr & ah(task: (queue_sending\/{semaphore$0|->{}})(que) & semaphore$0/=que) & pr & pr & ah((queue_sending\/{semaphore$0|->{}})(que) = queue_sending(que)) & pr & dd & eh((queue_sending\/{semaphore$0|->{}})(que),_h,Goal);
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & ah(queue_receiving(que) = remove_task(queue_receiving,unblocked)(que)) & pr & dd & ah(task: queue_receiving(que)) & eh(queue_receiving(que),_h,Goal) & eh(remove_task,_h,Goal) & pr;
  dd & ph(que,task,!(que,task).(que: queues & task: TASK & task: queue_receiving(que) => task: blocked)) & pr & pr & pr;
  dd & ah(queue_sending(que) = remove_task(queue_sending,unblocked)(que)) & pr & dd & ah(task: queue_sending(que)) & eh(queue_sending(que),_h,Goal) & eh(remove_task,_h,Goal) & pr;
  dd & ph(que,task,!(que,task).(que: queues & task: TASK & task: queue_receiving(que) => task: blocked)) & pr & pr & pr;
  pr;
  dd & ah(queue_receiving(que) = remove_task(queue_receiving,unblocked)(que)) & pr & dd & ah(task: queue_receiving(que)) & eh(queue_receiving(que),_h,Goal) & eh(remove_task,_h,Goal) & pr;
  dd & ph(que,task,!(que,task).(que: queues & task: TASK & task: queue_receiving(que) => task: blocked)) & pr & pr & pr;
  dd & ah(queue_sending(que) = remove_task(queue_sending,unblocked)(que)) & pr & dd & ah(task: queue_sending(que)) & eh(queue_sending(que),_h,Goal) & eh(remove_task,_h,Goal) & pr;
  dd & ph(que,task,!(que,task).(que: queues & task: TASK & task: queue_receiving(que) => task: blocked)) & pr & pr & pr;
  pr;
  dd & ah(task: remove_task(queue_receiving,unblocked)(que)) & eh(remove_task,_h,Goal) & pr;
  pr;
  pr;
  dd & ah(task: remove_task(queue_receiving,unblocked)(que)) & eh(remove_task,_h,Goal) & pr;
  dd & ah(queue_sending(que) = remove_task(queue_sending,unblocked)(que)) & pr & dd & ah(task: queue_sending(que)) & eh(queue_sending(que),_h,Goal) & eh(remove_task,_h,Goal) & pr;
  dd & ph(que,task,!(que,task).(que: queues & task: TASK & task: queue_sending(que) => task: blocked)) & pr & pr & pr;
  pr;
  pr;
  dd & ah(task: remove_task(queue_receiving,unblocked)(que)) & eh(remove_task,_h,Goal) & pr;
  dd & ah(queue_sending(que) = remove_task(queue_sending,unblocked)(que)) & pr & dd & ah(task: queue_sending(que)) & eh(queue_sending(que),_h,Goal) & eh(remove_task,_h,Goal) & pr;
  dd & ph(que,task,!(que,task).(que: queues & task: TASK & task: queue_sending(que) => task: blocked)) & pr & pr & pr;
  pr;
  dd & ah(task: remove_task(queue_sending,unblocked)(que)) & eh(remove_task,_h,Goal) & pr;
  pr;
  dd & ah(queue_receiving(que) = remove_task(queue_receiving,unblocked)(que)) & pr & dd & ah(task: queue_receiving(que)) & eh(queue_receiving(que),_h,Goal) & eh(remove_task,_h,Goal) & pr;
  dd & ph(que,task,!(que,task).(que: queues & task: TASK & task: queue_receiving(que) => task: blocked)) & pr & pr & pr;
  pr;
  dd & ah(task: remove_task(queue_sending,unblocked)(que)) & eh(remove_task,_h,Goal) & pr;
  pr;
  dd & ah(queue_receiving(que) = remove_task(queue_receiving,unblocked)(que)) & pr & dd & ah(task: queue_receiving(que)) & eh(queue_receiving(que),_h,Goal) & eh(remove_task,_h,Goal) & pr;
  dd & ph(que,task,!(que,task).(que: queues & task: TASK & task: queue_receiving(que) => task: blocked)) & pr & pr & pr;
  pr;
  dd & ah(task: remove_task(queue_sending,unblocked)(que)) & eh(remove_task,_h,Goal) & pr;
  pr;
  dd & ah(task: remove_task(queue_receiving,unblocked)(que)) & eh(remove_task,_h,Goal) & pr;
  dd & ah(task: remove_task(queue_sending,unblocked)(que)) & eh(remove_task,_h,Goal) & pr;
  pr;
  dd & ah(task: remove_task(queue_receiving,unblocked)(que)) & eh(remove_task,_h,Goal) & pr;
  dd & ah(task: remove_task(queue_receiving,unblocked)(que)) & eh(remove_task,_h,Goal) & pr;
  dd & ah(task: remove_task(queue_sending,unblocked)(que)) & eh(remove_task,_h,Goal) & pr;
  dd & ah(task: remove_task(queue_sending,unblocked)(que)) & eh(remove_task,_h,Goal) & pr;
  pr;
  dd & ah(task: remove_task(queue_receiving,unblocked)(que)) & eh(remove_task,_h,Goal) & pr;
  dd & ah(task: remove_task(queue_receiving,unblocked)(que)) & eh(remove_task,_h,Goal) & pr;
  dd & ah(task: remove_task(queue_sending,unblocked)(que)) & eh(remove_task,_h,Goal) & pr;
  dd & ah(task: remove_task(queue_sending,unblocked)(que)) & eh(remove_task,_h,Goal) & pr;
  pr;
  pr;
  dd & ah(queue_receiving(que) = remove_task(queue_receiving,unblocked)(que)) & pr & dd & ah(task: queue_receiving(que)) & eh(queue_receiving(que),_h,Goal) & eh(remove_task,_h,Goal) & pr;
  dd & ph(que,task,!(que,task).(que: queues & task: TASK & task: queue_receiving(que) => task: blocked)) & pr & pr & pr;
  dd & ah(queue_sending(que) = remove_task(queue_sending,unblocked)(que)) & pr & dd & ah(task: queue_sending(que)) & eh(queue_sending(que),_h,Goal) & eh(remove_task,_h,Goal) & pr;
  dd & ph(que,task,!(que,task).(que: queues & task: TASK & task: queue_receiving(que) => task: blocked)) & pr & pr & pr;
  pr;
  dd & ah(queue_receiving(que) = remove_task(queue_receiving,unblocked)(que)) & pr & dd & ah(task: queue_receiving(que)) & eh(queue_receiving(que),_h,Goal) & eh(remove_task,_h,Goal) & pr;
  dd & ph(que,task,!(que,task).(que: queues & task: TASK & task: queue_receiving(que) => task: blocked)) & pr & pr & pr;
  dd & ah(queue_sending(que) = remove_task(queue_sending,unblocked)(que)) & pr & dd & ah(task: queue_sending(que)) & eh(queue_sending(que),_h,Goal) & eh(remove_task,_h,Goal) & pr;
  dd & ph(que,task,!(que,task).(que: queues & task: TASK & task: queue_receiving(que) => task: blocked)) & pr & pr & pr;
  pr;
  dd & ah(task: remove_task(queue_receiving,unblocked)(que)) & eh(remove_task,_h,Goal) & pr;
  pr;
  pr;
  dd & ah(task: remove_task(queue_receiving,unblocked)(que)) & eh(remove_task,_h,Goal) & pr;
  dd & ah(queue_sending(que) = remove_task(queue_sending,unblocked)(que)) & pr & dd & ah(task: queue_sending(que)) & eh(queue_sending(que),_h,Goal) & eh(remove_task,_h,Goal) & pr;
  dd & ph(que,task,!(que,task).(que: queues & task: TASK & task: queue_sending(que) => task: blocked)) & pr & pr & pr;
  pr;
  dd & ah(task: remove_task(queue_receiving,unblocked)(que)) & eh(remove_task,_h,Goal) & pr;
  dd & ah(task: remove_task(queue_receiving,unblocked)(que)) & eh(remove_task,_h,Goal) & pr;
  dd & ah(queue_sending(que) = remove_task(queue_sending,unblocked)(que)) & pr & dd & ah(task: queue_sending(que)) & eh(queue_sending(que),_h,Goal) & eh(remove_task,_h,Goal) & pr;
  dd & ph(que,task,!(que,task).(que: queues & task: TASK & task: queue_sending(que) => task: blocked)) & pr & pr & pr;
  pr;
  dd & ah(task: remove_task(queue_sending,unblocked)(que)) & eh(remove_task,_h,Goal) & pr;
  pr;
  dd & ah(queue_receiving(que) = remove_task(queue_receiving,unblocked)(que)) & pr & dd & ah(task: queue_receiving(que)) & eh(queue_receiving(que),_h,Goal) & eh(remove_task,_h,Goal) & pr;
  dd & ph(que,task,!(que,task).(que: queues & task: TASK & task: queue_receiving(que) => task: blocked)) & pr & pr & pr;
  pr;
  dd & ah(task: remove_task(queue_sending,unblocked)(que)) & eh(remove_task,_h,Goal) & pr;
  pr;
  dd & ah(queue_receiving(que) = remove_task(queue_receiving,unblocked)(que)) & pr & dd & ah(task: queue_receiving(que)) & eh(queue_receiving(que),_h,Goal) & eh(remove_task,_h,Goal) & pr;
  dd & ph(que,task,!(que,task).(que: queues & task: TASK & task: queue_receiving(que) => task: blocked)) & pr & pr & pr;
  dd & ah(task: remove_task(queue_sending,unblocked)(que)) & eh(remove_task,_h,Goal) & pr;
  dd & ah(task: remove_task(queue_sending,unblocked)(que)) & eh(remove_task,_h,Goal) & pr;
  pr;
  dd & ah(task: remove_task(queue_receiving,unblocked)(que)) & eh(remove_task,_h,Goal) & pr;
  dd & ah(task: remove_task(queue_sending,unblocked)(que)) & eh(remove_task,_h,Goal) & pr;
  pr;
  dd & ah(task: remove_task(queue_receiving,unblocked)(que)) & eh(remove_task,_h,Goal) & pr;
  dd & ah(task: remove_task(queue_receiving,unblocked)(que)) & eh(remove_task,_h,Goal) & pr;
  dd & ah(task: remove_task(queue_sending,unblocked)(que)) & eh(remove_task,_h,Goal) & pr;
  dd & ah(task: remove_task(queue_sending,unblocked)(que)) & eh(remove_task,_h,Goal) & pr;
  pr;
  dd & ah(task: remove_task(queue_receiving,unblocked)(que)) & eh(remove_task,_h,Goal) & pr;
  dd & ah(task: remove_task(queue_receiving,unblocked)(que)) & eh(remove_task,_h,Goal) & pr;
  dd & ah(task: remove_task(queue_sending,unblocked)(que)) & eh(remove_task,_h,Goal) & pr;
  dd & ah(task: remove_task(queue_sending,unblocked)(que)) & eh(remove_task,_h,Goal) & pr;
  pr;
  pr;
  pr;
  dd & ah(queue_receiving(que) = remove_task(queue_receiving,unblocked\/pending)(que)) & pr & dd & ah(task: queue_receiving(que)) & eh(queue_receiving(que),_h,Goal) & eh(remove_task,_h,Goal) & pr;
  dd & ah(queue_receiving(que) = remove_task(queue_receiving,unblocked)(que)) & pr & dd & ah(task: queue_receiving(que)) & eh(queue_receiving(que),_h,Goal) & eh(remove_task,_h,Goal) & pr;
  pr;
  dd & ah(queue_sending(que) = remove_task(queue_sending,unblocked\/pending)(que)) & pr & dd & ah(task: queue_sending(que)) & eh(queue_sending(que),_h,Goal) & eh(remove_task,_h,Goal) & pr;
  dd & ah(queue_sending(que) = remove_task(queue_sending,unblocked)(que)) & pr & dd & ah(task: queue_sending(que)) & eh(queue_sending(que),_h,Goal) & eh(remove_task,_h,Goal) & pr;
  pr;
  pr;
  dd & ah(queue_receiving(que) = remove_task(queue_receiving,unblocked\/pending)(que)) & pr & dd & ah(task: queue_receiving(que)) & eh(queue_receiving(que),_h,Goal) & eh(remove_task,_h,Goal) & pr;
  dd & ah(queue_receiving(que) = remove_task(queue_receiving,unblocked)(que)) & pr & dd & ah(task: queue_receiving(que)) & eh(queue_receiving(que),_h,Goal) & eh(remove_task,_h,Goal) & pr;
  pr;
  dd & ah(queue_sending(que) = remove_task(queue_sending,unblocked\/pending)(que)) & pr & dd & ah(task: queue_sending(que)) & eh(queue_sending(que),_h,Goal) & eh(remove_task,_h,Goal) & pr;
  dd & ah(queue_sending(que) = remove_task(queue_sending,unblocked)(que)) & pr & dd & ah(task: queue_sending(que)) & eh(queue_sending(que),_h,Goal) & eh(remove_task,_h,Goal) & pr;
  pr;
  pr;
  dd & ah(queue_receiving(que) = remove_task(queue_receiving,unblocked\/pending)(que)) & pr & dd & ah(task: queue_receiving(que)) & eh(queue_receiving(que),_h,Goal) & eh(remove_task,_h,Goal) & pr;
  dd & ah(queue_receiving(que) = remove_task(queue_receiving,unblocked)(que)) & pr & dd & ah(task: queue_receiving(que)) & eh(queue_receiving(que),_h,Goal) & eh(remove_task,_h,Goal) & pr;
  pr;
  dd & ah(queue_sending(que) = remove_task(queue_sending,unblocked\/pending)(que)) & pr & dd & ah(task: queue_sending(que)) & eh(queue_sending(que),_h,Goal) & eh(remove_task,_h,Goal) & pr;
  dd & ah(queue_sending(que) = remove_task(queue_sending,unblocked)(que)) & pr & dd & ah(task: queue_sending(que)) & eh(queue_sending(que),_h,Goal) & eh(remove_task,_h,Goal) & pr;
  pr;
  pr;
  dd & ah(queue_receiving(que) = remove_task(queue_receiving,unblocked\/pending)(que)) & pr & dd & ah(task: queue_receiving(que)) & eh(queue_receiving(que),_h,Goal) & eh(remove_task,_h,Goal) & pr;
  dd & ah(queue_receiving(que) = remove_task(queue_receiving,unblocked)(que)) & pr & dd & ah(task: queue_receiving(que)) & eh(queue_receiving(que),_h,Goal) & eh(remove_task,_h,Goal) & pr;
  pr;
  dd & ah(queue_sending(que) = remove_task(queue_sending,unblocked\/pending)(que)) & pr & dd & ah(task: queue_sending(que)) & eh(queue_sending(que),_h,Goal) & eh(remove_task,_h,Goal) & pr;
  dd & ah(queue_sending(que) = remove_task(queue_sending,unblocked)(que)) & pr & dd & ah(task: queue_sending(que)) & eh(queue_sending(que),_h,Goal) & eh(remove_task,_h,Goal) & pr;
  pr;
  pr;
  dd & ah(task: remove_task(queue_sending,unblocked\/pending)(que)) & eh(remove_task,_h,Goal) & pr;
  pr;
  dd & ah(queue_receiving(que) = remove_task(queue_receiving,unblocked\/pending)(que)) & pr & dd & ah(task: queue_receiving(que)) & eh(queue_receiving(que),_h,Goal) & eh(remove_task,_h,Goal) & pr;
  dd & ah(queue_receiving(que) = remove_task(queue_receiving,unblocked)(que)) & pr & dd & ah(task: queue_receiving(que)) & eh(queue_receiving(que),_h,Goal) & eh(remove_task,_h,Goal) & pr;
  dd & ph(que,task,!(que,task).(que: queues & task: TASK & task: queue_receiving(que) => task: blocked)) & pr & pr & pr;
  pr;
  pr;
  dd & ah(task: remove_task(queue_sending,unblocked\/pending)(que)) & eh(remove_task,_h,Goal) & pr;
  pr;
  dd & ah(queue_receiving(que) = remove_task(queue_receiving,unblocked\/pending)(que)) & pr & dd & ah(task: queue_receiving(que)) & eh(queue_receiving(que),_h,Goal) & eh(remove_task,_h,Goal) & pr;
  dd & ah(queue_receiving(que) = remove_task(queue_receiving,unblocked)(que)) & pr & dd & ah(task: queue_receiving(que)) & eh(queue_receiving(que),_h,Goal) & eh(remove_task,_h,Goal) & pr;
  dd & ph(que,task,!(que,task).(que: queues & task: TASK & task: queue_receiving(que) => task: blocked)) & pr & pr & pr;
  pr;
  pr;
  dd & ah(task: remove_task(queue_sending,unblocked\/pending)(que)) & eh(remove_task,_h,Goal) & pr;
  pr;
  dd & ah(queue_receiving(que) = remove_task(queue_receiving,unblocked\/pending)(que)) & pr & dd & ah(task: queue_receiving(que)) & eh(queue_receiving(que),_h,Goal) & eh(remove_task,_h,Goal) & pr;
  dd & ah(queue_receiving(que) = remove_task(queue_receiving,unblocked)(que)) & pr & dd & ah(task: queue_receiving(que)) & eh(queue_receiving(que),_h,Goal) & eh(remove_task,_h,Goal) & pr;
  dd & ph(que,task,!(que,task).(que: queues & task: TASK & task: queue_receiving(que) => task: blocked)) & pr & pr & pr;
  pr;
  pr;
  dd & ah(task: remove_task(queue_sending,unblocked\/pending)(que)) & eh(remove_task,_h,Goal) & pr;
  pr;
  dd & ah(queue_receiving(que) = remove_task(queue_receiving,unblocked\/pending)(que)) & pr & dd & ah(task: queue_receiving(que)) & eh(queue_receiving(que),_h,Goal) & eh(remove_task,_h,Goal) & pr;
  dd & ah(queue_receiving(que) = remove_task(queue_receiving,unblocked)(que)) & pr & dd & ah(task: queue_receiving(que)) & eh(queue_receiving(que),_h,Goal) & eh(remove_task,_h,Goal) & pr;
  dd & ph(que,task,!(que,task).(que: queues & task: TASK & task: queue_receiving(que) => task: blocked)) & pr & pr & pr;
  pr;
  pr;
  dd & ah(task: remove_task(queue_sending,unblocked\/pending)(que)) & eh(remove_task,_h,Goal) & pr;
  pr;
  dd & ah(task: remove_task(queue_receiving,unblocked\/pending)(que)) & eh(remove_task,_h,Goal) & pr;
  pr;
  pr;
  pr;
  dd & ah(task: remove_task(queue_receiving,unblocked\/pending)(que)) & eh(remove_task,_h,Goal) & pr;
  dd & ah(queue_sending(que) = remove_task(queue_sending,unblocked\/pending)(que)) & pr & dd & ah(task: queue_sending(que)) & eh(queue_sending(que),_h,Goal) & eh(remove_task,_h,Goal) & pr;
  dd & ah(queue_sending(que) = remove_task(queue_sending,unblocked)(que)) & pr & dd & ah(task: queue_sending(que)) & eh(queue_sending(que),_h,Goal) & eh(remove_task,_h,Goal) & pr;
  dd & ph(que,task,!(que,task).(que: queues & task: TASK & task: queue_sending(que) => task: blocked)) & pr & pr & pr;
  pr;
  pr;
  pr;
  dd & ah(task: remove_task(queue_receiving,unblocked\/pending)(que)) & eh(remove_task,_h,Goal) & pr;
  dd & ah(queue_sending(que) = remove_task(queue_sending,unblocked\/pending)(que)) & pr & dd & ah(task: queue_sending(que)) & eh(queue_sending(que),_h,Goal) & eh(remove_task,_h,Goal) & pr;
  dd & ah(queue_sending(que) = remove_task(queue_sending,unblocked)(que)) & pr & dd & ah(task: queue_sending(que)) & eh(queue_sending(que),_h,Goal) & eh(remove_task,_h,Goal) & pr;
  dd & ph(que,task,!(que,task).(que: queues & task: TASK & task: queue_sending(que) => task: blocked)) & pr & pr & pr;
  pr;
  pr;
  pr;
  dd & ah(task: remove_task(queue_receiving,unblocked\/pending)(que)) & eh(remove_task,_h,Goal) & pr;
  dd & ah(queue_sending(que) = remove_task(queue_sending,unblocked\/pending)(que)) & pr & dd & ah(task: queue_sending(que)) & eh(queue_sending(que),_h,Goal) & eh(remove_task,_h,Goal) & pr;
  dd & ah(queue_sending(que) = remove_task(queue_sending,unblocked)(que)) & pr & dd & ah(task: queue_sending(que)) & eh(queue_sending(que),_h,Goal) & eh(remove_task,_h,Goal) & pr;
  dd & ph(que,task,!(que,task).(que: queues & task: TASK & task: queue_sending(que) => task: blocked)) & pr & pr & pr;
  pr;
  pr;
  pr;
  dd & ah(task: remove_task(queue_receiving,unblocked\/pending)(que)) & eh(remove_task,_h,Goal) & pr;
  dd & ah(queue_sending(que) = remove_task(queue_sending,unblocked\/pending)(que)) & pr & dd & ah(task: queue_sending(que)) & eh(queue_sending(que),_h,Goal) & eh(remove_task,_h,Goal) & pr;
  dd & ah(queue_sending(que) = remove_task(queue_sending,unblocked)(que)) & pr & dd & ah(task: queue_sending(que)) & eh(queue_sending(que),_h,Goal) & eh(remove_task,_h,Goal) & pr;
  dd & ph(que,task,!(que,task).(que: queues & task: TASK & task: queue_sending(que) => task: blocked)) & pr & pr & pr;
  pr;
  dd & ah(task: remove_task(queue_receiving,unblocked\/pending)(que)) & eh(remove_task,_h,Goal) & pr;
  dd & ah(task: remove_task(queue_sending,unblocked\/pending)(que)) & eh(remove_task,_h,Goal) & pr;
  pr;
  dd & ah(task: remove_task(queue_receiving,unblocked\/pending)(que)) & eh(remove_task,_h,Goal) & pr;
  dd & ah(task: remove_task(queue_receiving,unblocked\/pending)(que)) & eh(remove_task,_h,Goal) & pr;
  dd & ah(task: remove_task(queue_receiving,unblocked\/pending)(que)) & eh(remove_task,_h,Goal) & pr;
  dd & ah(task: remove_task(queue_sending,unblocked\/pending)(que)) & eh(remove_task,_h,Goal) & pr;
  dd & ah(task: remove_task(queue_sending,unblocked\/pending)(que)) & eh(remove_task,_h,Goal) & pr;
  dd & ah(task: remove_task(queue_sending,unblocked\/pending)(que)) & eh(remove_task,_h,Goal) & pr;
  pr;
  dd & ah(task: remove_task(queue_receiving,unblocked\/pending)(que)) & eh(remove_task,_h,Goal) & pr;
  dd & ah(task: remove_task(queue_receiving,unblocked\/pending)(que)) & eh(remove_task,_h,Goal) & pr;
  dd & ah(task: remove_task(queue_receiving,unblocked\/pending)(que)) & eh(remove_task,_h,Goal) & pr;
  dd & ah(task: remove_task(queue_sending,unblocked\/pending)(que)) & eh(remove_task,_h,Goal) & pr;
  dd & ah(task: remove_task(queue_sending,unblocked\/pending)(que)) & eh(remove_task,_h,Goal) & pr;
  dd & ah(task: remove_task(queue_sending,unblocked\/pending)(que)) & eh(remove_task,_h,Goal) & pr;
  pr;
  dd & ah(task: remove_task(queue_receiving,unblocked\/pending)(que)) & eh(remove_task,_h,Goal) & pr;
  dd & ah(task: remove_task(queue_receiving,unblocked\/pending)(que)) & eh(remove_task,_h,Goal) & pr;
  dd & ah(task: remove_task(queue_receiving,unblocked\/pending)(que)) & eh(remove_task,_h,Goal) & pr;
  dd & ah(task: remove_task(queue_sending,unblocked\/pending)(que)) & eh(remove_task,_h,Goal) & pr;
  dd & ah(task: remove_task(queue_sending,unblocked\/pending)(que)) & eh(remove_task,_h,Goal) & pr;
  dd & ah(task: remove_task(queue_sending,unblocked\/pending)(que)) & eh(remove_task,_h,Goal) & pr;
  pr;
  dd & ah(task: remove_task(queue_receiving,unblocked\/pending)(que)) & eh(remove_task,_h,Goal) & pr;
  dd & ah(task: remove_task(queue_receiving,unblocked\/pending)(que)) & eh(remove_task,_h,Goal) & pr;
  dd & ah(task: remove_task(queue_receiving,unblocked\/pending)(que)) & eh(remove_task,_h,Goal) & pr;
  dd & ah(task: remove_task(queue_sending,unblocked\/pending)(que)) & eh(remove_task,_h,Goal) & pr;
  dd & ah(task: remove_task(queue_sending,unblocked\/pending)(que)) & eh(remove_task,_h,Goal) & pr;
  dd & ah(task: remove_task(queue_sending,unblocked\/pending)(que)) & eh(remove_task,_h,Goal) & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & pp(rp.1);
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & pr;
  dd & pr;
  pr;
  pr;
  pr;
  dd & pr;
  pr;
  pr;
  pr;
  pr;
  dd & ah(tasks-{idle}\/{TASK_NULL} <: (tasks\/{task})-{idle}\/{TASK_NULL}) & pr & dd & pr;
  pr;
  pr;
  dd & ah(tasks-{idle}\/{TASK_NULL} <: (tasks\/{task})-{idle}\/{TASK_NULL}) & pr & dd & pr;
  pr;
  pr;
  dc(pxQueue = que$0) & pr & dd & dd & ah(task$0: queue_sending(que$0)) & pr & ah(task$0: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(que$0)) & ae(queue_sending(pxQueue)-{task},aa) & dd & ah((queue_sending<+{pxQueue|->aa})(que$0) = queue_sending(que$0)) & pr & dd & eh((queue_sending<+{pxQueue|->aa})(que$0),_h,Goal) & dd & ph(que$0,pxQueue,task$0,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_sending(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & pr & dd & pr;
  dc(pxQueue/=que$0) & dd & dd & ph(que$0,task$0,!(que,task).(que: queues & task: TASK & task: queue_sending(que) => task: blocked)) & pr & pr & ah(task$0: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(que$0) & pxQueue/=que$0) & pr & pr & ae(queue_sending(pxQueue)-{task},aa) & dd & ah((queue_sending<+{pxQueue|->aa})(que$0) = queue_sending(que$0)) & pr & dd & eh((queue_sending<+{pxQueue|->aa})(que$0),_h,Goal) & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dc(pxQueue = que$0) & pr & dd & dd & ah(task$0: queue_sending(que$0)) & pr & ah(task$0: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(que$0)) & ae(queue_sending(pxQueue)-{task},aa) & dd & ah((queue_sending<+{pxQueue|->aa})(que$0) = queue_sending(que$0)) & pr & dd & eh((queue_sending<+{pxQueue|->aa})(que$0),_h,Goal) & dd & ph(que$0,pxQueue,task$0,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_sending(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & pr & dd & pr;
  dc(pxQueue/=que$0) & dd & dd & ph(que$0,task$0,!(que,task).(que: queues & task: TASK & task: queue_sending(que) => task: blocked)) & pr & pr & ah(task$0: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(que$0) & pxQueue/=que$0) & pr & pr & ae(queue_sending(pxQueue)-{task},aa) & dd & ah((queue_sending<+{pxQueue|->aa})(que$0) = queue_sending(que$0)) & pr & dd & eh((queue_sending<+{pxQueue|->aa})(que$0),_h,Goal) & pr;
  dc(pxQueue = mt) & pr & dd & dd & ph(mt,!mt.(mt: queues & mt: mutexes & queue_items(mt) = {} => mutex_holder(mt): tasks & mutex_holder(mt)/=idle)) & pr & pr & pr & ah((queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {} & pxQueue/=mt) & pr & pr & pr & pr & ah((mutex_holder<+{pxQueue|->running})(mt) = mutex_holder(mt)) & pr & dd & eh((mutex_holder<+{pxQueue|->running})(mt),_h,Goal) & pr;
  dc(pxQueue = mt) & pr & dd & dd & ah((mutex_holder<+{pxQueue|->running})(mt) = mutex_holder(mt)) & pr & dd & eh((mutex_holder<+{pxQueue|->running})(mt),_h,Goal) & ah(suspended\/blocked-{task}\/(ready\/{task}) = tasks) & pr & dd & eh(suspended\/blocked-{task}\/(ready\/{task}),_h,Goal) & ph(mt,!mt.(mt: queues & mt: mutexes & queue_items(mt) = {} => mutex_holder(mt): tasks & mutex_holder(mt)/=idle)) & pr & pr & pr & ah((queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {} & pxQueue/=mt) & pr & pr & ae(queue_items(pxQueue)-{ITEM_EMPTY},aa) & dd & pr;
  pr;
  pr;
  pr;
  dc(pxQueue = que$0) & pr & dd & dd & ah(task$0: queue_sending(que$0)) & pr & ah(task$0: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(que$0)) & ae(queue_sending(pxQueue)-{task},aa) & dd & ah((queue_sending<+{pxQueue|->aa})(que$0) = queue_sending(que$0)) & pr & dd & eh((queue_sending<+{pxQueue|->aa})(que$0),_h,Goal) & dd & ph(que$0,pxQueue,task$0,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_sending(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & pr & dd & pr;
  dc(pxQueue/=que$0) & dd & dd & ph(que$0,task$0,!(que,task).(que: queues & task: TASK & task: queue_sending(que) => task: blocked)) & pr & pr & ah(task$0: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(que$0) & pxQueue/=que$0) & pr & pr & ae(queue_sending(pxQueue)-{task},aa) & dd & ah((queue_sending<+{pxQueue|->aa})(que$0) = queue_sending(que$0)) & pr & dd & eh((queue_sending<+{pxQueue|->aa})(que$0),_h,Goal) & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & dc(que = xQueue) & pr & dd & pr;
  pr;
  pr;
  dc(pxQueue = que$0) & pr & dd & dd & ah(task$0: queue_sending(que$0)) & pr & ah(task$0: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(que$0)) & ae(queue_sending(pxQueue)-{task},aa) & dd & ah((queue_sending<+{pxQueue|->aa})(que$0) = queue_sending(que$0)) & pr & dd & eh((queue_sending<+{pxQueue|->aa})(que$0),_h,Goal) & dd & ph(que$0,pxQueue,task$0,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_sending(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & pr & dd & pr;
  dc(pxQueue/=que$0) & dd & dd & ph(que$0,task$0,!(que,task).(que: queues & task: TASK & task: queue_sending(que) => task: blocked)) & pr & pr & ah(task$0: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(que$0) & pxQueue/=que$0) & pr & pr & ae(queue_sending(pxQueue)-{task},aa) & dd & ah((queue_sending<+{pxQueue|->aa})(que$0) = queue_sending(que$0)) & pr & dd & eh((queue_sending<+{pxQueue|->aa})(que$0),_h,Goal) & pr;
  dc(pxQueue = mt) & pr & dd & dd & ph(mt,!mt.(mt: queues & mt: mutexes & queue_items(mt) = {} => mutex_holder(mt): tasks & mutex_holder(mt)/=idle)) & pr & pr & pr & ah((queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {} & pxQueue/=mt) & pr & pr & pr & pr & ah((mutex_holder<+{pxQueue|->running})(mt) = mutex_holder(mt)) & pr & dd & eh((mutex_holder<+{pxQueue|->running})(mt),_h,Goal) & pr;
  dc(pxQueue = mt) & pr & dd & dd & ah((mutex_holder<+{pxQueue|->running})(mt) = mutex_holder(mt)) & pr & dd & eh((mutex_holder<+{pxQueue|->running})(mt),_h,Goal) & ah(suspended\/blocked-{task}\/(ready\/{task}) = tasks) & pr & dd & eh(suspended\/blocked-{task}\/(ready\/{task}),_h,Goal) & ph(mt,!mt.(mt: queues & mt: mutexes & queue_items(mt) = {} => mutex_holder(mt): tasks & mutex_holder(mt)/=idle)) & pr & pr & pr & ah((queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {} & pxQueue/=mt) & pr & pr & ae(queue_items(pxQueue)-{ITEM_EMPTY},aa) & dd & pr;
  pr;
  dd & dc(que = xQueue) & pr & dd & pr;
  pr;
  pr;
  dc(pxQueue = que$0) & pr & dd & dd & ah(task$0: queue_sending(que$0)) & pr & ah(task$0: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(que$0)) & ae(queue_sending(pxQueue)-{task},aa) & dd & ah((queue_sending<+{pxQueue|->aa})(que$0) = queue_sending(que$0)) & pr & dd & eh((queue_sending<+{pxQueue|->aa})(que$0),_h,Goal) & dd & ph(que$0,pxQueue,task$0,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_sending(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & pr & dd & pr;
  dc(pxQueue/=que$0) & dd & dd & ph(que$0,task$0,!(que,task).(que: queues & task: TASK & task: queue_sending(que) => task: blocked)) & pr & pr & ah(task$0: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(que$0) & pxQueue/=que$0) & pr & pr & ae(queue_sending(pxQueue)-{task},aa) & dd & ah((queue_sending<+{pxQueue|->aa})(que$0) = queue_sending(que$0)) & pr & dd & eh((queue_sending<+{pxQueue|->aa})(que$0),_h,Goal) & pr;
  dd & dc(que = xQueue) & pr & dd & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & dc(que = xQueue) & pr & dd & pr;
  pr;
  dd & dc(que = xQueue) & pr & dd & pr;
  pr;
  pr;
  dc(pxQueue = que$0) & pr & dd & dd & ah(task$0: queue_sending(que$0)) & pr & ah(task$0: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(que$0)) & ae(queue_sending(pxQueue)-{task},aa) & dd & ah((queue_sending<+{pxQueue|->aa})(que$0) = queue_sending(que$0)) & pr & dd & eh((queue_sending<+{pxQueue|->aa})(que$0),_h,Goal) & dd & ph(que$0,pxQueue,task$0,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_sending(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & pr & dd & pr;
  dc(pxQueue/=que$0) & dd & dd & ph(que$0,task$0,!(que,task).(que: queues & task: TASK & task: queue_sending(que) => task: blocked)) & pr & pr & ah(task$0: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(que$0) & pxQueue/=que$0) & pr & pr & ae(queue_sending(pxQueue)-{task},aa) & dd & ah((queue_sending<+{pxQueue|->aa})(que$0) = queue_sending(que$0)) & pr & dd & eh((queue_sending<+{pxQueue|->aa})(que$0),_h,Goal) & pr;
  dc(pxQueue = mt) & pr & dd & dd & ph(mt,!mt.(mt: queues & mt: mutexes & queue_items(mt) = {} => mutex_holder(mt): tasks & mutex_holder(mt)/=idle)) & pr & pr & pr & ah((queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {} & pxQueue/=mt) & pr & pr & pr & pr & ah((mutex_holder<+{pxQueue|->running})(mt) = mutex_holder(mt)) & pr & dd & eh((mutex_holder<+{pxQueue|->running})(mt),_h,Goal) & pr;
  dc(pxQueue = mt) & pr & dd & dd & ah((mutex_holder<+{pxQueue|->running})(mt) = mutex_holder(mt)) & pr & dd & eh((mutex_holder<+{pxQueue|->running})(mt),_h,Goal) & ah(suspended\/blocked-{task}\/(ready\/{task}) = tasks) & pr & dd & eh(suspended\/blocked-{task}\/(ready\/{task}),_h,Goal) & ph(mt,!mt.(mt: queues & mt: mutexes & queue_items(mt) = {} => mutex_holder(mt): tasks & mutex_holder(mt)/=idle)) & pr & pr & pr & ah((queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {} & pxQueue/=mt) & pr & pr & ae(queue_items(pxQueue)-{ITEM_EMPTY},aa) & dd & pr;
  pr;
  pr;
  dd & dc(mut = xQueue) & pr & dd & pr;
  dc(pxQueue = que$0) & pr & dd & dd & ah(task$0: queue_sending(que$0)) & pr & ah(task$0: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(que$0)) & ae(queue_sending(pxQueue)-{task},aa) & dd & ah((queue_sending<+{pxQueue|->aa})(que$0) = queue_sending(que$0)) & pr & dd & eh((queue_sending<+{pxQueue|->aa})(que$0),_h,Goal) & dd & ph(que$0,pxQueue,task$0,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_sending(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & pr & dd & pr;
  dc(pxQueue/=que$0) & dd & dd & ph(que$0,task$0,!(que,task).(que: queues & task: TASK & task: queue_sending(que) => task: blocked)) & pr & pr & ah(task$0: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(que$0) & pxQueue/=que$0) & pr & pr & ae(queue_sending(pxQueue)-{task},aa) & dd & ah((queue_sending<+{pxQueue|->aa})(que$0) = queue_sending(que$0)) & pr & dd & eh((queue_sending<+{pxQueue|->aa})(que$0),_h,Goal) & pr;
  pr;
  pr;
  dd & dc(que = xQueue) & pr & dd & pr;
  dd & dc(mt = xQueue) & pr & dd & ph(mt,!mt.(mt: queues & mt: mutexes & queue_items(mt) = {} => mutex_holder(mt): tasks & mutex_holder(mt)/=idle)) & pr & pr & ah((queue_items<+{xQueue|->queue_items(xQueue)-{ITEM_EMPTY}})(mt) = {} & mt/=xQueue) & pr & pr & ae(queue_items(xQueue)-{ITEM_EMPTY},aa) & dd & pr & ah((queue_items<+{xQueue|->queue_items(xQueue)-{ITEM_EMPTY}})(mt) = {} & xQueue/=mt) & pr & pr & pr;
  dd & dc(mt = xQueue) & pr & dd & ph(mt,!mt.(mt: queues & mt: mutexes & queue_items(mt) = {} => mutex_holder(mt): tasks & mutex_holder(mt)/=idle)) & pr & pr & pr & ah((queue_items<+{xQueue|->queue_items(xQueue)-{ITEM_EMPTY}})(mt) = {} & mt/=xQueue) & pr & pr & ae(queue_items(xQueue)-{ITEM_EMPTY},aa) & dd & pr;
  pr;
  dd & dc(que = xQueue) & pr & dd & pr;
  pr;
  pr;
  pr;
  pr;
  dc(pxQueue = que$0) & pr & dd & dd & ah(task$0: queue_sending(que$0)) & pr & ah(task$0: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(que$0)) & ae(queue_sending(pxQueue)-{task},aa) & dd & ah((queue_sending<+{pxQueue|->aa})(que$0) = queue_sending(que$0)) & pr & dd & eh((queue_sending<+{pxQueue|->aa})(que$0),_h,Goal) & dd & ph(que$0,pxQueue,task$0,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_sending(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & pr & dd & pr;
  dc(pxQueue/=que$0) & dd & dd & ph(que$0,task$0,!(que,task).(que: queues & task: TASK & task: queue_sending(que) => task: blocked)) & pr & pr & ah(task$0: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(que$0) & pxQueue/=que$0) & pr & pr & ae(queue_sending(pxQueue)-{task},aa) & dd & ah((queue_sending<+{pxQueue|->aa})(que$0) = queue_sending(que$0)) & pr & dd & eh((queue_sending<+{pxQueue|->aa})(que$0),_h,Goal) & pr;
  dc(pxQueue = mt) & pr & dd & dd & ph(mt,!mt.(mt: queues & mt: mutexes & queue_items(mt) = {} => mutex_holder(mt): tasks & mutex_holder(mt)/=idle)) & pr & pr & pr & ah((queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {} & pxQueue/=mt) & pr & pr & pr & pr & ah((mutex_holder<+{pxQueue|->running})(mt) = mutex_holder(mt)) & pr & dd & eh((mutex_holder<+{pxQueue|->running})(mt),_h,Goal) & pr;
  dc(pxQueue = mt) & pr & dd & dd & ah((mutex_holder<+{pxQueue|->running})(mt) = mutex_holder(mt)) & pr & dd & eh((mutex_holder<+{pxQueue|->running})(mt),_h,Goal) & ah(suspended\/blocked-{task}\/(ready\/{task}) = tasks) & pr & dd & eh(suspended\/blocked-{task}\/(ready\/{task}),_h,Goal) & ph(mt,!mt.(mt: queues & mt: mutexes & queue_items(mt) = {} => mutex_holder(mt): tasks & mutex_holder(mt)/=idle)) & pr & pr & pr & ah((queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {} & pxQueue/=mt) & pr & pr & ae(queue_items(pxQueue)-{ITEM_EMPTY},aa) & dd & pr;
  pr;
  pr;
  dc(pxQueue = que) & pr & ah(task: (queue_receiving<+{que|->(queue_receiving(que)\/{running})})(que) => task: queue_receiving(que) or task: {running}) & pr & dd & pr & ah(task: queue_receiving(que) or task: {running}) & pr & dd & dc(task: queue_receiving(que)) & dd & ph(que,task,!(que,task).(que: queues & task: TASK & task: queue_receiving(que) => task: blocked)) & pr & pr & pr & dd & ah(task: {running}) & ah(not(task: queue_receiving(que)) & task: queue_receiving(que)) & pr & pr & dd & ah(task = running) & ah(task: {running}) & pr & ah(task = running & not(running = task)) & pr & pr & dd & ah(not(task: queue_receiving(que))) & pr & dd & ah(not(task: queue_receiving(que)) & task: queue_receiving(que)) & pr & pr & dd & dd & ph(que,task,!(que,task).(que: queues & task: TASK & task: queue_receiving(que) => task: blocked)) & pr & pr & ah(task: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(que) & pxQueue/=que) & pr & pr & ae(queue_receiving(pxQueue)\/{running},aa) & dd & ah((queue_receiving<+{pxQueue|->aa})(que) = queue_receiving(que)) & pr & dd & eh((queue_receiving<+{pxQueue|->aa})(que),_h,Goal) & dd & pr;
  pr;
  dc(pxQueue = que) & pr & dd & dd & ph(que,task,!(que,task).(que: queues & task: TASK & task: queue_receiving(que) => task: blocked)) & pr & pr & ah(task: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(que) & pxQueue/=que) & pr & pr & ae(queue_receiving(pxQueue)\/{running},aa) & dd & ah((queue_receiving<+{pxQueue|->aa})(que) = queue_receiving(que)) & pr & dd & eh((queue_receiving<+{pxQueue|->aa})(que),_h,Goal) & dd & pr;
  pr;
  dd & dc(que = xQueue) & pr & dd & pr;
  dd & dc(que = xQueue) & pr & dd & pr;
  pr;
  pr;
  dc(pxQueue = que$0) & pr & dd & dd & ah((queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que$0) = queue_receiving(que$0)) & pr & ae(queue_receiving(pxQueue)-{task},aa) & dd & pr & dd & pr & dd & ah(task$0: queue_receiving(que$0)) & pr & dd & ph(pxQueue,que$0,task,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_receiving(q1) => tk/:queue_receiving(q2))) & pr & pr & pr & pr & pr & dd & pr;
  dc(task$0 = task) & dd & dd & ph(que$0,task$0,!(que,task).(que: queues & task: TASK & task: queue_receiving(que) => task: blocked)) & pr & pr & pr & ah(task$0: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que$0)) & dd & dc(que$0 = pxQueue) & pr & dd & ah(task$0: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que$0) & que$0/=pxQueue) & pr & pr & ae(queue_receiving(pxQueue)-{task},aa) & dd & pr;
  pr;
  pr;
  pr;
  pr;
  dc(pxQueue = que$0) & pr & dd & dd & ah((queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que$0) = queue_receiving(que$0)) & pr & ae(queue_receiving(pxQueue)-{task},aa) & dd & pr & dd & pr & dd & ah(task$0: queue_receiving(que$0)) & pr & dd & ph(pxQueue,que$0,task,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_receiving(q1) => tk/:queue_receiving(q2))) & pr & pr & pr & pr & pr & dd & pr;
  dc(task$0 = task) & dd & dd & ph(que$0,task$0,!(que,task).(que: queues & task: TASK & task: queue_receiving(que) => task: blocked)) & pr & pr & pr & ah(task$0: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que$0)) & dd & dc(que$0 = pxQueue) & pr & dd & ah(task$0: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que$0) & que$0/=pxQueue) & pr & pr & ae(queue_receiving(pxQueue)-{task},aa) & dd & pr;
  pr;
  pr;
  pr;
  pr;
  dc(pxQueue = que$0) & pr & dd & dd & ah((queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que$0) = queue_receiving(que$0)) & pr & ae(queue_receiving(pxQueue)-{task},aa) & dd & pr & dd & pr & dd & ah(task$0: queue_receiving(que$0)) & pr & dd & ph(pxQueue,que$0,task,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_receiving(q1) => tk/:queue_receiving(q2))) & pr & pr & pr & pr & pr & dd & pr;
  dc(task$0 = task) & dd & dd & ph(que$0,task$0,!(que,task).(que: queues & task: TASK & task: queue_receiving(que) => task: blocked)) & pr & pr & pr & ah(task$0: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que$0)) & dd & dc(que$0 = pxQueue) & pr & dd & ah(task$0: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que$0) & que$0/=pxQueue) & pr & pr & ae(queue_receiving(pxQueue)-{task},aa) & dd & pr;
  pr;
  pr;
  dc(pxQueue = mt) & pr & pr;
  dd & dc(mt = pxQueue) & ah((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(pxQueue) = {}) & ah((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {}) & eh(mt,_h,Goal) & dd & ah(not((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(pxQueue) = {})) & pr & dd & ah((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(pxQueue) = {} & not((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(pxQueue) = {})) & pr & pr & dd & ph(mt,!mt.(mt: queues & mt: mutexes & queue_items(mt) = {} => mutex_holder(mt): tasks & mutex_holder(mt)/=idle)) & pr & pr & pr & ah((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {} & mt/=pxQueue) & pr & pr & ae(queue_items(pxQueue)\/{ITEM_EMPTY},aa) & dd & pr & dd & ah(mutex_holder(mt): tasks & mt/=pxQueue) & pr & pr & pr;
  pr;
  dc(pxQueue = que$0) & pr & dd & dd & ah((queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que$0) = queue_receiving(que$0)) & pr & ae(queue_receiving(pxQueue)-{task},aa) & dd & pr & dd & pr & dd & ah(task$0: queue_receiving(que$0)) & pr & dd & ph(pxQueue,que$0,task,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_receiving(q1) => tk/:queue_receiving(q2))) & pr & pr & pr & pr & pr & dd & pr;
  dc(task$0 = task) & dd & dd & ph(que$0,task$0,!(que,task).(que: queues & task: TASK & task: queue_receiving(que) => task: blocked)) & pr & pr & pr & ah(task$0: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que$0)) & dd & dc(que$0 = pxQueue) & pr & dd & ah(task$0: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que$0) & que$0/=pxQueue) & pr & pr & ae(queue_receiving(pxQueue)-{task},aa) & dd & pr;
  pr;
  dd & dc(que/=pxQueue) & dd & pr & dd & pr;
  dc(pxQueue = mt) & pr & pr;
  dd & dc(mt = pxQueue) & ah((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(pxQueue) = {}) & ah((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {}) & eh(mt,_h,Goal) & dd & ah(not((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(pxQueue) = {})) & pr & dd & ah((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(pxQueue) = {} & not((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(pxQueue) = {})) & pr & pr & dd & ph(mt,!mt.(mt: queues & mt: mutexes & queue_items(mt) = {} => mutex_holder(mt): tasks & mutex_holder(mt)/=idle)) & pr & pr & pr & ah((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {} & mt/=pxQueue) & pr & pr & ae(queue_items(pxQueue)\/{ITEM_EMPTY},aa) & dd & pr & dd & ah(mutex_holder(mt): tasks & mt/=pxQueue) & pr & pr & pr;
  pr;
  pr;
  dc(task = running) & pr & dd & dd & ph(que,task,!(que,task).(que: queues & task: TASK & task: queue_sending(que) => task: blocked)) & pr & pr & pr & ah(task: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(que)) & dc(pxQueue = que) & pr & dd & ae(queue_sending(pxQueue)\/{running},aa) & dd & dd & ah(task: (queue_sending<+{pxQueue|->aa})(que) & pxQueue/=que) & pr & pr & pr & dd & pr;
  pr;
  pr;
  pr;
  pr
END
&
THEORY PassList IS
  Force(1),(?;0;1;2;3);
  Force(1),(?;0;1;2;3);
  Force(1),?;
  Force(1),?;
  Force(1),(?;0;1;2;3);
  Force(1),(?;0;1;2;3);
  Force(1),(?;0;1;2;3);
  Force(1),(?;0;1;2;3);
  Force(1),?;
  Force(1),(?;0;1;2;3);
  Force(1),(?;0;1;2;3);
  Force(1),(?;0;1;2;3);
  Force(1),(?;0;1;2;3);
  Force(1),?;
  Force(1),(?;0;1;2;3);
  Force(1),(?;0;1;2;3);
  Force(1),?;
  Force(1),?;
  Force(1),(?;0;1;2;3);
  Force(1),(?;0;1;2;3);
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(2),?;
  Force(0),(?;0;1;2;3);
  Force(2),?;
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(2),(?;0;1;2;3);
  Force(2),?;
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(2),(?;0;1;2;3);
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(2),?;
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(2),?;
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(2),(?;0;1;2;3);
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(2),(?;0;1;2;3);
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(2),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?
END
&
THEORY ManForms 
END
&
THEORY Version IS
  POVersion(V3.8.3)(CLT == "V3.7.6")(genOPO == KO,genDivergencePO == KO,local_op == OK);
  PRVersion("V3.3.3.p39")(CLT == "V3.7.6")
END
