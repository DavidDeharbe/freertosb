THEORY BalanceX IS
  Queue,215,40,0,160,9,0,0;
  AssertionLemmas,3,0,0,3,0,0,0;
  Initialisation,6,0,0,6,0,0,0;
  xQueueCreate,15,6,0,9,0,0,0;
  q_queueDelete,72,0,0,72,0,0,0;
  q_sendItem,10,4,0,5,1,0,0;
  q_sendItemMutex,12,4,0,6,2,0,0;
  q_insertTaskWaitingToSend,5,2,0,2,1,0,0;
  q_insertTaskWaitingToReceive,5,2,0,2,1,0,0;
  q_receivedItem,31,9,0,20,2,0,0;
  q_removeFromEventListQueue,8,0,0,6,2,0,0;
  q_endScheduler,6,0,0,6,0,0,0;
  q_resumeAll,8,0,0,2,0,0,0;
  q_createSemaphore,16,6,0,10,0,0,0;
  q_createMutex,18,7,0,11,0,0,0
END
&
THEORY ProofState IS
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Unproved;
  Unproved;
  Unproved;
  Unproved;
  Unproved;
  Unproved;
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(1);
  Proved(1);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(1);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(1);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(1);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(1);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(1);
  Proved(Util);
  Proved(1);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(1);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0)
END
&
THEORY MethodList IS
  pr;
  dc(mutex = mt$0) & pr & dd & dd & ph(mt$0,!mt.(mt: mutexes & queue_items(mt)/={} => mutex_holder(mt) = TASK_NULL)) & pr & ah(not((queue_items\/{mutex|->{ITEM_EMPTY}})(mt$0) = {}) & mt$0/=mutex) & pr & pr & pr & pr;
  dc(mutex = mt$0) & pr & dd & dd & ph(mt$0,!mt.(mt: mutexes & queue_items(mt) = {} => mutex_holder(mt)/=TASK_NULL)) & pr & pr & pr;
  dd & pr;
  pr;
  dc(mutex = q1) & pr & dd & dc(mutex = q2) & pr & dd & dd & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_sending(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & ah(tk: (queue_sending\/{mutex|->{}})(q1) & mutex/=q1) & pr & pr & pr & pr;
  dc(mutex = q1) & pr & dd & dc(mutex = q2) & pr & dd & dd & pr & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_receiving(q1) => tk/:queue_receiving(q2))) & pr & pr & pr & pr & ah(tk: (queue_receiving\/{mutex|->{}})(q1) & mutex/=q1) & pr & pr;
  dc(mutex = q2) & pr & dd & dc(mutex = q1) & pr & dd & dd & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => tk/:queue_receiving(q1))) & ah(q1: queues\/{mutex} & q1/:{mutex}) & pr & pr & pr & pr & pr & pr & pr;
  dc(mutex = q1) & pr & dd & dc(mutex = q2) & pr & dd & dd & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => tk/:queue_sending(q2))) & ah(q1: queues\/{mutex} & q1/:{mutex}) & pr & pr & pr & ah(q2: queues\/{mutex} & q2/:{mutex}) & pr & pr & pr & pr & ah(tk: (queue_receiving\/{mutex|->{}})(q1) & q1/=mutex) & pr & pr & pr & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dc(semaphore = mt) & dd & dd & ph(mt,!mt.(mt: mutexes & queue_items(mt)/={} => mutex_holder(mt) = TASK_NULL)) & pr & ah(not((queue_items\/{semaphore|->s_items})(mt) = {}) & semaphore/=mt) & pr & pr & pr;
  dc(semaphore = mt) & dd & dd & ph(mt,!mt.(mt: mutexes & queue_items(mt) = {} => mutex_holder(mt)/=TASK_NULL)) & pr & ah((queue_items\/{semaphore|->s_items})(mt) = {} & mt/=semaphore) & pr & pr & pr;
  dc(semaphore = q1) & pr & dd & dc(semaphore = q2) & pr & dd & dd & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_sending(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & ah(tk: (queue_sending\/{semaphore|->{}})(q1) & semaphore/=q1) & pr & pr & pr & pr;
  dc(semaphore = q1) & pr & dd & dc(semaphore = q2) & pr & dd & dd & pr & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_receiving(q1) => tk/:queue_receiving(q2))) & pr & pr & pr & pr & ah(tk: (queue_receiving\/{semaphore|->{}})(q1) & semaphore/=q1) & pr & pr;
  dc(semaphore = q2) & pr & dd & dc(semaphore = q1) & pr & dd & dd & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => tk/:queue_receiving(q1))) & ah(q1: queues\/{semaphore} & q1/:{semaphore}) & pr & pr & pr & ah(q2: queues\/{semaphore} & q2/:{semaphore}) & pr & pr & pr & pr & ah(tk: (queue_sending\/{semaphore|->{}})(q2) & semaphore/=q2) & pr & pr & pr & pr;
  dc(semaphore = q1) & pr & dd & dc(semaphore = q2) & pr & dd & dd & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => tk/:queue_sending(q2))) & ah(q1: queues\/{semaphore} & q1/:{semaphore}) & pr & pr & pr & ah(q2: queues\/{semaphore} & q2/:{semaphore}) & pr & pr & pr & pr & ah(tk: (queue_receiving\/{semaphore|->{}})(q1) & q1/=semaphore) & pr & pr & pr & ah(tk: (queue_receiving\/{semaphore|->{}})(q1) & semaphore/=q1) & pr & pr & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  ?;
  ?;
  ?;
  ?;
  ?;
  ?;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dc(pxQueue = mt) & dd & dd & ph(mt,!mt.(mt: mutexes & queue_items(mt)/={} => mutex_holder(mt) = TASK_NULL)) & pr & ah(not((queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {}) & mt/=pxQueue) & pr & pr & pr & ah(not((queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {}) & pxQueue/=mt) & pr & pr & pr;
  dc(pxQueue = mt) & dd & dd & ph(mt,!mt.(mt: mutexes & queue_items(mt) = {} => mutex_holder(mt)/=TASK_NULL)) & pr & ah((queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {} & mt/=pxQueue) & pr & pr & pr & ah((queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {} & mt/=pxQueue) & pr & pr & ae(queue_items(pxQueue)-{item},aa) & dd & pr;
  dc(pxQueue = q1) & pr & dd & dd & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_sending(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & ah(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) & pxQueue/=q1) & pr & pr & ae(queue_sending(pxQueue)-{task},aa) & dd & ah((queue_sending<+{pxQueue|->aa})(q1) = queue_sending(q1)) & pr & dd & eh((queue_sending<+{pxQueue|->aa})(q1),_h,Goal) & dd & dc(pxQueue = q2) & pr & dd & ae(queue_sending(pxQueue)-{task},aa) & dd & pr;
  dc(pxQueue = q2) & pr & dd & dd & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => tk/:queue_receiving(q1))) & pr & pr & pr & ah(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) & pxQueue/=q2) & pr & pr & ae(queue_sending(pxQueue)-{task},aa) & dd & pr & ah(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) & q2/=pxQueue) & pr & pr & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dc(pxQueue = mt) & pr & dd & dd & ph(mt,!mt.(mt: mutexes & queue_items(mt)/={} => mutex_holder(mt) = TASK_NULL)) & pr & ah(not((queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}) & not(mt = pxQueue)) & pr & pr & ae(queue_items(pxQueue)-{ITEM_EMPTY},aa) & dd & pr & ah(not((queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}) & not(pxQueue = mt)) & pr & pr & pr & ah((queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {} = (queue_items(mt) = {})) & pr & dd & ah(not((queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {})) & pr & ah(not((queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}) = not(queue_items(mt) = {})) & pr & dd & ah(not((queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {})) & pr & ah(not((queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}) = not(queue_items(mt) = {})) & pr & ct & pr & ah(queue_items(mt) = {}) & ah(not((queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}) = not(queue_items(mt) = {})) & pr & ah(not((queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}) = not(queue_items(mt) = {})) & pr & eh(not((queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}),_h,AllHyp) & pr & pr;
  dc(pxQueue = mt) & pr & dd & dd & ah(not((mutex_holder<+{pxQueue|->rTask})(mt) = TASK_NULL) = not(mutex_holder(mt) = TASK_NULL)) & pr & dd & eh(not((mutex_holder<+{pxQueue|->rTask})(mt) = TASK_NULL),_h,Goal) & ph(mt,!mt.(mt: mutexes & queue_items(mt) = {} => mutex_holder(mt)/=TASK_NULL)) & pr & pr & ah((queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {} & mt/=pxQueue & pxQueue/=mt) & pr & pr & pr & ae(queue_items(pxQueue)-{ITEM_EMPTY},aa) & dd & pr;
  pr;
  dd & pr;
  dc(pxQueue = q1) & pr & pr & dd & dd & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_sending(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & ah(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) & pxQueue/=q1) & pr & pr & ae(queue_sending(pxQueue)-{task},aa) & dd & ah((queue_sending<+{pxQueue|->aa})(q1) = queue_sending(q1)) & pr & dd & eh((queue_sending<+{pxQueue|->aa})(q1),_h,Goal) & dd & dc(pxQueue = q2) & pr & dd & ah(not(tk: queue_sending(q2)) & pxQueue/=q2) & pr & pr & ae(queue_sending(pxQueue)-{task},aa) & dd & pr;
  dc(pxQueue = q2) & pr & dd & dd & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => tk/:queue_receiving(q1))) & pr & pr & pr & ah(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) & pxQueue/=q2) & pr & pr & ae(queue_sending(pxQueue)-{task},aa) & dd & pr & ah(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) & q2/=pxQueue) & pr & pr & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dc(pxQueue = q1) & pr & pr & dd & dd & pr & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_receiving(q1) => tk/:queue_receiving(q2))) & pr & pr & pr & pr & ah(tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{pxTask})})(q1) & pxQueue/=q1) & pr & pr & ae(queue_receiving(pxQueue)\/{pxTask},aa) & dd & ah((queue_receiving<+{pxQueue|->aa})(q1) = queue_receiving(q1)) & pr & dd & eh((queue_receiving<+{pxQueue|->aa})(q1),_h,Goal) & dd & pr & ah(tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{pxTask})})(q1)) & ae(queue_receiving(pxQueue)\/{pxTask},aa) & dd & ah((queue_receiving<+{pxQueue|->aa})(q1) = queue_receiving(q1)) & pr & dd & eh((queue_receiving<+{pxQueue|->aa})(q1),_h,Goal) & dd & ph(q1,!q1.(q1: queues => not(pxTask: queue_sending(q1)) & not(pxTask: queue_receiving(q1)))) & pr & dd & ah(tk: queue_receiving(q1) & not(pxTask: queue_receiving(q1))) & pr & pr & pr & dd & pr & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_receiving(q1) => tk/:queue_receiving(q2))) & pr & pr & pr & pr & pr & ah(tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{pxTask})})(q1) & pxQueue/=q1) & pr & pr & ae(queue_receiving(pxQueue)\/{pxTask},aa) & dd & pr;
  pr;
  dc(pxQueue = q1) & pr & dd & dd & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => tk/:queue_sending(q2))) & pr & pr & pr & ah(tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{pxTask})})(q1) & q1/=pxQueue) & pr & pr & ae(queue_receiving(pxQueue)\/{pxTask},aa) & dd & pr & ah(tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{pxTask})})(q1) & pxQueue/=q1) & pr & pr & eh(queue_receiving(pxQueue)\/{pxTask},_h,Goal) & pr;
  pr;
  pr;
  dc(pxQueue = q1) & pr & pr & dd & dd & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_sending(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & ah(tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{pxTask})})(q1) & pxQueue/=q1) & pr & pr & ae(queue_sending(pxQueue)\/{pxTask},aa) & dd & ah((queue_sending<+{pxQueue|->aa})(q1) = queue_sending(q1)) & pr & dd & eh((queue_sending<+{pxQueue|->aa})(q1),_h,Goal) & dd & pr & eh(pxQueue,_h,Goal) & pr & ah(tk: queue_sending(q1)) & ah(tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{pxTask})})(q1) & pxQueue/=q1) & pr & pr & ae(queue_sending(pxQueue)\/{pxTask},aa) & dd & ah((queue_sending<+{pxQueue|->aa})(q1) = queue_sending(q1)) & pr & dd & eh((queue_sending<+{pxQueue|->aa})(q1),_h,Goal) & dd & ph(q1,!q1.(q1: queues => not(pxTask: queue_sending(q1)) & not(pxTask: queue_receiving(q1)))) & pr & dd & ah(tk: queue_sending(q1) & not(pxTask: queue_sending(q1))) & pr & pr & pr & dd & pr;
  dc(pxQueue = q2) & pr & dd & dd & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => tk/:queue_receiving(q1))) & pr & pr & pr & ah(tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{pxTask})})(q2) & not(pxQueue = q2)) & pr & pr & ae(queue_sending(pxQueue)\/{pxTask},aa) & dd & pr & ah(tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{pxTask})})(q2) & not(q2 = pxQueue)) & pr & pr & pr;
  pr;
  pr;
  pr;
  pr;
  dc(mutex = mt) & pr & dd & dd & ph(mt,!mt.(mt: mutexes & queue_items(mt)/={} => mutex_holder(mt) = TASK_NULL)) & pr & ah(not((queue_items<+{mutex|->(queue_items(mutex)\/{ITEM_EMPTY})})(mt) = {}) & mutex/=mt) & pr & pr & ae(queue_items(mutex)\/{ITEM_EMPTY},aa) & dd & ah((queue_items<+{mutex|->aa})(mt) = queue_items(mt)) & pr & dd & eh((queue_items<+{mutex|->aa})(mt),_h,Goal) & pr;
  dc(mutex = mt) & pr & dd & dd & ph(mt,!mt.(mt: mutexes & queue_items(mt) = {} => mutex_holder(mt)/=TASK_NULL)) & pr & ah((queue_items<+{mutex|->(queue_items(mutex)\/{ITEM_EMPTY})})(mt) = {} & mutex/=mt) & pr & pr & ae(queue_items(mutex)\/{ITEM_EMPTY},aa) & dd & ah((queue_items<+{mutex|->aa})(mt) = queue_items(mt)) & pr & dd & eh((queue_items<+{mutex|->aa})(mt),_h,Goal) & pr;
  pr;
  pr;
  dc(mutex = q1) & pr & pr & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_receiving(q1) => tk/:queue_receiving(q2))) & pr & pr & pr & pr & ah(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) & mutex/=q1) & pr & pr & pr & dd & dc(mutex = q2) & pr & dd & pr;
  pr;
  dc(mutex = q1) & pr & dd & dd & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & ah(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) & not(mutex = q1)) & pr & pr & ae(queue_receiving(mutex)-{task},aa) & dd & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dc(pxQueue = mt) & pr & dd & dd & ph(mt,!mt.(mt: mutexes & queue_items(mt)/={} => mutex_holder(mt) = TASK_NULL)) & pr & ah(not((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pxItem})})(mt) = {}) & pxQueue/=mt) & pr & pr & ae(queue_items(pxQueue)\/{pxItem},aa) & dd & pr;
  dc(pxQueue = mt) & pr & dd & dd & ph(mt,!mt.(mt: mutexes & queue_items(mt) = {} => mutex_holder(mt)/=TASK_NULL)) & pr & ah((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pxItem})})(mt) = {} & pxQueue/=mt) & pr & pr & ae(queue_items(pxQueue)\/{pxItem},aa) & dd & ah((queue_items<+{pxQueue|->aa})(mt) = queue_items(mt)) & pr & dd & eh((queue_items<+{pxQueue|->aa})(mt),_h,Goal);
  dc(pxQueue = q1) & pr & dd & dd & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_receiving(q1) => tk/:queue_receiving(q2))) & pr & pr & pr & pr & ah(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) & pxQueue/=q1) & pr & pr & ae(queue_receiving(pxQueue)-{task},aa) & dd & pr & ah(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) & pxQueue/=q1) & pr & pr & eh(queue_receiving(pxQueue)-{task},_h,Goal) & pr & ah(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) & q1/=pxQueue) & pr & pr & eh(queue_receiving(pxQueue)-{task},_h,Goal) & pr & ah(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) & q1/=pxQueue) & pr & pr & eh(queue_receiving(pxQueue)-{task},_h,Goal) & pr & ah((queue_receiving<+{pxQueue|->aa})(q1) = queue_receiving(q1)) & pr & dd & ah(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) & q1/=pxQueue) & pr & pr & eh(queue_receiving(pxQueue)-{task},_h,Goal) & eh((queue_receiving<+{pxQueue|->aa})(q1),_h,Goal) & dd & pr & pr & pr & pr;
  pr;
  dd & dc(pxQueue = q1) & dd & pr & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & dd & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & ah(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) & not(pxQueue = q1)) & pr & pr & ae(queue_receiving(pxQueue)-{task},aa) & dd & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dc(pxQueue/=mt) & pr & pr;
  dc(pxQueue/=mt) & pr & pr;
  dc(pxQueue = q1) & pr & dd & dc(pxQueue = q2) & pr & dd & dd & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_sending(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & ah(tk: (queue_sending\/{pxQueue|->{}})(q1) & pxQueue/=q1) & pr & pr & pr & pr;
  dc(pxQueue = q1) & pr & dd & dd & dc(pxQueue = q2) & pr & dd & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_receiving(q1) => tk/:queue_receiving(q2))) & pr & pr & pr & pr & pr & ah(tk: (queue_receiving\/{pxQueue|->{}})(q1) & pxQueue/=q1) & pr & pr & pr;
  dd & dc(pxQueue = q2) & pr & pr & dd & pr & pr & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => tk/:queue_receiving(q1))) & pr & pr & pr & pr;
  dc(pxQueue/=q1) & dd & pr & pr & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr
END
&
THEORY PassList IS
  Force(0),?;
  Force(2),?;
  Force(2),?;
  Force(0),?;
  Force(0),?;
  Force(2),(?;0;1;2;3);
  Force(2),?;
  Force(2),?;
  Force(2),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(2),(?;0;1;2;3);
  Force(2),?;
  Force(2),?;
  Force(2),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),(?;0;1;2;3);
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(2),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(2),?;
  Force(2),?;
  Force(2),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?
END
&
THEORY ManForms 
END
&
THEORY Version IS
  POVersion(V3.8.3)(CLT == "V3.7.6")(genOPO == KO,genDivergencePO == KO,local_op == OK);
  PRVersion("V3.3.3.p39")(CLT == "V3.7.6")
END
