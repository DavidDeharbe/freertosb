THEORY ProofList IS
  _f(1) & _f(2) & _f(6) & _f(20) & _f(668) & afterIncrementTick.27,(_f(131) & _f(108) => _f(120));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(668) & afterIncrementTick.26,(_f(131) & _f(106) => _f(127));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(668) & afterIncrementTick.25,(_f(130) & _f(108) => _f(120));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(668) & afterIncrementTick.24,(_f(130) & _f(106) => _f(127));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(668) & afterIncrementTick.23,(_f(129) & _f(108) => _f(117));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(668) & afterIncrementTick.22,(_f(128) & _f(108) => _f(109));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(668) & afterIncrementTick.21,(_f(128) & _f(106) => _f(127));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(668) & afterIncrementTick.20,(_f(126) & _f(108) => _f(109));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(668) & afterIncrementTick.19,(_f(126) & _f(106) => _f(127));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(668) & afterIncrementTick.18,(_f(125) & _f(111) => _f(112));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(668) & afterIncrementTick.17,(_f(124) & _f(106) => _f(116));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(668) & afterIncrementTick.16,(_f(123) & _f(111) => _f(112));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(668) & afterIncrementTick.15,(_f(122) & _f(108) => _f(120));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(668) & afterIncrementTick.14,(_f(122) & _f(106) => _f(107));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(668) & afterIncrementTick.13,(_f(121) & _f(111) => _f(112));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(668) & afterIncrementTick.12,(_f(119) & _f(108) => _f(120));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(668) & afterIncrementTick.11,(_f(119) & _f(106) => _f(107));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(668) & afterIncrementTick.10,(_f(118) & _f(111) => _f(112));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(668) & afterIncrementTick.9,(_f(115) & _f(108) => _f(117));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(668) & afterIncrementTick.8,(_f(115) & _f(106) => _f(116));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(668) & afterIncrementTick.7,(_f(114) & _f(111) => _f(112));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(668) & afterIncrementTick.6,(_f(113) & _f(108) => _f(109));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(668) & afterIncrementTick.5,(_f(113) & _f(106) => _f(107));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(668) & afterIncrementTick.4,(_f(110) & _f(111) => _f(112));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(668) & afterIncrementTick.3,(_f(105) & _f(108) => _f(109));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(668) & afterIncrementTick.2,(_f(105) & _f(106) => _f(107));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(668) & afterIncrementTick.1,(_f(103) => _f(104));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.79,(_f(667) & _f(26) => _f(614));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.78,(_f(666) & _f(26) => _f(612));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.77,(_f(665) & _f(26) => _f(610));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.76,(_f(665) & _f(23) => _f(609));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.75,(_f(664) & _f(41) => _f(636));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.74,(_f(663) & _f(26) => _f(614));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.73,(_f(662) & _f(26) => _f(612));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.72,(_f(661) & _f(26) => _f(610));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.71,(_f(661) & _f(23) => _f(609));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.70,(_f(660) & _f(41) => _f(636));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.69,(_f(659) & _f(26) => _f(614));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.68,(_f(658) & _f(26) => _f(612));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.67,(_f(657) & _f(26) => _f(610));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.66,(_f(657) & _f(23) => _f(609));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.65,(_f(656) & _f(41) => _f(627));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.64,(_f(656) & _f(39) => _f(626));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.63,(_f(655) & _f(26) => _f(614));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.62,(_f(654) & _f(26) => _f(612));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.61,(_f(653) & _f(26) => _f(610));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.60,(_f(653) & _f(23) => _f(609));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.59,(_f(652) & _f(41) => _f(627));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.58,(_f(652) & _f(39) => _f(626));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.57,(_f(651) & _f(26) => _f(614));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.56,(_f(650) & _f(26) => _f(612));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.55,(_f(649) & _f(26) => _f(610));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.54,(_f(649) & _f(23) => _f(609));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.53,(_f(648) & _f(41) => _f(621));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.52,(_f(648) & _f(39) => _f(620));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.51,(_f(647) & _f(26) => _f(614));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.50,(_f(646) & _f(26) => _f(612));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.49,(_f(645) & _f(26) => _f(610));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.48,(_f(645) & _f(23) => _f(609));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.47,(_f(644) & _f(41) => _f(607));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.46,(_f(644) & _f(39) => _f(606));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.45,(_f(643) & _f(26) => _f(614));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.44,(_f(642) & _f(26) => _f(612));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.43,(_f(641) & _f(26) => _f(610));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.42,(_f(641) & _f(23) => _f(609));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.41,(_f(640) & _f(41) => _f(607));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.40,(_f(640) & _f(39) => _f(606));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.39,(_f(639) & _f(26) => _f(614));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.38,(_f(638) & _f(26) => _f(612));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.37,(_f(637) & _f(26) => _f(610));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.36,(_f(637) & _f(23) => _f(609));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.35,(_f(635) & _f(41) => _f(636));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.34,(_f(634) & _f(26) => _f(614));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.33,(_f(633) & _f(26) => _f(612));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.32,(_f(632) & _f(26) => _f(610));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.31,(_f(632) & _f(23) => _f(609));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.30,(_f(631) & _f(41) => _f(627));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.29,(_f(631) & _f(39) => _f(626));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.28,(_f(630) & _f(26) => _f(614));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.27,(_f(629) & _f(26) => _f(612));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.26,(_f(628) & _f(26) => _f(610));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.25,(_f(628) & _f(23) => _f(609));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.24,(_f(625) & _f(41) => _f(627));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.23,(_f(625) & _f(39) => _f(626));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.22,(_f(624) & _f(26) => _f(614));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.21,(_f(623) & _f(26) => _f(612));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.20,(_f(622) & _f(26) => _f(610));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.19,(_f(622) & _f(23) => _f(609));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.18,(_f(619) & _f(41) => _f(621));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.17,(_f(619) & _f(39) => _f(620));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.16,(_f(618) & _f(26) => _f(614));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.15,(_f(617) & _f(26) => _f(612));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.14,(_f(616) & _f(26) => _f(610));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.13,(_f(616) & _f(23) => _f(609));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.12,(_f(615) & _f(41) => _f(607));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.11,(_f(615) & _f(39) => _f(606));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.10,(_f(613) & _f(26) => _f(614));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.9,(_f(611) & _f(26) => _f(612));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.8,(_f(608) & _f(26) => _f(610));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.7,(_f(608) & _f(23) => _f(609));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.6,(_f(605) & _f(41) => _f(607));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.5,(_f(605) & _f(39) => _f(606));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.4,(_f(600) & _f(36) => _f(604));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.3,(_f(600) & _f(36) => _f(603));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.2,(_f(600) & _f(36) => _f(602));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(599) & giveMutex.1,(_f(600) & _f(36) => _f(601));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(581) & takeMutex.14,(_f(597) & _f(26) => _f(598));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(581) & takeMutex.13,(_f(595) & _f(26) => _f(596));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(581) & takeMutex.12,(_f(592) & _f(26) => _f(594));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(581) & takeMutex.11,(_f(592) & _f(23) => _f(593));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(581) & takeMutex.10,(_f(590) & _f(26) => _f(591));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(581) & takeMutex.9,(_f(589) & _f(41) => _f(588));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(581) & takeMutex.8,(_f(589) & _f(39) => _f(40));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(581) & takeMutex.7,(_f(587) & _f(41) => _f(588));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(581) & takeMutex.6,(_f(587) & _f(39) => _f(40));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(581) & takeMutex.5,(_f(586) & _f(36) => _f(238));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(581) & takeMutex.4,(_f(586) & _f(36) => _f(237));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(581) & takeMutex.3,(_f(582) & _f(36) => _f(585));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(581) & takeMutex.2,(_f(582) & _f(36) => _f(584));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(581) & takeMutex.1,(_f(582) & _f(36) => _f(583));
  _f(1) & _f(2) & _f(6) & _f(20) & xQueueCreateMutex.7,(_f(579) & _f(26) => _f(580));
  _f(1) & _f(2) & _f(6) & _f(20) & xQueueCreateMutex.6,(_f(577) & _f(26) => _f(578));
  _f(1) & _f(2) & _f(6) & _f(20) & xQueueCreateMutex.5,(_f(575) & _f(26) => _f(576));
  _f(1) & _f(2) & _f(6) & _f(20) & xQueueCreateMutex.4,(_f(573) & _f(54) => _f(574));
  _f(1) & _f(2) & _f(6) & _f(20) & xQueueCreateMutex.3,(_f(571) & _f(23) => _f(572));
  _f(1) & _f(2) & _f(6) & _f(20) & xQueueCreateMutex.2,(_f(568) & _f(41) => _f(570));
  _f(1) & _f(2) & _f(6) & _f(20) & xQueueCreateMutex.1,(_f(568) & _f(39) => _f(569));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.65,(_f(567) & _f(54) => _f(560));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.64,(_f(566) & _f(41) => _f(248));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.63,(_f(566) & _f(39) => _f(564));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.62,(_f(565) & _f(54) => _f(560));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.61,(_f(563) & _f(41) => _f(248));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.60,(_f(563) & _f(39) => _f(564));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.59,(_f(562) & _f(54) => _f(560));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.58,(_f(561) & _f(41) => _f(42));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.57,(_f(561) & _f(39) => _f(558));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.56,(_f(559) & _f(54) => _f(560));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.55,(_f(557) & _f(41) => _f(42));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.54,(_f(557) & _f(39) => _f(558));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.53,(_f(555) & _f(26) => _f(239));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.52,(_f(556) & _f(26) => _f(238));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.51,(_f(556) & _f(26) => _f(237));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.50,(_f(555) & _f(26) => _f(510));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.49,(_f(555) & _f(26) => _f(235));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.48,(_f(554) & _f(41) => _f(539));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.47,(_f(553) & _f(41) => _f(539));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.46,(_f(552) & _f(41) => _f(539));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.45,(_f(551) & _f(41) => _f(539));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.44,(_f(550) & _f(41) => _f(534));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.43,(_f(550) & _f(39) => _f(533));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.42,(_f(549) & _f(41) => _f(534));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.41,(_f(549) & _f(39) => _f(533));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.40,(_f(548) & _f(41) => _f(534));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.39,(_f(548) & _f(39) => _f(533));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.38,(_f(547) & _f(41) => _f(534));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.37,(_f(547) & _f(39) => _f(533));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.36,(_f(546) & _f(41) => _f(530));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.35,(_f(546) & _f(39) => _f(529));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.34,(_f(545) & _f(41) => _f(530));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.33,(_f(545) & _f(39) => _f(529));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.32,(_f(544) & _f(41) => _f(524));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.31,(_f(544) & _f(39) => _f(523));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.30,(_f(543) & _f(41) => _f(524));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.29,(_f(543) & _f(39) => _f(523));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.28,(_f(542) & _f(41) => _f(524));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.27,(_f(542) & _f(39) => _f(523));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.26,(_f(541) & _f(41) => _f(524));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.25,(_f(541) & _f(39) => _f(523));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.24,(_f(540) & _f(41) => _f(539));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.23,(_f(538) & _f(41) => _f(539));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.22,(_f(537) & _f(41) => _f(534));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.21,(_f(537) & _f(39) => _f(533));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.20,(_f(536) & _f(41) => _f(534));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.19,(_f(536) & _f(39) => _f(533));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.18,(_f(535) & _f(41) => _f(534));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.17,(_f(535) & _f(39) => _f(533));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.16,(_f(532) & _f(41) => _f(534));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.15,(_f(532) & _f(39) => _f(533));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.14,(_f(531) & _f(41) => _f(530));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.13,(_f(531) & _f(39) => _f(529));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.12,(_f(528) & _f(41) => _f(530));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.11,(_f(528) & _f(39) => _f(529));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.10,(_f(527) & _f(41) => _f(524));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.9,(_f(527) & _f(39) => _f(523));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.8,(_f(526) & _f(41) => _f(524));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.7,(_f(526) & _f(39) => _f(523));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.6,(_f(525) & _f(41) => _f(524));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.5,(_f(525) & _f(39) => _f(523));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.4,(_f(522) & _f(41) => _f(524));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.3,(_f(522) & _f(39) => _f(523));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.2,(_f(519) & _f(36) => _f(521));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(518) & giveSemaphore.1,(_f(519) & _f(36) => _f(520));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.159,(_f(517) & _f(41) => _f(516));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.158,(_f(517) & _f(39) => _f(259));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.157,(_f(515) & _f(41) => _f(516));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.156,(_f(515) & _f(39) => _f(259));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.155,(_f(514) & _f(41) => _f(513));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.154,(_f(514) & _f(39) => _f(40));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.153,(_f(512) & _f(41) => _f(513));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.152,(_f(512) & _f(39) => _f(40));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.151,(_f(509) & _f(26) => _f(239));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.150,(_f(511) & _f(26) => _f(238));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.149,(_f(511) & _f(26) => _f(237));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.148,(_f(509) & _f(26) => _f(510));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.147,(_f(509) & _f(26) => _f(235));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.146,(_f(508) & _f(54) => _f(401));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.145,(_f(507) & _f(39) => _f(445));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.144,(_f(506) & _f(54) => _f(401));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.143,(_f(505) & _f(39) => _f(445));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.142,(_f(504) & _f(54) => _f(401));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.141,(_f(503) & _f(39) => _f(445));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.140,(_f(502) & _f(54) => _f(401));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.139,(_f(501) & _f(39) => _f(445));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.138,(_f(500) & _f(54) => _f(401));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.137,(_f(499) & _f(39) => _f(445));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.136,(_f(498) & _f(54) => _f(401));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.135,(_f(497) & _f(39) => _f(445));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.134,(_f(496) & _f(54) => _f(401));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.133,(_f(495) & _f(39) => _f(445));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.132,(_f(494) & _f(54) => _f(401));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.131,(_f(493) & _f(39) => _f(445));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.130,(_f(492) & _f(54) => _f(401));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.129,(_f(491) & _f(41) => _f(428));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.128,(_f(491) & _f(39) => _f(427));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.127,(_f(490) & _f(54) => _f(401));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.126,(_f(489) & _f(41) => _f(428));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.125,(_f(489) & _f(39) => _f(427));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.124,(_f(488) & _f(54) => _f(401));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.123,(_f(487) & _f(41) => _f(428));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.122,(_f(487) & _f(39) => _f(427));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.121,(_f(486) & _f(54) => _f(401));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.120,(_f(485) & _f(41) => _f(428));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.119,(_f(485) & _f(39) => _f(427));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.118,(_f(484) & _f(54) => _f(401));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.117,(_f(483) & _f(41) => _f(428));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.116,(_f(483) & _f(39) => _f(427));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.115,(_f(482) & _f(54) => _f(401));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.114,(_f(481) & _f(41) => _f(428));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.113,(_f(481) & _f(39) => _f(427));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.112,(_f(480) & _f(54) => _f(401));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.111,(_f(479) & _f(41) => _f(428));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.110,(_f(479) & _f(39) => _f(427));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.109,(_f(478) & _f(54) => _f(401));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.108,(_f(477) & _f(41) => _f(428));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.107,(_f(477) & _f(39) => _f(427));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.106,(_f(476) & _f(54) => _f(401));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.105,(_f(475) & _f(41) => _f(418));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.104,(_f(475) & _f(39) => _f(417));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.103,(_f(474) & _f(54) => _f(401));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.102,(_f(473) & _f(41) => _f(418));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.101,(_f(473) & _f(39) => _f(417));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.100,(_f(472) & _f(54) => _f(401));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.99,(_f(471) & _f(41) => _f(418));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.98,(_f(471) & _f(39) => _f(417));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.97,(_f(470) & _f(54) => _f(401));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.96,(_f(469) & _f(41) => _f(418));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.95,(_f(469) & _f(39) => _f(417));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.94,(_f(468) & _f(54) => _f(401));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.93,(_f(467) & _f(41) => _f(399));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.92,(_f(467) & _f(39) => _f(398));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.91,(_f(466) & _f(54) => _f(401));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.90,(_f(465) & _f(41) => _f(399));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.89,(_f(465) & _f(39) => _f(398));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.88,(_f(464) & _f(54) => _f(401));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.87,(_f(463) & _f(41) => _f(399));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.86,(_f(463) & _f(39) => _f(398));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.85,(_f(462) & _f(54) => _f(401));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.84,(_f(461) & _f(41) => _f(399));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.83,(_f(461) & _f(39) => _f(398));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.82,(_f(460) & _f(54) => _f(401));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.81,(_f(459) & _f(41) => _f(399));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.80,(_f(459) & _f(39) => _f(398));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.79,(_f(458) & _f(54) => _f(401));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.78,(_f(457) & _f(41) => _f(399));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.77,(_f(457) & _f(39) => _f(398));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.76,(_f(456) & _f(54) => _f(401));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.75,(_f(455) & _f(41) => _f(399));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.74,(_f(455) & _f(39) => _f(398));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.73,(_f(454) & _f(54) => _f(401));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.72,(_f(453) & _f(41) => _f(399));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.71,(_f(453) & _f(39) => _f(398));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.70,(_f(452) & _f(54) => _f(401));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.69,(_f(451) & _f(39) => _f(445));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.68,(_f(450) & _f(54) => _f(401));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.67,(_f(449) & _f(39) => _f(445));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.66,(_f(448) & _f(54) => _f(401));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.65,(_f(447) & _f(39) => _f(445));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.64,(_f(446) & _f(54) => _f(401));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.63,(_f(444) & _f(39) => _f(445));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.62,(_f(443) & _f(54) => _f(401));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.61,(_f(442) & _f(41) => _f(428));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.60,(_f(442) & _f(39) => _f(427));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.59,(_f(441) & _f(54) => _f(401));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.58,(_f(440) & _f(41) => _f(428));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.57,(_f(440) & _f(39) => _f(427));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.56,(_f(439) & _f(54) => _f(401));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.55,(_f(438) & _f(41) => _f(428));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.54,(_f(438) & _f(39) => _f(427));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.53,(_f(437) & _f(54) => _f(401));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.52,(_f(436) & _f(41) => _f(428));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.51,(_f(436) & _f(39) => _f(427));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.50,(_f(435) & _f(54) => _f(401));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.49,(_f(434) & _f(41) => _f(428));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.48,(_f(434) & _f(39) => _f(427));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.47,(_f(433) & _f(54) => _f(401));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.46,(_f(432) & _f(41) => _f(428));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.45,(_f(432) & _f(39) => _f(427));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.44,(_f(431) & _f(54) => _f(401));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.43,(_f(430) & _f(41) => _f(428));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.42,(_f(430) & _f(39) => _f(427));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.41,(_f(429) & _f(54) => _f(401));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.40,(_f(426) & _f(41) => _f(428));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.39,(_f(426) & _f(39) => _f(427));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.38,(_f(425) & _f(54) => _f(401));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.37,(_f(424) & _f(41) => _f(418));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.36,(_f(424) & _f(39) => _f(417));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.35,(_f(423) & _f(54) => _f(401));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.34,(_f(422) & _f(41) => _f(418));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.33,(_f(422) & _f(39) => _f(417));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.32,(_f(421) & _f(54) => _f(401));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.31,(_f(420) & _f(41) => _f(418));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.30,(_f(420) & _f(39) => _f(417));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.29,(_f(419) & _f(54) => _f(401));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.28,(_f(416) & _f(41) => _f(418));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.27,(_f(416) & _f(39) => _f(417));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.26,(_f(415) & _f(54) => _f(401));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.25,(_f(414) & _f(41) => _f(399));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.24,(_f(414) & _f(39) => _f(398));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.23,(_f(413) & _f(54) => _f(401));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.22,(_f(412) & _f(41) => _f(399));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.21,(_f(412) & _f(39) => _f(398));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.20,(_f(411) & _f(54) => _f(401));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.19,(_f(410) & _f(41) => _f(399));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.18,(_f(410) & _f(39) => _f(398));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.17,(_f(409) & _f(54) => _f(401));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.16,(_f(408) & _f(41) => _f(399));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.15,(_f(408) & _f(39) => _f(398));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.14,(_f(407) & _f(54) => _f(401));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.13,(_f(406) & _f(41) => _f(399));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.12,(_f(406) & _f(39) => _f(398));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.11,(_f(405) & _f(54) => _f(401));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.10,(_f(404) & _f(41) => _f(399));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.9,(_f(404) & _f(39) => _f(398));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.8,(_f(403) & _f(54) => _f(401));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.7,(_f(402) & _f(41) => _f(399));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.6,(_f(402) & _f(39) => _f(398));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.5,(_f(400) & _f(54) => _f(401));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.4,(_f(397) & _f(41) => _f(399));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.3,(_f(397) & _f(39) => _f(398));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.2,(_f(394) & _f(36) => _f(396));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(393) & takeSemaphore.1,(_f(394) & _f(36) => _f(395));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(381) & deleteSemaphore.12,(_f(392) & _f(54) => _f(386));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(381) & deleteSemaphore.11,(_f(391) & _f(41) => _f(384));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(381) & deleteSemaphore.10,(_f(391) & _f(39) => _f(383));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(381) & deleteSemaphore.9,(_f(390) & _f(54) => _f(386));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(381) & deleteSemaphore.8,(_f(389) & _f(41) => _f(384));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(381) & deleteSemaphore.7,(_f(389) & _f(39) => _f(383));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(381) & deleteSemaphore.6,(_f(388) & _f(54) => _f(386));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(381) & deleteSemaphore.5,(_f(387) & _f(41) => _f(384));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(381) & deleteSemaphore.4,(_f(387) & _f(39) => _f(383));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(381) & deleteSemaphore.3,(_f(385) & _f(54) => _f(386));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(381) & deleteSemaphore.2,(_f(382) & _f(41) => _f(384));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(381) & deleteSemaphore.1,(_f(382) & _f(39) => _f(383));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(380) & vSemaphoreCreateCounting.9,(_f(379) & _f(54) => _f(375));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(380) & vSemaphoreCreateCounting.8,(_f(378) & _f(41) => _f(373));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(380) & vSemaphoreCreateCounting.7,(_f(378) & _f(39) => _f(372));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(380) & vSemaphoreCreateCounting.6,(_f(377) & _f(54) => _f(375));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(380) & vSemaphoreCreateCounting.5,(_f(376) & _f(41) => _f(373));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(380) & vSemaphoreCreateCounting.4,(_f(376) & _f(39) => _f(372));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(380) & vSemaphoreCreateCounting.3,(_f(374) & _f(54) => _f(375));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(380) & vSemaphoreCreateCounting.2,(_f(371) & _f(41) => _f(373));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(380) & vSemaphoreCreateCounting.1,(_f(371) & _f(39) => _f(372));
  _f(1) & _f(2) & _f(6) & _f(20) & vSemaphoreCreateBinary.11,(_f(379) & _f(54) => _f(375));
  _f(1) & _f(2) & _f(6) & _f(20) & vSemaphoreCreateBinary.10,(_f(378) & _f(41) => _f(373));
  _f(1) & _f(2) & _f(6) & _f(20) & vSemaphoreCreateBinary.9,(_f(378) & _f(39) => _f(372));
  _f(1) & _f(2) & _f(6) & _f(20) & vSemaphoreCreateBinary.8,(_f(377) & _f(54) => _f(375));
  _f(1) & _f(2) & _f(6) & _f(20) & vSemaphoreCreateBinary.7,(_f(376) & _f(41) => _f(373));
  _f(1) & _f(2) & _f(6) & _f(20) & vSemaphoreCreateBinary.6,(_f(376) & _f(39) => _f(372));
  _f(1) & _f(2) & _f(6) & _f(20) & vSemaphoreCreateBinary.5,(_f(374) & _f(54) => _f(375));
  _f(1) & _f(2) & _f(6) & _f(20) & vSemaphoreCreateBinary.4,(_f(371) & _f(41) => _f(373));
  _f(1) & _f(2) & _f(6) & _f(20) & vSemaphoreCreateBinary.3,(_f(371) & _f(39) => _f(372));
  _f(1) & _f(2) & _f(6) & _f(20) & vSemaphoreCreateBinary.2,(_f(36) => _f(370));
  _f(1) & _f(2) & _f(6) & _f(20) & vSemaphoreCreateBinary.1,(_f(36) => _f(369));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.151,(_f(368) & _f(54) => _f(269));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.150,(_f(367) & _f(39) => _f(313));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.149,(_f(366) & _f(54) => _f(269));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.148,(_f(365) & _f(39) => _f(313));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.147,(_f(364) & _f(54) => _f(269));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.146,(_f(363) & _f(39) => _f(313));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.145,(_f(362) & _f(54) => _f(269));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.144,(_f(361) & _f(39) => _f(313));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.143,(_f(360) & _f(54) => _f(269));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.142,(_f(359) & _f(41) => _f(296));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.141,(_f(359) & _f(39) => _f(295));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.140,(_f(358) & _f(54) => _f(269));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.139,(_f(357) & _f(41) => _f(296));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.138,(_f(357) & _f(39) => _f(295));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.137,(_f(356) & _f(54) => _f(269));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.136,(_f(355) & _f(41) => _f(296));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.135,(_f(355) & _f(39) => _f(295));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.134,(_f(354) & _f(54) => _f(269));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.133,(_f(353) & _f(41) => _f(296));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.132,(_f(353) & _f(39) => _f(295));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.131,(_f(352) & _f(54) => _f(269));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.130,(_f(351) & _f(41) => _f(296));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.129,(_f(351) & _f(39) => _f(295));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.128,(_f(350) & _f(54) => _f(269));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.127,(_f(349) & _f(41) => _f(296));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.126,(_f(349) & _f(39) => _f(295));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.125,(_f(348) & _f(54) => _f(269));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.124,(_f(347) & _f(41) => _f(296));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.123,(_f(347) & _f(39) => _f(295));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.122,(_f(346) & _f(54) => _f(269));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.121,(_f(345) & _f(41) => _f(296));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.120,(_f(345) & _f(39) => _f(295));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.119,(_f(344) & _f(54) => _f(269));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.118,(_f(343) & _f(41) => _f(286));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.117,(_f(343) & _f(39) => _f(285));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.116,(_f(342) & _f(54) => _f(269));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.115,(_f(341) & _f(41) => _f(286));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.114,(_f(341) & _f(39) => _f(285));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.113,(_f(340) & _f(54) => _f(269));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.112,(_f(339) & _f(41) => _f(286));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.111,(_f(339) & _f(39) => _f(285));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.110,(_f(338) & _f(54) => _f(269));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.109,(_f(337) & _f(41) => _f(286));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.108,(_f(337) & _f(39) => _f(285));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.107,(_f(336) & _f(54) => _f(269));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.106,(_f(335) & _f(41) => _f(267));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.105,(_f(335) & _f(39) => _f(266));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.104,(_f(334) & _f(54) => _f(269));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.103,(_f(333) & _f(41) => _f(267));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.102,(_f(333) & _f(39) => _f(266));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.101,(_f(332) & _f(54) => _f(269));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.100,(_f(331) & _f(41) => _f(267));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.99,(_f(331) & _f(39) => _f(266));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.98,(_f(330) & _f(54) => _f(269));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.97,(_f(329) & _f(41) => _f(267));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.96,(_f(329) & _f(39) => _f(266));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.95,(_f(328) & _f(54) => _f(269));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.94,(_f(327) & _f(41) => _f(267));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.93,(_f(327) & _f(39) => _f(266));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.92,(_f(326) & _f(54) => _f(269));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.91,(_f(325) & _f(41) => _f(267));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.90,(_f(325) & _f(39) => _f(266));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.89,(_f(324) & _f(54) => _f(269));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.88,(_f(323) & _f(41) => _f(267));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.87,(_f(323) & _f(39) => _f(266));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.86,(_f(322) & _f(54) => _f(269));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.85,(_f(321) & _f(41) => _f(267));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.84,(_f(321) & _f(39) => _f(266));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.83,(_f(320) & _f(54) => _f(269));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.82,(_f(319) & _f(39) => _f(313));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.81,(_f(318) & _f(54) => _f(269));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.80,(_f(317) & _f(39) => _f(313));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.79,(_f(316) & _f(54) => _f(269));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.78,(_f(315) & _f(39) => _f(313));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.77,(_f(314) & _f(54) => _f(269));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.76,(_f(312) & _f(39) => _f(313));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.75,(_f(311) & _f(54) => _f(269));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.74,(_f(310) & _f(41) => _f(296));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.73,(_f(310) & _f(39) => _f(295));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.72,(_f(309) & _f(54) => _f(269));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.71,(_f(308) & _f(41) => _f(296));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.70,(_f(308) & _f(39) => _f(295));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.69,(_f(307) & _f(54) => _f(269));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.68,(_f(306) & _f(41) => _f(296));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.67,(_f(306) & _f(39) => _f(295));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.66,(_f(305) & _f(54) => _f(269));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.65,(_f(304) & _f(41) => _f(296));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.64,(_f(304) & _f(39) => _f(295));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.63,(_f(303) & _f(54) => _f(269));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.62,(_f(302) & _f(41) => _f(296));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.61,(_f(302) & _f(39) => _f(295));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.60,(_f(301) & _f(54) => _f(269));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.59,(_f(300) & _f(41) => _f(296));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.58,(_f(300) & _f(39) => _f(295));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.57,(_f(299) & _f(54) => _f(269));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.56,(_f(298) & _f(41) => _f(296));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.55,(_f(298) & _f(39) => _f(295));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.54,(_f(297) & _f(54) => _f(269));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.53,(_f(294) & _f(41) => _f(296));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.52,(_f(294) & _f(39) => _f(295));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.51,(_f(293) & _f(54) => _f(269));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.50,(_f(292) & _f(41) => _f(286));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.49,(_f(292) & _f(39) => _f(285));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.48,(_f(291) & _f(54) => _f(269));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.47,(_f(290) & _f(41) => _f(286));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.46,(_f(290) & _f(39) => _f(285));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.45,(_f(289) & _f(54) => _f(269));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.44,(_f(288) & _f(41) => _f(286));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.43,(_f(288) & _f(39) => _f(285));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.42,(_f(287) & _f(54) => _f(269));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.41,(_f(284) & _f(41) => _f(286));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.40,(_f(284) & _f(39) => _f(285));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.39,(_f(283) & _f(54) => _f(269));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.38,(_f(282) & _f(41) => _f(267));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.37,(_f(282) & _f(39) => _f(266));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.36,(_f(281) & _f(54) => _f(269));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.35,(_f(280) & _f(41) => _f(267));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.34,(_f(280) & _f(39) => _f(266));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.33,(_f(279) & _f(54) => _f(269));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.32,(_f(278) & _f(41) => _f(267));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.31,(_f(278) & _f(39) => _f(266));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.30,(_f(277) & _f(54) => _f(269));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.29,(_f(276) & _f(41) => _f(267));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.28,(_f(276) & _f(39) => _f(266));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.27,(_f(275) & _f(54) => _f(269));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.26,(_f(274) & _f(41) => _f(267));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.25,(_f(274) & _f(39) => _f(266));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.24,(_f(273) & _f(54) => _f(269));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.23,(_f(272) & _f(41) => _f(267));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.22,(_f(272) & _f(39) => _f(266));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.21,(_f(271) & _f(54) => _f(269));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.20,(_f(270) & _f(41) => _f(267));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.19,(_f(270) & _f(39) => _f(266));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.18,(_f(268) & _f(54) => _f(269));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.17,(_f(265) & _f(41) => _f(267));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.16,(_f(265) & _f(39) => _f(266));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.15,(_f(262) & _f(26) => _f(264));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.14,(_f(262) & _f(26) => _f(263));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.13,(_f(261) & _f(41) => _f(260));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.12,(_f(261) & _f(39) => _f(259));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.11,(_f(258) & _f(41) => _f(260));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.10,(_f(258) & _f(39) => _f(259));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.9,(_f(257) & _f(41) => _f(256));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.8,(_f(257) & _f(39) => _f(40));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.7,(_f(255) & _f(41) => _f(256));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.6,(_f(255) & _f(39) => _f(40));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.5,(_f(253) & _f(36) => _f(239));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.4,(_f(254) & _f(36) => _f(238));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.3,(_f(254) & _f(36) => _f(237));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.2,(_f(253) & _f(36) => _f(162));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(252) & receiveItem.1,(_f(253) & _f(36) => _f(235));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.107,(_f(251) & _f(54) => _f(243));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.106,(_f(250) & _f(41) => _f(248));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.105,(_f(250) & _f(39) => _f(247));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.104,(_f(249) & _f(54) => _f(243));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.103,(_f(246) & _f(41) => _f(248));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.102,(_f(246) & _f(39) => _f(247));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.101,(_f(245) & _f(54) => _f(243));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.100,(_f(244) & _f(41) => _f(42));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.99,(_f(244) & _f(39) => _f(241));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.98,(_f(242) & _f(54) => _f(243));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.97,(_f(240) & _f(41) => _f(42));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.96,(_f(240) & _f(39) => _f(241));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.95,(_f(234) & _f(26) => _f(239));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.94,(_f(236) & _f(26) => _f(238));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.93,(_f(236) & _f(26) => _f(237));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.92,(_f(234) & _f(26) => _f(162));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.91,(_f(234) & _f(26) => _f(235));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.90,(_f(233) & _f(41) => _f(50));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.89,(_f(232) & _f(41) => _f(50));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.88,(_f(231) & _f(41) => _f(50));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.87,(_f(230) & _f(41) => _f(50));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.86,(_f(229) & _f(41) => _f(198));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.85,(_f(229) & _f(39) => _f(197));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.84,(_f(228) & _f(41) => _f(198));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.83,(_f(228) & _f(39) => _f(197));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.82,(_f(227) & _f(41) => _f(198));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.81,(_f(227) & _f(39) => _f(197));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.80,(_f(226) & _f(41) => _f(198));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.79,(_f(226) & _f(39) => _f(197));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.78,(_f(225) & _f(41) => _f(198));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.77,(_f(225) & _f(39) => _f(197));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.76,(_f(224) & _f(41) => _f(198));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.75,(_f(224) & _f(39) => _f(197));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.74,(_f(223) & _f(41) => _f(198));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.73,(_f(223) & _f(39) => _f(197));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.72,(_f(222) & _f(41) => _f(198));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.71,(_f(222) & _f(39) => _f(197));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.70,(_f(221) & _f(41) => _f(192));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.69,(_f(221) & _f(39) => _f(191));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.68,(_f(220) & _f(41) => _f(192));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.67,(_f(220) & _f(39) => _f(191));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.66,(_f(219) & _f(41) => _f(192));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.65,(_f(219) & _f(39) => _f(191));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.64,(_f(218) & _f(41) => _f(192));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.63,(_f(218) & _f(39) => _f(191));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.62,(_f(217) & _f(41) => _f(182));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.61,(_f(217) & _f(39) => _f(181));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.60,(_f(216) & _f(41) => _f(182));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.59,(_f(216) & _f(39) => _f(181));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.58,(_f(215) & _f(41) => _f(182));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.57,(_f(215) & _f(39) => _f(181));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.56,(_f(214) & _f(41) => _f(182));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.55,(_f(214) & _f(39) => _f(181));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.54,(_f(213) & _f(41) => _f(182));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.53,(_f(213) & _f(39) => _f(181));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.52,(_f(212) & _f(41) => _f(182));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.51,(_f(212) & _f(39) => _f(181));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.50,(_f(211) & _f(41) => _f(182));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.49,(_f(211) & _f(39) => _f(181));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.48,(_f(210) & _f(41) => _f(182));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.47,(_f(210) & _f(39) => _f(181));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.46,(_f(209) & _f(41) => _f(50));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.45,(_f(208) & _f(41) => _f(50));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.44,(_f(207) & _f(41) => _f(50));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.43,(_f(206) & _f(41) => _f(50));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.42,(_f(205) & _f(41) => _f(198));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.41,(_f(205) & _f(39) => _f(197));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.40,(_f(204) & _f(41) => _f(198));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.39,(_f(204) & _f(39) => _f(197));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.38,(_f(203) & _f(41) => _f(198));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.37,(_f(203) & _f(39) => _f(197));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.36,(_f(202) & _f(41) => _f(198));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.35,(_f(202) & _f(39) => _f(197));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.34,(_f(201) & _f(41) => _f(198));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.33,(_f(201) & _f(39) => _f(197));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.32,(_f(200) & _f(41) => _f(198));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.31,(_f(200) & _f(39) => _f(197));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.30,(_f(199) & _f(41) => _f(198));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.29,(_f(199) & _f(39) => _f(197));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.28,(_f(196) & _f(41) => _f(198));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.27,(_f(196) & _f(39) => _f(197));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.26,(_f(195) & _f(41) => _f(192));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.25,(_f(195) & _f(39) => _f(191));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.24,(_f(194) & _f(41) => _f(192));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.23,(_f(194) & _f(39) => _f(191));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.22,(_f(193) & _f(41) => _f(192));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.21,(_f(193) & _f(39) => _f(191));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.20,(_f(190) & _f(41) => _f(192));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.19,(_f(190) & _f(39) => _f(191));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.18,(_f(189) & _f(41) => _f(182));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.17,(_f(189) & _f(39) => _f(181));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.16,(_f(188) & _f(41) => _f(182));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.15,(_f(188) & _f(39) => _f(181));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.14,(_f(187) & _f(41) => _f(182));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.13,(_f(187) & _f(39) => _f(181));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.12,(_f(186) & _f(41) => _f(182));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.11,(_f(186) & _f(39) => _f(181));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.10,(_f(185) & _f(41) => _f(182));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.9,(_f(185) & _f(39) => _f(181));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.8,(_f(184) & _f(41) => _f(182));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.7,(_f(184) & _f(39) => _f(181));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.6,(_f(183) & _f(41) => _f(182));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.5,(_f(183) & _f(39) => _f(181));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.4,(_f(180) & _f(41) => _f(182));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.3,(_f(180) & _f(39) => _f(181));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.2,(_f(177) & _f(36) => _f(179));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(176) & sendItem.1,(_f(177) & _f(36) => _f(178));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(161) & queueDelete.15,(_f(175) & _f(54) => _f(169));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(161) & queueDelete.14,(_f(174) & _f(41) => _f(167));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(161) & queueDelete.13,(_f(174) & _f(39) => _f(166));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(161) & queueDelete.12,(_f(173) & _f(54) => _f(169));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(161) & queueDelete.11,(_f(172) & _f(41) => _f(167));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(161) & queueDelete.10,(_f(172) & _f(39) => _f(166));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(161) & queueDelete.9,(_f(171) & _f(54) => _f(169));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(161) & queueDelete.8,(_f(170) & _f(41) => _f(167));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(161) & queueDelete.7,(_f(170) & _f(39) => _f(166));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(161) & queueDelete.6,(_f(168) & _f(54) => _f(169));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(161) & queueDelete.5,(_f(165) & _f(41) => _f(167));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(161) & queueDelete.4,(_f(165) & _f(39) => _f(166));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(161) & queueDelete.3,(_f(36) => _f(164));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(161) & queueDelete.2,(_f(36) => _f(163));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(161) & queueDelete.1,(_f(36) => _f(162));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(155) & xQueueCreate.3,(_f(159) & _f(54) => _f(160));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(155) & xQueueCreate.2,(_f(156) & _f(41) => _f(158));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(155) & xQueueCreate.1,(_f(156) & _f(39) => _f(157));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(140) & vTaskSuspend.15,(_f(154) & _f(54) => _f(55));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(140) & vTaskSuspend.14,(_f(153) & _f(41) => _f(143));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(140) & vTaskSuspend.13,(_f(153) & _f(39) => _f(142));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(140) & vTaskSuspend.12,(_f(152) & _f(54) => _f(55));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(140) & vTaskSuspend.11,(_f(151) & _f(41) => _f(149));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(140) & vTaskSuspend.10,(_f(151) & _f(39) => _f(148));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(140) & vTaskSuspend.9,(_f(150) & _f(54) => _f(55));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(140) & vTaskSuspend.8,(_f(147) & _f(41) => _f(149));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(140) & vTaskSuspend.7,(_f(147) & _f(39) => _f(148));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(140) & vTaskSuspend.6,(_f(146) & _f(54) => _f(55));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(140) & vTaskSuspend.5,(_f(145) & _f(41) => _f(143));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(140) & vTaskSuspend.4,(_f(145) & _f(39) => _f(142));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(140) & vTaskSuspend.3,(_f(144) & _f(54) => _f(55));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(140) & vTaskSuspend.2,(_f(141) & _f(41) => _f(143));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(140) & vTaskSuspend.1,(_f(141) & _f(39) => _f(142));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(132) & vTaskStartScheduler.5,(_f(138) & _f(26) => _f(139));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(132) & vTaskStartScheduler.4,(_f(138) & _f(26) => _f(29));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(132) & vTaskStartScheduler.3,(_f(136) & _f(26) => _f(137));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(132) & vTaskStartScheduler.2,(_f(133) & _f(26) => _f(135));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(132) & vTaskStartScheduler.1,(_f(133) & _f(23) => _f(134));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(102) & xTaskResumeAll.27,(_f(131) & _f(108) => _f(120));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(102) & xTaskResumeAll.26,(_f(131) & _f(106) => _f(127));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(102) & xTaskResumeAll.25,(_f(130) & _f(108) => _f(120));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(102) & xTaskResumeAll.24,(_f(130) & _f(106) => _f(127));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(102) & xTaskResumeAll.23,(_f(129) & _f(108) => _f(117));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(102) & xTaskResumeAll.22,(_f(128) & _f(108) => _f(109));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(102) & xTaskResumeAll.21,(_f(128) & _f(106) => _f(127));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(102) & xTaskResumeAll.20,(_f(126) & _f(108) => _f(109));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(102) & xTaskResumeAll.19,(_f(126) & _f(106) => _f(127));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(102) & xTaskResumeAll.18,(_f(125) & _f(111) => _f(112));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(102) & xTaskResumeAll.17,(_f(124) & _f(106) => _f(116));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(102) & xTaskResumeAll.16,(_f(123) & _f(111) => _f(112));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(102) & xTaskResumeAll.15,(_f(122) & _f(108) => _f(120));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(102) & xTaskResumeAll.14,(_f(122) & _f(106) => _f(107));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(102) & xTaskResumeAll.13,(_f(121) & _f(111) => _f(112));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(102) & xTaskResumeAll.12,(_f(119) & _f(108) => _f(120));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(102) & xTaskResumeAll.11,(_f(119) & _f(106) => _f(107));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(102) & xTaskResumeAll.10,(_f(118) & _f(111) => _f(112));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(102) & xTaskResumeAll.9,(_f(115) & _f(108) => _f(117));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(102) & xTaskResumeAll.8,(_f(115) & _f(106) => _f(116));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(102) & xTaskResumeAll.7,(_f(114) & _f(111) => _f(112));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(102) & xTaskResumeAll.6,(_f(113) & _f(108) => _f(109));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(102) & xTaskResumeAll.5,(_f(113) & _f(106) => _f(107));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(102) & xTaskResumeAll.4,(_f(110) & _f(111) => _f(112));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(102) & xTaskResumeAll.3,(_f(105) & _f(108) => _f(109));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(102) & xTaskResumeAll.2,(_f(105) & _f(106) => _f(107));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(102) & xTaskResumeAll.1,(_f(103) => _f(104));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(95) & vTaskResume.6,(_f(101) & _f(54) => _f(55));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(95) & vTaskResume.5,(_f(100) & _f(41) => _f(98));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(95) & vTaskResume.4,(_f(100) & _f(39) => _f(97));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(95) & vTaskResume.3,(_f(99) & _f(54) => _f(55));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(95) & vTaskResume.2,(_f(96) & _f(41) => _f(98));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(95) & vTaskResume.1,(_f(96) & _f(39) => _f(97));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(93) & vTaskEndScheduler.1,(_f(94) & _f(23) => _f(5));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(47) & vTaskDelete.46,(_f(92) & _f(26) => _f(60));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(47) & vTaskDelete.45,(_f(91) & _f(26) => _f(58));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(47) & vTaskDelete.44,(_f(91) & _f(26) => _f(57));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(47) & vTaskDelete.43,(_f(90) & _f(54) => _f(55));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(47) & vTaskDelete.42,(_f(89) & _f(23) => _f(52));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(47) & vTaskDelete.41,(_f(88) & _f(41) => _f(50));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(47) & vTaskDelete.40,(_f(88) & _f(39) => _f(49));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(47) & vTaskDelete.39,(_f(87) & _f(26) => _f(60));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(47) & vTaskDelete.38,(_f(86) & _f(26) => _f(58));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(47) & vTaskDelete.37,(_f(86) & _f(26) => _f(57));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(47) & vTaskDelete.36,(_f(85) & _f(54) => _f(55));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(47) & vTaskDelete.35,(_f(84) & _f(23) => _f(52));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(47) & vTaskDelete.34,(_f(81) & _f(41) => _f(83));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(47) & vTaskDelete.33,(_f(81) & _f(39) => _f(82));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(47) & vTaskDelete.32,(_f(80) & _f(26) => _f(60));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(47) & vTaskDelete.31,(_f(79) & _f(26) => _f(58));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(47) & vTaskDelete.30,(_f(79) & _f(26) => _f(57));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(47) & vTaskDelete.29,(_f(78) & _f(54) => _f(55));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(47) & vTaskDelete.28,(_f(77) & _f(23) => _f(52));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(47) & vTaskDelete.27,(_f(76) & _f(41) => _f(71));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(47) & vTaskDelete.26,(_f(76) & _f(39) => _f(70));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(47) & vTaskDelete.25,(_f(75) & _f(26) => _f(60));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(47) & vTaskDelete.24,(_f(74) & _f(26) => _f(58));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(47) & vTaskDelete.23,(_f(74) & _f(26) => _f(57));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(47) & vTaskDelete.22,(_f(73) & _f(54) => _f(55));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(47) & vTaskDelete.21,(_f(72) & _f(23) => _f(52));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(47) & vTaskDelete.20,(_f(69) & _f(41) => _f(71));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(47) & vTaskDelete.19,(_f(69) & _f(39) => _f(70));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(47) & vTaskDelete.18,(_f(68) & _f(26) => _f(60));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(47) & vTaskDelete.17,(_f(67) & _f(26) => _f(58));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(47) & vTaskDelete.16,(_f(67) & _f(26) => _f(57));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(47) & vTaskDelete.15,(_f(66) & _f(54) => _f(55));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(47) & vTaskDelete.14,(_f(65) & _f(23) => _f(52));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(47) & vTaskDelete.13,(_f(64) & _f(41) => _f(50));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(47) & vTaskDelete.12,(_f(64) & _f(39) => _f(49));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(47) & vTaskDelete.11,(_f(63) & _f(54) => _f(55));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(47) & vTaskDelete.10,(_f(62) & _f(23) => _f(52));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(47) & vTaskDelete.9,(_f(61) & _f(41) => _f(50));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(47) & vTaskDelete.8,(_f(61) & _f(39) => _f(49));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(47) & vTaskDelete.7,(_f(59) & _f(26) => _f(60));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(47) & vTaskDelete.6,(_f(56) & _f(26) => _f(58));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(47) & vTaskDelete.5,(_f(56) & _f(26) => _f(57));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(47) & vTaskDelete.4,(_f(53) & _f(54) => _f(55));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(47) & vTaskDelete.3,(_f(51) & _f(23) => _f(52));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(47) & vTaskDelete.2,(_f(48) & _f(41) => _f(50));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(47) & vTaskDelete.1,(_f(48) & _f(39) => _f(49));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(43) & vTaskDelayUntil.3,(_f(46) & _f(41) => _f(42));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(43) & vTaskDelayUntil.2,(_f(46) & _f(39) => _f(40));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(43) & vTaskDelayUntil.1,(_f(44) & _f(36) => _f(45));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(34) & vTaskDelay.3,(_f(38) & _f(41) => _f(42));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(34) & vTaskDelay.2,(_f(38) & _f(39) => _f(40));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(34) & vTaskDelay.1,(_f(35) & _f(36) => _f(37));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(21) & xTaskCreate.8,(_f(33) & _f(26) => _f(30));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(21) & xTaskCreate.7,(_f(33) & _f(26) => _f(29));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(21) & xTaskCreate.6,(_f(32) & _f(26) => _f(27));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(21) & xTaskCreate.5,(_f(31) & _f(23) => _f(24));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(21) & xTaskCreate.4,(_f(28) & _f(26) => _f(30));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(21) & xTaskCreate.3,(_f(28) & _f(26) => _f(29));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(21) & xTaskCreate.2,(_f(25) & _f(26) => _f(27));
  _f(1) & _f(2) & _f(6) & _f(20) & _f(21) & xTaskCreate.1,(_f(22) & _f(23) => _f(24));
  _f(1) & _f(2) & _f(6) & AssertionLemmas.5,(_f(17) & _f(18) => _f(19));
  _f(1) & _f(2) & _f(6) & AssertionLemmas.4,(_f(12) & _f(15) => _f(16));
  _f(1) & _f(2) & _f(6) & AssertionLemmas.3,(_f(12) & _f(13) => _f(14));
  _f(1) & _f(2) & _f(6) & AssertionLemmas.2,(_f(10) & _f(11) => _f(9));
  _f(1) & _f(2) & _f(6) & AssertionLemmas.1,(_f(7) & _f(8) => _f(9));
  _f(1) & _f(2) & Initialisation.1,(_f(3) & _f(4) => _f(5))
END
&
THEORY Formulas IS
  ("`Seen and used machines properties'" & BIT = 0..1 & MAX_DELAY: 0..2147483647 & 1<=MAX_DELAY & NULL_PARAMETER: PARAMETER & PRIORITY: POW(NAT) & TICK: POW(NAT) & TICK = 0..MAX_DELAY & TICK_INCREMENT: TICK*TICK +-> TICK & dom(TICK_INCREMENT) = TICK*TICK & TICK_INCREMENT = %(tick,inc).(tick: TICK & inc: TICK | (tick+inc) mod MAX_DELAY) & QUEUE_NULL: QUEUE & ITEM_NULL: ITEM & ITEM_EMPTY: ITEM & TASK_NULL: TASK & REMOVE_EVENT: TASK*POW(QUEUE)*(QUEUE +-> POW(TASK)) +-> (QUEUE +-> POW(TASK)) & REMOVE_EVENT = %(task,queues,pending).(task: TASK & queues: POW(QUEUE) & pending: QUEUE +-> POW(TASK) | %queue.(queue: queues & queue: dom(pending) | pending(queue)-{task})) & semGIVE_BLOCK_TIME: TICK & IDLE_PRIORITY: PRIORITY & IDLE_PRIORITY = 0 & QUEUE_LENGTH: POW(NAT) & QUEUE_LENGTH = 1..2147483647 & QUEUE_QUANT: POW(NAT) & QUEUE_QUANT = 0..2147483647 & NAME: FIN(INTEGER) & not(NAME = {}) & PARAMETER: FIN(INTEGER) & not(PARAMETER = {}) & TASK: FIN(INTEGER) & not(TASK = {}) & STACK: FIN(INTEGER) & not(STACK = {}) & TASK_CODE: FIN(INTEGER) & not(TASK_CODE = {}) & ITEM: FIN(INTEGER) & not(ITEM = {}) & QUEUE: FIN(INTEGER) & not(QUEUE = {}) & (1..3)*{SCHEDULER_STATE}: FIN(NATURAL*{SCHEDULER_STATE}) & not((1..3)*{SCHEDULER_STATE} = {}) & (1..2)*{COPY_POSITION}: FIN(NATURAL*{COPY_POSITION}) & not((1..2)*{COPY_POSITION} = {}) & (1..3)*{QUEUE_TYPE}: FIN(NATURAL*{QUEUE_TYPE}) & not((1..3)*{QUEUE_TYPE} = {}) & (1..10)*{ERROR_DEFINITION}: FIN(NATURAL*{ERROR_DEFINITION}) & not((1..10)*{ERROR_DEFINITION} = {}) & configMAX_PRIORITIES: INTEGER & 0<=configMAX_PRIORITIES & configMAX_PRIORITIES<=2147483647 & 1<=configMAX_PRIORITIES & configTOTAL_HEAP_SIZE: INTEGER & 0<=configTOTAL_HEAP_SIZE & configTOTAL_HEAP_SIZE<=2147483647 & configMINIMAL_STACK_SIZE: INTEGER & 0<=configMINIMAL_STACK_SIZE & configMINIMAL_STACK_SIZE<=2147483647 & INCLUDE_uxTaskPriorityGet: BIT & INCLUDE_vTaskDelete: BIT & INCLUDE_vTaskSuspend: BIT & INCLUDE_xTaskGetSchedulerState: BIT & INCLUDE_vTaskPrioritySet: BIT & INCLUDE_xTaskGetCurrentTaskHandle: BIT & INCLUDE_vTaskDelayUntil: BIT & INCLUDE_vTaskDelay: BIT & PRIORITY = 0..configMAX_PRIORITIES-1);
  ("`Included,imported and extended machines properties'" & remove_task: (QUEUE +-> POW(TASK))*POW(TASK) +-> (QUEUE +-> POW(TASK)) & dom(remove_task) = (QUEUE +-> POW(TASK))*POW(TASK) & remove_task = %(q_task,unblocked).(q_task: QUEUE +-> POW(TASK) & unblocked: POW(TASK) | %q1.(q1: QUEUE & q1: dom(q_task) | q_task(q1)-unblocked)) & update_first: (QUEUE +-> POW(TASK))*POW(TASK) +-> (QUEUE +-> TASK) & dom(update_first) = (QUEUE +-> POW(TASK))*POW(TASK) & update_first = %(q_task,unblocked).(q_task: QUEUE +-> POW(TASK) & unblocked: POW(TASK) | SET(q1,task).(q1: QUEUE & q1: dom(q_task) & not(q_task(q1): POW(unblocked)) & task: TASK & (task: q_task(q1) & not(task: unblocked)))) & "`Included,imported and extended machines invariants'" & active: BOOL & tickCount: TICK & tickMissed: TICK & tasks: FIN(TASK) & blocked: FIN(TASK) & blocked: POW(tasks) & unblocked: FIN(TASK) & unblocked: POW(blocked) & runable: FIN(TASK) & runable: POW(tasks) & suspended: FIN(TASK) & suspended: POW(tasks) & runable/\blocked = {} & blocked/\suspended = {} & suspended/\runable = {} & tasks = suspended\/blocked\/runable & running: TASK & idle: TASK & (active = TRUE => not(runable = {}) & running: runable & idle: runable & not(TASK_NULL: tasks)) & queues: POW(QUEUE) & queue_receiving: QUEUE +-> POW(TASK) & queue_sending: QUEUE +-> POW(TASK) & queues = dom(queue_receiving) & queues = dom(queue_sending) & first_receiving: QUEUE +-> TASK & first_sending: QUEUE +-> TASK & dom(first_receiving) = dom(queue_receiving) & dom(first_sending) = dom(queue_sending) & !q1.(q1: queues & q1: dom(first_receiving) & not(queue_receiving(q1) = {}) => first_receiving(q1): queue_receiving(q1)) & !q1.(q1: queues & q1: dom(first_sending) & not(queue_sending(q1) = {}) => first_sending(q1): queue_sending(q1)) & queues_msg: POW(queues) & queues_msg_full: POW(queues_msg) & queues_msg_empty: POW(queues_msg) & queues_msg_full/\queues_msg_empty = {} & queue_items: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: queue_receiving(q1) => not(tk: queue_receiving(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: queue_sending(q1) => not(tk: queue_sending(q2))) & semaphores: POW(QUEUE) & semaphores: POW(queues) & semaphores_busy: POW(semaphores) & semaphores_full: POW(semaphores) & semaphores_busy/\semaphores_full = {} & mutexes: POW(queues) & mutex_holder: QUEUE +-> TASK & mutexes = dom(mutex_holder) & mutexes_busy: POW(mutexes) & !mt.(mt: mutexes_busy => not(mutex_holder(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy) => mutex_holder(mt) = TASK_NULL) & queues_msg/\semaphores = {} & queues_msg/\mutexes = {} & mutexes/\semaphores = {} & "`Included,imported and extended machines assertions'" & (active = TRUE => not(running: suspended)) & (active = TRUE => not(running: blocked)) & (active = TRUE => running: runable) & (active = TRUE => not(idle = TASK_NULL)) & (active = TRUE => not(idle: suspended)) & (active = TRUE => not(idle: blocked)) & (active = TRUE => idle: runable) & (active = TRUE => not(tasks = {})) & (active = TRUE => not(runable = {})) & !que.(que: QUEUE & not(que: queues) => not(que: mutexes)) & !que.(que: QUEUE & not(que: queues) => not(que: semaphores)) & !que.(que: queues_msg & que: queues_msg_full => not(que: queues_msg_empty)) & !que.(que: queues_msg & que: queues_msg_empty => not(que: queues_msg_full)) & "`Seen and used machines assertions'" & BIT: POW(NATURAL) & QUEUE_LENGTH: POW(QUEUE_QUANT) & configMAX_PRIORITIES: INTEGER & 0<=configMAX_PRIORITIES);
  ("`Local hypotheses'" & idle$0: TASK & running$0: TASK & 0: TICK & {}: FIN(TASK) & {}: POW({}) & {}: POW(QUEUE) & {}: QUEUE +-> POW(TASK) & dom({}) = {} & {}: QUEUE +-> TASK & {}: QUEUE +-> POW(ITEM));
  "`Check that the invariant (ran(mutex_holder) <: tasks\/{TASK_NULL}) is established by the initialisation - ref 3.3'";
  (ran({}): POW({}\/{TASK_NULL}));
  ("`Component invariant'" & !que.(que: queues => queue_sending(que): POW(blocked\/suspended)) & !que.(que: queues => queue_receiving(que): POW(blocked\/suspended)) & ran(mutex_holder): POW(tasks\/{TASK_NULL}) & !mt.(mt: mutexes => queue_sending(mt) = {}) & (active = TRUE => not(idle: ran(mutex_holder)) & !mt.(mt: mutexes_busy => mutex_holder(mt): tasks) & !mt.(mt: mutexes & not(mt: mutexes_busy) => not(mutex_holder(mt): tasks))));
  ("`Local hypotheses'" & que: queues & task: tasks & task: queue_receiving(que));
  "`Check assertion (!(que,task).(que: queues & task: tasks & task: queue_receiving(que) => task: blocked\/suspended)) deduction - ref 3.2, 4.2, 5.3'";
  (task: blocked\/suspended);
  ("`Local hypotheses'" & que: queues & task: tasks & task: queue_sending(que));
  "`Check assertion (!(que,task).(que: queues & task: tasks & task: queue_sending(que) => task: blocked\/suspended)) deduction - ref 3.2, 4.2, 5.3'";
  ("`Local hypotheses'" & que: queues & task: TASK & not(task: blocked) & not(task: suspended));
  "`Check assertion (!(que,task).(que: queues & task: TASK & task/:blocked & task/:suspended => task/:queue_receiving(que))) deduction - ref 3.2, 4.2, 5.3'";
  (not(task: queue_receiving(que)));
  "`Check assertion (!(que,task).(que: queues & task: TASK & task/:blocked & task/:suspended => task/:queue_sending(que))) deduction - ref 3.2, 4.2, 5.3'";
  (not(task: queue_sending(que)));
  ("`Local hypotheses'" & mt: mutexes_busy & active = TRUE);
  "`Check assertion (!mt.(mt: mutexes_busy & active = TRUE => mutex_holder(mt)/=idle)) deduction - ref 3.2, 4.2, 5.3'";
  (not(mutex_holder(mt) = idle));
  ("`Component assertions'" & (active = TRUE => !mt.(mt: mutexes_busy => not(mutex_holder(mt) = idle))) & !(que,task).(que: queues & task: TASK & not(task: blocked) & not(task: suspended) => not(task: queue_sending(que))) & !(que,task).(que: queues & task: TASK & not(task: blocked) & not(task: suspended) => not(task: queue_receiving(que))) & !(que,task).(que: queues & task: tasks & task: queue_sending(que) => task: blocked\/suspended) & !(que,task).(que: queues & task: tasks & task: queue_receiving(que) => task: blocked\/suspended));
  ("`xTaskCreate preconditions in this component'" & pvTaskCode: TASK_CODE & pcName: NAME & usStackDepth: INTEGER & 0<=usStackDepth & usStackDepth<=2147483647 & pvParameters: POW(PARAMETER) & uxPriority: PRIORITY);
  ("`Local hypotheses'" & task: TASK & not(task: tasks) & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task = TASK_NULL) & tasks\/{task}: FIN(TASK) & blocked: POW(tasks\/{task}) & n_runable: FIN(TASK) & n_runable: POW(tasks\/{task}) & suspended: POW(tasks\/{task}) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks\/{task} = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  "`Check that the invariant (ran(mutex_holder) <: tasks\/{TASK_NULL}) is preserved by the operation - ref 3.4'";
  (ran(mutex_holder): POW(tasks\/{task}\/{TASK_NULL}));
  ("`Local hypotheses'" & task: TASK & not(task: tasks) & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task = TASK_NULL) & tasks\/{task}: FIN(TASK) & blocked: POW(tasks\/{task}) & n_runable: FIN(TASK) & n_runable: POW(tasks\/{task}) & suspended: POW(tasks\/{task}) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks\/{task} = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & active = TRUE & mt: mutexes_busy);
  "`Check that the invariant (active = TRUE => idle/:ran(mutex_holder) & !mt.(mt: mutexes_busy => mutex_holder(mt): tasks) & !mt.(mt: mutexes & mt/:mutexes_busy => mutex_holder(mt)/:tasks)) is preserved by the operation - ref 3.4'";
  (mutex_holder(mt): tasks\/{task});
  ("`Local hypotheses'" & task: TASK & not(task: tasks) & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task = TASK_NULL) & tasks\/{task}: FIN(TASK) & blocked: POW(tasks\/{task}) & n_runable: FIN(TASK) & n_runable: POW(tasks\/{task}) & suspended: POW(tasks\/{task}) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks\/{task} = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & active = TRUE & mt: mutexes & not(mt: mutexes_busy));
  (not(mutex_holder(mt): tasks));
  (not(mutex_holder(mt) = task));
  ("`Local hypotheses'" & task: TASK & not(task: tasks) & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task = TASK_NULL) & running$0: n_runable & tasks\/{task}: FIN(TASK) & blocked: POW(tasks\/{task}) & n_runable: FIN(TASK) & n_runable: POW(tasks\/{task}) & suspended: POW(tasks\/{task}) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks\/{task} = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & task: TASK & not(task: tasks) & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task = TASK_NULL) & running$0: n_runable & tasks\/{task}: FIN(TASK) & blocked: POW(tasks\/{task}) & n_runable: FIN(TASK) & n_runable: POW(tasks\/{task}) & suspended: POW(tasks\/{task}) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks\/{task} = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & active = TRUE & mt: mutexes_busy);
  ("`Local hypotheses'" & task: TASK & not(task: tasks) & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task = TASK_NULL) & running$0: n_runable & tasks\/{task}: FIN(TASK) & blocked: POW(tasks\/{task}) & n_runable: FIN(TASK) & n_runable: POW(tasks\/{task}) & suspended: POW(tasks\/{task}) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks\/{task} = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & active = TRUE & mt: mutexes & not(mt: mutexes_busy));
  ("`vTaskDelay preconditions in this component'" & xTicksToDelay: TICK & INCLUDE_vTaskDelay = 1 & not(running = idle) & running: runable);
  ("`Local hypotheses'" & 1<=xTicksToDelay);
  "`Check preconditions of called operation, or While loop construction, or Assert predicates'";
  (TICK_INCREMENT(xTicksToDelay,tickCount): TICK);
  ("`Local hypotheses'" & 1<=xTicksToDelay & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & blocked\/{running}: FIN(TASK) & running: tasks & unblocked: POW(blocked\/{running}) & n_runable: FIN(TASK) & not(running: n_runable) & n_runable/\blocked = {} & blocked\/{running}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/(blocked\/{running})\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked) & not(running$0 = running)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  "`Check that the invariant (!que.(que: queues => queue_sending(que) <: blocked\/suspended)) is preserved by the operation - ref 3.4'";
  (queue_sending(que): POW(blocked\/{running}\/suspended));
  "`Check that the invariant (!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) is preserved by the operation - ref 3.4'";
  (queue_receiving(que): POW(blocked\/{running}\/suspended));
  ("`vTaskDelayUntil preconditions in this component'" & pxPreviousWakeTime: TICK & xTimeIncrement: TICK & not(running = idle) & INCLUDE_vTaskDelayUntil = 1 & running: runable);
  ("`Local hypotheses'" & 1<=xTimeIncrement);
  (TICK_INCREMENT(pxPreviousWakeTime,xTimeIncrement): TICK);
  ("`Local hypotheses'" & 1<=xTimeIncrement & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & blocked\/{running}: FIN(TASK) & running: tasks & unblocked: POW(blocked\/{running}) & n_runable: FIN(TASK) & not(running: n_runable) & n_runable/\blocked = {} & blocked\/{running}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/(blocked\/{running})\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked) & not(running$0 = running)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`vTaskDelete preconditions in this component'" & INCLUDE_vTaskDelete = 1 & pxTaskToDelete: TASK & pxTaskToDelete: tasks & not(pxTaskToDelete = idle) & not(pxTaskToDelete: ran(mutex_holder)));
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & n_receiving: POW(TASK) & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: TASK & n_first: queue_receiving(pxQueue) & pxQueue$0: queues & n_sending: POW(TASK) & n_first$0: TASK & pxTaskToDelete: queue_sending(pxQueue$0) & n_sending = queue_sending(pxQueue$0)-{first_sending(pxQueue$0)} & n_first$0 = first_sending(pxQueue$0) & pxTaskToDelete: runable & n_runable: POW(tasks) & n_runable = runable-{pxTaskToDelete} & pxTaskToDelete = running & active = TRUE & running$0: n_runable & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & n_runable: FIN(TASK) & n_runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks-{pxTaskToDelete} = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & queues = dom(queue_sending<+{pxQueue$0|->n_sending}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & first_sending<+{pxQueue$0|->n_first$0}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & dom(first_sending<+{pxQueue$0|->n_first$0}) = dom(queue_sending<+{pxQueue$0|->n_sending}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue$0|->n_first$0}) & not((queue_sending<+{pxQueue$0|->n_sending})(q1) = {}) => (first_sending<+{pxQueue$0|->n_first$0})(q1): (queue_sending<+{pxQueue$0|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & (active = TRUE => not(n_runable = {})) & que: queues);
  ((queue_sending<+{pxQueue$0|->n_sending})(que): POW(blocked\/suspended));
  ((queue_receiving<+{pxQueue|->n_receiving})(que): POW(blocked\/suspended));
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & n_receiving: POW(TASK) & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: TASK & n_first: queue_receiving(pxQueue) & pxQueue$0: queues & n_sending: POW(TASK) & n_first$0: TASK & pxTaskToDelete: queue_sending(pxQueue$0) & n_sending = queue_sending(pxQueue$0)-{first_sending(pxQueue$0)} & n_first$0 = first_sending(pxQueue$0) & pxTaskToDelete: runable & n_runable: POW(tasks) & n_runable = runable-{pxTaskToDelete} & pxTaskToDelete = running & active = TRUE & running$0: n_runable & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & n_runable: FIN(TASK) & n_runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks-{pxTaskToDelete} = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & queues = dom(queue_sending<+{pxQueue$0|->n_sending}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & first_sending<+{pxQueue$0|->n_first$0}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & dom(first_sending<+{pxQueue$0|->n_first$0}) = dom(queue_sending<+{pxQueue$0|->n_sending}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue$0|->n_first$0}) & not((queue_sending<+{pxQueue$0|->n_sending})(q1) = {}) => (first_sending<+{pxQueue$0|->n_first$0})(q1): (queue_sending<+{pxQueue$0|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & (active = TRUE => not(n_runable = {})));
  (ran(mutex_holder): POW(tasks-{pxTaskToDelete}\/{TASK_NULL}));
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & n_receiving: POW(TASK) & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: TASK & n_first: queue_receiving(pxQueue) & pxQueue$0: queues & n_sending: POW(TASK) & n_first$0: TASK & pxTaskToDelete: queue_sending(pxQueue$0) & n_sending = queue_sending(pxQueue$0)-{first_sending(pxQueue$0)} & n_first$0 = first_sending(pxQueue$0) & pxTaskToDelete: runable & n_runable: POW(tasks) & n_runable = runable-{pxTaskToDelete} & pxTaskToDelete = running & active = TRUE & running$0: n_runable & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & n_runable: FIN(TASK) & n_runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks-{pxTaskToDelete} = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & queues = dom(queue_sending<+{pxQueue$0|->n_sending}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & first_sending<+{pxQueue$0|->n_first$0}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & dom(first_sending<+{pxQueue$0|->n_first$0}) = dom(queue_sending<+{pxQueue$0|->n_sending}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue$0|->n_first$0}) & not((queue_sending<+{pxQueue$0|->n_sending})(q1) = {}) => (first_sending<+{pxQueue$0|->n_first$0})(q1): (queue_sending<+{pxQueue$0|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  "`Check that the invariant (!mt.(mt: mutexes => queue_sending(mt) = {})) is preserved by the operation - ref 3.4'";
  ((queue_sending<+{pxQueue$0|->n_sending})(mt) = {});
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & n_receiving: POW(TASK) & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: TASK & n_first: queue_receiving(pxQueue) & pxQueue$0: queues & n_sending: POW(TASK) & n_first$0: TASK & pxTaskToDelete: queue_sending(pxQueue$0) & n_sending = queue_sending(pxQueue$0)-{first_sending(pxQueue$0)} & n_first$0 = first_sending(pxQueue$0) & pxTaskToDelete: runable & n_runable: POW(tasks) & n_runable = runable-{pxTaskToDelete} & pxTaskToDelete = running & active = TRUE & running$0: n_runable & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & n_runable: FIN(TASK) & n_runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks-{pxTaskToDelete} = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & queues = dom(queue_sending<+{pxQueue$0|->n_sending}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & first_sending<+{pxQueue$0|->n_first$0}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & dom(first_sending<+{pxQueue$0|->n_first$0}) = dom(queue_sending<+{pxQueue$0|->n_sending}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue$0|->n_first$0}) & not((queue_sending<+{pxQueue$0|->n_sending})(q1) = {}) => (first_sending<+{pxQueue$0|->n_first$0})(q1): (queue_sending<+{pxQueue$0|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & (active = TRUE => not(n_runable = {})) & mt: mutexes_busy);
  (mutex_holder(mt): tasks);
  (not(mutex_holder(mt) = pxTaskToDelete));
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & n_receiving: POW(TASK) & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: TASK & n_first: queue_receiving(pxQueue) & pxQueue$0: queues & n_sending: POW(TASK) & n_first$0: TASK & pxTaskToDelete: queue_sending(pxQueue$0) & n_sending = queue_sending(pxQueue$0)-{first_sending(pxQueue$0)} & n_first$0 = first_sending(pxQueue$0) & pxTaskToDelete: runable & n_runable: POW(tasks) & n_runable = runable-{pxTaskToDelete} & pxTaskToDelete = running & active = TRUE & running$0: n_runable & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & n_runable: FIN(TASK) & n_runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks-{pxTaskToDelete} = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & queues = dom(queue_sending<+{pxQueue$0|->n_sending}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & first_sending<+{pxQueue$0|->n_first$0}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & dom(first_sending<+{pxQueue$0|->n_first$0}) = dom(queue_sending<+{pxQueue$0|->n_sending}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue$0|->n_first$0}) & not((queue_sending<+{pxQueue$0|->n_sending})(q1) = {}) => (first_sending<+{pxQueue$0|->n_first$0})(q1): (queue_sending<+{pxQueue$0|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & (active = TRUE => not(n_runable = {})) & mt: mutexes & not(mt: mutexes_busy) & mutex_holder(mt): tasks);
  (mutex_holder(mt) = pxTaskToDelete);
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & n_receiving: POW(TASK) & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: TASK & n_first: queue_receiving(pxQueue) & pxQueue$0: queues & n_sending: POW(TASK) & n_first$0: TASK & pxTaskToDelete: queue_sending(pxQueue$0) & n_sending = queue_sending(pxQueue$0)-{first_sending(pxQueue$0)} & n_first$0 = first_sending(pxQueue$0) & pxTaskToDelete: runable & n_runable: POW(tasks) & n_runable = runable-{pxTaskToDelete} & pxTaskToDelete = running & not(active = TRUE) & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & n_runable: FIN(TASK) & n_runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks-{pxTaskToDelete} = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & queues = dom(queue_sending<+{pxQueue$0|->n_sending}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & first_sending<+{pxQueue$0|->n_first$0}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & dom(first_sending<+{pxQueue$0|->n_first$0}) = dom(queue_sending<+{pxQueue$0|->n_sending}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue$0|->n_first$0}) & not((queue_sending<+{pxQueue$0|->n_sending})(q1) = {}) => (first_sending<+{pxQueue$0|->n_first$0})(q1): (queue_sending<+{pxQueue$0|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & n_receiving: POW(TASK) & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: TASK & n_first: queue_receiving(pxQueue) & pxQueue$0: queues & n_sending: POW(TASK) & n_first$0: TASK & pxTaskToDelete: queue_sending(pxQueue$0) & n_sending = queue_sending(pxQueue$0)-{first_sending(pxQueue$0)} & n_first$0 = first_sending(pxQueue$0) & pxTaskToDelete: runable & n_runable: POW(tasks) & n_runable = runable-{pxTaskToDelete} & pxTaskToDelete = running & not(active = TRUE) & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & n_runable: FIN(TASK) & n_runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks-{pxTaskToDelete} = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & queues = dom(queue_sending<+{pxQueue$0|->n_sending}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & first_sending<+{pxQueue$0|->n_first$0}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & dom(first_sending<+{pxQueue$0|->n_first$0}) = dom(queue_sending<+{pxQueue$0|->n_sending}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue$0|->n_first$0}) & not((queue_sending<+{pxQueue$0|->n_sending})(q1) = {}) => (first_sending<+{pxQueue$0|->n_first$0})(q1): (queue_sending<+{pxQueue$0|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & n_receiving: POW(TASK) & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: TASK & n_first: queue_receiving(pxQueue) & pxQueue$0: queues & n_sending: POW(TASK) & n_first$0: TASK & pxTaskToDelete: queue_sending(pxQueue$0) & n_sending = queue_sending(pxQueue$0)-{first_sending(pxQueue$0)} & n_first$0 = first_sending(pxQueue$0) & pxTaskToDelete: runable & n_runable: POW(tasks) & n_runable = runable-{pxTaskToDelete} & pxTaskToDelete = running & not(active = TRUE) & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & n_runable: FIN(TASK) & n_runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks-{pxTaskToDelete} = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & queues = dom(queue_sending<+{pxQueue$0|->n_sending}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & first_sending<+{pxQueue$0|->n_first$0}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & dom(first_sending<+{pxQueue$0|->n_first$0}) = dom(queue_sending<+{pxQueue$0|->n_sending}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue$0|->n_first$0}) & not((queue_sending<+{pxQueue$0|->n_sending})(q1) = {}) => (first_sending<+{pxQueue$0|->n_first$0})(q1): (queue_sending<+{pxQueue$0|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & n_receiving: POW(TASK) & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: TASK & n_first: queue_receiving(pxQueue) & pxQueue$0: queues & n_sending: POW(TASK) & n_first$0: TASK & pxTaskToDelete: queue_sending(pxQueue$0) & n_sending = queue_sending(pxQueue$0)-{first_sending(pxQueue$0)} & n_first$0 = first_sending(pxQueue$0) & pxTaskToDelete: runable & n_runable: POW(tasks) & n_runable = runable-{pxTaskToDelete} & not(pxTaskToDelete = running) & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & n_runable: FIN(TASK) & n_runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks-{pxTaskToDelete} = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & queues = dom(queue_sending<+{pxQueue$0|->n_sending}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & first_sending<+{pxQueue$0|->n_first$0}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & dom(first_sending<+{pxQueue$0|->n_first$0}) = dom(queue_sending<+{pxQueue$0|->n_sending}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue$0|->n_first$0}) & not((queue_sending<+{pxQueue$0|->n_sending})(q1) = {}) => (first_sending<+{pxQueue$0|->n_first$0})(q1): (queue_sending<+{pxQueue$0|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & n_receiving: POW(TASK) & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: TASK & n_first: queue_receiving(pxQueue) & pxQueue$0: queues & n_sending: POW(TASK) & n_first$0: TASK & pxTaskToDelete: queue_sending(pxQueue$0) & n_sending = queue_sending(pxQueue$0)-{first_sending(pxQueue$0)} & n_first$0 = first_sending(pxQueue$0) & pxTaskToDelete: runable & n_runable: POW(tasks) & n_runable = runable-{pxTaskToDelete} & not(pxTaskToDelete = running) & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & n_runable: FIN(TASK) & n_runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks-{pxTaskToDelete} = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & queues = dom(queue_sending<+{pxQueue$0|->n_sending}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & first_sending<+{pxQueue$0|->n_first$0}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & dom(first_sending<+{pxQueue$0|->n_first$0}) = dom(queue_sending<+{pxQueue$0|->n_sending}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue$0|->n_first$0}) & not((queue_sending<+{pxQueue$0|->n_sending})(q1) = {}) => (first_sending<+{pxQueue$0|->n_first$0})(q1): (queue_sending<+{pxQueue$0|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & n_receiving: POW(TASK) & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: TASK & n_first: queue_receiving(pxQueue) & pxQueue$0: queues & n_sending: POW(TASK) & n_first$0: TASK & pxTaskToDelete: queue_sending(pxQueue$0) & n_sending = queue_sending(pxQueue$0)-{first_sending(pxQueue$0)} & n_first$0 = first_sending(pxQueue$0) & pxTaskToDelete: runable & n_runable: POW(tasks) & n_runable = runable-{pxTaskToDelete} & not(pxTaskToDelete = running) & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & n_runable: FIN(TASK) & n_runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks-{pxTaskToDelete} = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & queues = dom(queue_sending<+{pxQueue$0|->n_sending}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & first_sending<+{pxQueue$0|->n_first$0}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & dom(first_sending<+{pxQueue$0|->n_first$0}) = dom(queue_sending<+{pxQueue$0|->n_sending}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue$0|->n_first$0}) & not((queue_sending<+{pxQueue$0|->n_sending})(q1) = {}) => (first_sending<+{pxQueue$0|->n_first$0})(q1): (queue_sending<+{pxQueue$0|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & n_receiving: POW(TASK) & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: TASK & n_first: queue_receiving(pxQueue) & pxQueue$0: queues & n_sending: POW(TASK) & n_first$0: TASK & pxTaskToDelete: queue_sending(pxQueue$0) & n_sending = queue_sending(pxQueue$0)-{first_sending(pxQueue$0)} & n_first$0 = first_sending(pxQueue$0) & pxTaskToDelete: runable & n_runable: POW(tasks) & n_runable = runable-{pxTaskToDelete} & not(pxTaskToDelete = running) & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & n_runable: FIN(TASK) & n_runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks-{pxTaskToDelete} = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & queues = dom(queue_sending<+{pxQueue$0|->n_sending}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & first_sending<+{pxQueue$0|->n_first$0}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & dom(first_sending<+{pxQueue$0|->n_first$0}) = dom(queue_sending<+{pxQueue$0|->n_sending}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue$0|->n_first$0}) & not((queue_sending<+{pxQueue$0|->n_sending})(q1) = {}) => (first_sending<+{pxQueue$0|->n_first$0})(q1): (queue_sending<+{pxQueue$0|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & (active = TRUE => not(n_runable = {})) & active = TRUE & mt: mutexes_busy);
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & n_receiving: POW(TASK) & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: TASK & n_first: queue_receiving(pxQueue) & pxQueue$0: queues & n_sending: POW(TASK) & n_first$0: TASK & pxTaskToDelete: queue_sending(pxQueue$0) & n_sending = queue_sending(pxQueue$0)-{first_sending(pxQueue$0)} & n_first$0 = first_sending(pxQueue$0) & pxTaskToDelete: runable & n_runable: POW(tasks) & n_runable = runable-{pxTaskToDelete} & not(pxTaskToDelete = running) & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & n_runable: FIN(TASK) & n_runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks-{pxTaskToDelete} = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & queues = dom(queue_sending<+{pxQueue$0|->n_sending}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & first_sending<+{pxQueue$0|->n_first$0}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & dom(first_sending<+{pxQueue$0|->n_first$0}) = dom(queue_sending<+{pxQueue$0|->n_sending}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue$0|->n_first$0}) & not((queue_sending<+{pxQueue$0|->n_sending})(q1) = {}) => (first_sending<+{pxQueue$0|->n_first$0})(q1): (queue_sending<+{pxQueue$0|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & (active = TRUE => not(n_runable = {})) & active = TRUE & mt: mutexes & not(mt: mutexes_busy) & mutex_holder(mt): tasks);
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & n_receiving: POW(TASK) & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: TASK & n_first: queue_receiving(pxQueue) & pxQueue$0: queues & n_sending: POW(TASK) & n_first$0: TASK & pxTaskToDelete: queue_sending(pxQueue$0) & n_sending = queue_sending(pxQueue$0)-{first_sending(pxQueue$0)} & n_first$0 = first_sending(pxQueue$0) & not(pxTaskToDelete: runable) & pxTaskToDelete: blocked & pxTaskToDelete: unblocked & tasks-{pxTaskToDelete}: FIN(TASK) & blocked-{pxTaskToDelete}: FIN(TASK) & blocked-{pxTaskToDelete}: POW(tasks-{pxTaskToDelete}) & unblocked-{pxTaskToDelete}: FIN(TASK) & unblocked-{pxTaskToDelete}: POW(blocked-{pxTaskToDelete}) & runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & runable/\blocked-{pxTaskToDelete} = {} & blocked-{pxTaskToDelete}/\suspended = {} & tasks-{pxTaskToDelete} = suspended\/blocked-{pxTaskToDelete}\/runable & (active = TRUE => not(runable = {}) & running: runable & idle: runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & queues = dom(queue_sending<+{pxQueue$0|->n_sending}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & first_sending<+{pxQueue$0|->n_first$0}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & dom(first_sending<+{pxQueue$0|->n_first$0}) = dom(queue_sending<+{pxQueue$0|->n_sending}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue$0|->n_first$0}) & not((queue_sending<+{pxQueue$0|->n_sending})(q1) = {}) => (first_sending<+{pxQueue$0|->n_first$0})(q1): (queue_sending<+{pxQueue$0|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & (active = TRUE => not(running: blocked & not(running = pxTaskToDelete))) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & que: queues);
  ((queue_sending<+{pxQueue$0|->n_sending})(que): POW(blocked-{pxTaskToDelete}\/suspended));
  ((queue_receiving<+{pxQueue|->n_receiving})(que): POW(blocked-{pxTaskToDelete}\/suspended));
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & n_receiving: POW(TASK) & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: TASK & n_first: queue_receiving(pxQueue) & pxQueue$0: queues & n_sending: POW(TASK) & n_first$0: TASK & pxTaskToDelete: queue_sending(pxQueue$0) & n_sending = queue_sending(pxQueue$0)-{first_sending(pxQueue$0)} & n_first$0 = first_sending(pxQueue$0) & not(pxTaskToDelete: runable) & pxTaskToDelete: blocked & pxTaskToDelete: unblocked & tasks-{pxTaskToDelete}: FIN(TASK) & blocked-{pxTaskToDelete}: FIN(TASK) & blocked-{pxTaskToDelete}: POW(tasks-{pxTaskToDelete}) & unblocked-{pxTaskToDelete}: FIN(TASK) & unblocked-{pxTaskToDelete}: POW(blocked-{pxTaskToDelete}) & runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & runable/\blocked-{pxTaskToDelete} = {} & blocked-{pxTaskToDelete}/\suspended = {} & tasks-{pxTaskToDelete} = suspended\/blocked-{pxTaskToDelete}\/runable & (active = TRUE => not(runable = {}) & running: runable & idle: runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & queues = dom(queue_sending<+{pxQueue$0|->n_sending}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & first_sending<+{pxQueue$0|->n_first$0}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & dom(first_sending<+{pxQueue$0|->n_first$0}) = dom(queue_sending<+{pxQueue$0|->n_sending}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue$0|->n_first$0}) & not((queue_sending<+{pxQueue$0|->n_sending})(q1) = {}) => (first_sending<+{pxQueue$0|->n_first$0})(q1): (queue_sending<+{pxQueue$0|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & (active = TRUE => not(running: blocked & not(running = pxTaskToDelete))) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})));
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & n_receiving: POW(TASK) & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: TASK & n_first: queue_receiving(pxQueue) & pxQueue$0: queues & n_sending: POW(TASK) & n_first$0: TASK & pxTaskToDelete: queue_sending(pxQueue$0) & n_sending = queue_sending(pxQueue$0)-{first_sending(pxQueue$0)} & n_first$0 = first_sending(pxQueue$0) & not(pxTaskToDelete: runable) & pxTaskToDelete: blocked & pxTaskToDelete: unblocked & tasks-{pxTaskToDelete}: FIN(TASK) & blocked-{pxTaskToDelete}: FIN(TASK) & blocked-{pxTaskToDelete}: POW(tasks-{pxTaskToDelete}) & unblocked-{pxTaskToDelete}: FIN(TASK) & unblocked-{pxTaskToDelete}: POW(blocked-{pxTaskToDelete}) & runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & runable/\blocked-{pxTaskToDelete} = {} & blocked-{pxTaskToDelete}/\suspended = {} & tasks-{pxTaskToDelete} = suspended\/blocked-{pxTaskToDelete}\/runable & (active = TRUE => not(runable = {}) & running: runable & idle: runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & queues = dom(queue_sending<+{pxQueue$0|->n_sending}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & first_sending<+{pxQueue$0|->n_first$0}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & dom(first_sending<+{pxQueue$0|->n_first$0}) = dom(queue_sending<+{pxQueue$0|->n_sending}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue$0|->n_first$0}) & not((queue_sending<+{pxQueue$0|->n_sending})(q1) = {}) => (first_sending<+{pxQueue$0|->n_first$0})(q1): (queue_sending<+{pxQueue$0|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & (active = TRUE => not(running: blocked & not(running = pxTaskToDelete))) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & mt: mutexes);
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & n_receiving: POW(TASK) & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: TASK & n_first: queue_receiving(pxQueue) & pxQueue$0: queues & n_sending: POW(TASK) & n_first$0: TASK & pxTaskToDelete: queue_sending(pxQueue$0) & n_sending = queue_sending(pxQueue$0)-{first_sending(pxQueue$0)} & n_first$0 = first_sending(pxQueue$0) & not(pxTaskToDelete: runable) & pxTaskToDelete: blocked & pxTaskToDelete: unblocked & tasks-{pxTaskToDelete}: FIN(TASK) & blocked-{pxTaskToDelete}: FIN(TASK) & blocked-{pxTaskToDelete}: POW(tasks-{pxTaskToDelete}) & unblocked-{pxTaskToDelete}: FIN(TASK) & unblocked-{pxTaskToDelete}: POW(blocked-{pxTaskToDelete}) & runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & runable/\blocked-{pxTaskToDelete} = {} & blocked-{pxTaskToDelete}/\suspended = {} & tasks-{pxTaskToDelete} = suspended\/blocked-{pxTaskToDelete}\/runable & (active = TRUE => not(runable = {}) & running: runable & idle: runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & queues = dom(queue_sending<+{pxQueue$0|->n_sending}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & first_sending<+{pxQueue$0|->n_first$0}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & dom(first_sending<+{pxQueue$0|->n_first$0}) = dom(queue_sending<+{pxQueue$0|->n_sending}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue$0|->n_first$0}) & not((queue_sending<+{pxQueue$0|->n_sending})(q1) = {}) => (first_sending<+{pxQueue$0|->n_first$0})(q1): (queue_sending<+{pxQueue$0|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & (active = TRUE => not(running: blocked & not(running = pxTaskToDelete))) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & active = TRUE & mt: mutexes_busy);
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & n_receiving: POW(TASK) & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: TASK & n_first: queue_receiving(pxQueue) & pxQueue$0: queues & n_sending: POW(TASK) & n_first$0: TASK & pxTaskToDelete: queue_sending(pxQueue$0) & n_sending = queue_sending(pxQueue$0)-{first_sending(pxQueue$0)} & n_first$0 = first_sending(pxQueue$0) & not(pxTaskToDelete: runable) & pxTaskToDelete: blocked & pxTaskToDelete: unblocked & tasks-{pxTaskToDelete}: FIN(TASK) & blocked-{pxTaskToDelete}: FIN(TASK) & blocked-{pxTaskToDelete}: POW(tasks-{pxTaskToDelete}) & unblocked-{pxTaskToDelete}: FIN(TASK) & unblocked-{pxTaskToDelete}: POW(blocked-{pxTaskToDelete}) & runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & runable/\blocked-{pxTaskToDelete} = {} & blocked-{pxTaskToDelete}/\suspended = {} & tasks-{pxTaskToDelete} = suspended\/blocked-{pxTaskToDelete}\/runable & (active = TRUE => not(runable = {}) & running: runable & idle: runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & queues = dom(queue_sending<+{pxQueue$0|->n_sending}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & first_sending<+{pxQueue$0|->n_first$0}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & dom(first_sending<+{pxQueue$0|->n_first$0}) = dom(queue_sending<+{pxQueue$0|->n_sending}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue$0|->n_first$0}) & not((queue_sending<+{pxQueue$0|->n_sending})(q1) = {}) => (first_sending<+{pxQueue$0|->n_first$0})(q1): (queue_sending<+{pxQueue$0|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & (active = TRUE => not(running: blocked & not(running = pxTaskToDelete))) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & active = TRUE & mt: mutexes & not(mt: mutexes_busy) & mutex_holder(mt): tasks);
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & n_receiving: POW(TASK) & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: TASK & n_first: queue_receiving(pxQueue) & pxQueue$0: queues & n_sending: POW(TASK) & n_first$0: TASK & pxTaskToDelete: queue_sending(pxQueue$0) & n_sending = queue_sending(pxQueue$0)-{first_sending(pxQueue$0)} & n_first$0 = first_sending(pxQueue$0) & not(pxTaskToDelete: runable) & pxTaskToDelete: blocked & not(pxTaskToDelete: unblocked) & tasks-{pxTaskToDelete}: FIN(TASK) & blocked-{pxTaskToDelete}: FIN(TASK) & blocked-{pxTaskToDelete}: POW(tasks-{pxTaskToDelete}) & unblocked: POW(blocked-{pxTaskToDelete}) & runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & runable/\blocked-{pxTaskToDelete} = {} & blocked-{pxTaskToDelete}/\suspended = {} & tasks-{pxTaskToDelete} = suspended\/blocked-{pxTaskToDelete}\/runable & (active = TRUE => not(runable = {}) & running: runable & idle: runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & queues = dom(queue_sending<+{pxQueue$0|->n_sending}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & first_sending<+{pxQueue$0|->n_first$0}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & dom(first_sending<+{pxQueue$0|->n_first$0}) = dom(queue_sending<+{pxQueue$0|->n_sending}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue$0|->n_first$0}) & not((queue_sending<+{pxQueue$0|->n_sending})(q1) = {}) => (first_sending<+{pxQueue$0|->n_first$0})(q1): (queue_sending<+{pxQueue$0|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & (active = TRUE => not(running: blocked & not(running = pxTaskToDelete))) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & que: queues);
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & n_receiving: POW(TASK) & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: TASK & n_first: queue_receiving(pxQueue) & pxQueue$0: queues & n_sending: POW(TASK) & n_first$0: TASK & pxTaskToDelete: queue_sending(pxQueue$0) & n_sending = queue_sending(pxQueue$0)-{first_sending(pxQueue$0)} & n_first$0 = first_sending(pxQueue$0) & not(pxTaskToDelete: runable) & pxTaskToDelete: blocked & not(pxTaskToDelete: unblocked) & tasks-{pxTaskToDelete}: FIN(TASK) & blocked-{pxTaskToDelete}: FIN(TASK) & blocked-{pxTaskToDelete}: POW(tasks-{pxTaskToDelete}) & unblocked: POW(blocked-{pxTaskToDelete}) & runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & runable/\blocked-{pxTaskToDelete} = {} & blocked-{pxTaskToDelete}/\suspended = {} & tasks-{pxTaskToDelete} = suspended\/blocked-{pxTaskToDelete}\/runable & (active = TRUE => not(runable = {}) & running: runable & idle: runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & queues = dom(queue_sending<+{pxQueue$0|->n_sending}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & first_sending<+{pxQueue$0|->n_first$0}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & dom(first_sending<+{pxQueue$0|->n_first$0}) = dom(queue_sending<+{pxQueue$0|->n_sending}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue$0|->n_first$0}) & not((queue_sending<+{pxQueue$0|->n_sending})(q1) = {}) => (first_sending<+{pxQueue$0|->n_first$0})(q1): (queue_sending<+{pxQueue$0|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & (active = TRUE => not(running: blocked & not(running = pxTaskToDelete))) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})));
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & n_receiving: POW(TASK) & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: TASK & n_first: queue_receiving(pxQueue) & pxQueue$0: queues & n_sending: POW(TASK) & n_first$0: TASK & pxTaskToDelete: queue_sending(pxQueue$0) & n_sending = queue_sending(pxQueue$0)-{first_sending(pxQueue$0)} & n_first$0 = first_sending(pxQueue$0) & not(pxTaskToDelete: runable) & pxTaskToDelete: blocked & not(pxTaskToDelete: unblocked) & tasks-{pxTaskToDelete}: FIN(TASK) & blocked-{pxTaskToDelete}: FIN(TASK) & blocked-{pxTaskToDelete}: POW(tasks-{pxTaskToDelete}) & unblocked: POW(blocked-{pxTaskToDelete}) & runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & runable/\blocked-{pxTaskToDelete} = {} & blocked-{pxTaskToDelete}/\suspended = {} & tasks-{pxTaskToDelete} = suspended\/blocked-{pxTaskToDelete}\/runable & (active = TRUE => not(runable = {}) & running: runable & idle: runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & queues = dom(queue_sending<+{pxQueue$0|->n_sending}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & first_sending<+{pxQueue$0|->n_first$0}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & dom(first_sending<+{pxQueue$0|->n_first$0}) = dom(queue_sending<+{pxQueue$0|->n_sending}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue$0|->n_first$0}) & not((queue_sending<+{pxQueue$0|->n_sending})(q1) = {}) => (first_sending<+{pxQueue$0|->n_first$0})(q1): (queue_sending<+{pxQueue$0|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & (active = TRUE => not(running: blocked & not(running = pxTaskToDelete))) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & mt: mutexes);
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & n_receiving: POW(TASK) & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: TASK & n_first: queue_receiving(pxQueue) & pxQueue$0: queues & n_sending: POW(TASK) & n_first$0: TASK & pxTaskToDelete: queue_sending(pxQueue$0) & n_sending = queue_sending(pxQueue$0)-{first_sending(pxQueue$0)} & n_first$0 = first_sending(pxQueue$0) & not(pxTaskToDelete: runable) & pxTaskToDelete: blocked & not(pxTaskToDelete: unblocked) & tasks-{pxTaskToDelete}: FIN(TASK) & blocked-{pxTaskToDelete}: FIN(TASK) & blocked-{pxTaskToDelete}: POW(tasks-{pxTaskToDelete}) & unblocked: POW(blocked-{pxTaskToDelete}) & runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & runable/\blocked-{pxTaskToDelete} = {} & blocked-{pxTaskToDelete}/\suspended = {} & tasks-{pxTaskToDelete} = suspended\/blocked-{pxTaskToDelete}\/runable & (active = TRUE => not(runable = {}) & running: runable & idle: runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & queues = dom(queue_sending<+{pxQueue$0|->n_sending}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & first_sending<+{pxQueue$0|->n_first$0}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & dom(first_sending<+{pxQueue$0|->n_first$0}) = dom(queue_sending<+{pxQueue$0|->n_sending}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue$0|->n_first$0}) & not((queue_sending<+{pxQueue$0|->n_sending})(q1) = {}) => (first_sending<+{pxQueue$0|->n_first$0})(q1): (queue_sending<+{pxQueue$0|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & (active = TRUE => not(running: blocked & not(running = pxTaskToDelete))) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & active = TRUE & mt: mutexes_busy);
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & n_receiving: POW(TASK) & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: TASK & n_first: queue_receiving(pxQueue) & pxQueue$0: queues & n_sending: POW(TASK) & n_first$0: TASK & pxTaskToDelete: queue_sending(pxQueue$0) & n_sending = queue_sending(pxQueue$0)-{first_sending(pxQueue$0)} & n_first$0 = first_sending(pxQueue$0) & not(pxTaskToDelete: runable) & pxTaskToDelete: blocked & not(pxTaskToDelete: unblocked) & tasks-{pxTaskToDelete}: FIN(TASK) & blocked-{pxTaskToDelete}: FIN(TASK) & blocked-{pxTaskToDelete}: POW(tasks-{pxTaskToDelete}) & unblocked: POW(blocked-{pxTaskToDelete}) & runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & runable/\blocked-{pxTaskToDelete} = {} & blocked-{pxTaskToDelete}/\suspended = {} & tasks-{pxTaskToDelete} = suspended\/blocked-{pxTaskToDelete}\/runable & (active = TRUE => not(runable = {}) & running: runable & idle: runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & queues = dom(queue_sending<+{pxQueue$0|->n_sending}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & first_sending<+{pxQueue$0|->n_first$0}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & dom(first_sending<+{pxQueue$0|->n_first$0}) = dom(queue_sending<+{pxQueue$0|->n_sending}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue$0|->n_first$0}) & not((queue_sending<+{pxQueue$0|->n_sending})(q1) = {}) => (first_sending<+{pxQueue$0|->n_first$0})(q1): (queue_sending<+{pxQueue$0|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & (active = TRUE => not(running: blocked & not(running = pxTaskToDelete))) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & active = TRUE & mt: mutexes & not(mt: mutexes_busy) & mutex_holder(mt): tasks);
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & n_receiving: POW(TASK) & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: TASK & n_first: queue_receiving(pxQueue) & pxQueue$0: queues & n_sending: POW(TASK) & n_first$0: TASK & pxTaskToDelete: queue_sending(pxQueue$0) & n_sending = queue_sending(pxQueue$0)-{first_sending(pxQueue$0)} & n_first$0 = first_sending(pxQueue$0) & not(pxTaskToDelete: runable) & not(pxTaskToDelete: blocked) & pxTaskToDelete: suspended & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & runable: POW(tasks-{pxTaskToDelete}) & suspended-{pxTaskToDelete}: FIN(TASK) & suspended-{pxTaskToDelete}: POW(tasks-{pxTaskToDelete}) & blocked/\suspended-{pxTaskToDelete} = {} & suspended-{pxTaskToDelete}/\runable = {} & tasks-{pxTaskToDelete} = suspended-{pxTaskToDelete}\/blocked\/runable & (active = TRUE => not(runable = {}) & running: runable & idle: runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & queues = dom(queue_sending<+{pxQueue$0|->n_sending}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & first_sending<+{pxQueue$0|->n_first$0}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & dom(first_sending<+{pxQueue$0|->n_first$0}) = dom(queue_sending<+{pxQueue$0|->n_sending}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue$0|->n_first$0}) & not((queue_sending<+{pxQueue$0|->n_sending})(q1) = {}) => (first_sending<+{pxQueue$0|->n_first$0})(q1): (queue_sending<+{pxQueue$0|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & (active = TRUE => not(running: suspended & not(running = pxTaskToDelete))) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & que: queues);
  ((queue_sending<+{pxQueue$0|->n_sending})(que): POW(blocked\/suspended-{pxTaskToDelete}));
  ((queue_receiving<+{pxQueue|->n_receiving})(que): POW(blocked\/suspended-{pxTaskToDelete}));
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & n_receiving: POW(TASK) & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: TASK & n_first: queue_receiving(pxQueue) & pxQueue$0: queues & n_sending: POW(TASK) & n_first$0: TASK & pxTaskToDelete: queue_sending(pxQueue$0) & n_sending = queue_sending(pxQueue$0)-{first_sending(pxQueue$0)} & n_first$0 = first_sending(pxQueue$0) & not(pxTaskToDelete: runable) & not(pxTaskToDelete: blocked) & pxTaskToDelete: suspended & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & runable: POW(tasks-{pxTaskToDelete}) & suspended-{pxTaskToDelete}: FIN(TASK) & suspended-{pxTaskToDelete}: POW(tasks-{pxTaskToDelete}) & blocked/\suspended-{pxTaskToDelete} = {} & suspended-{pxTaskToDelete}/\runable = {} & tasks-{pxTaskToDelete} = suspended-{pxTaskToDelete}\/blocked\/runable & (active = TRUE => not(runable = {}) & running: runable & idle: runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & queues = dom(queue_sending<+{pxQueue$0|->n_sending}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & first_sending<+{pxQueue$0|->n_first$0}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & dom(first_sending<+{pxQueue$0|->n_first$0}) = dom(queue_sending<+{pxQueue$0|->n_sending}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue$0|->n_first$0}) & not((queue_sending<+{pxQueue$0|->n_sending})(q1) = {}) => (first_sending<+{pxQueue$0|->n_first$0})(q1): (queue_sending<+{pxQueue$0|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & (active = TRUE => not(running: suspended & not(running = pxTaskToDelete))) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})));
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & n_receiving: POW(TASK) & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: TASK & n_first: queue_receiving(pxQueue) & pxQueue$0: queues & n_sending: POW(TASK) & n_first$0: TASK & pxTaskToDelete: queue_sending(pxQueue$0) & n_sending = queue_sending(pxQueue$0)-{first_sending(pxQueue$0)} & n_first$0 = first_sending(pxQueue$0) & not(pxTaskToDelete: runable) & not(pxTaskToDelete: blocked) & pxTaskToDelete: suspended & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & runable: POW(tasks-{pxTaskToDelete}) & suspended-{pxTaskToDelete}: FIN(TASK) & suspended-{pxTaskToDelete}: POW(tasks-{pxTaskToDelete}) & blocked/\suspended-{pxTaskToDelete} = {} & suspended-{pxTaskToDelete}/\runable = {} & tasks-{pxTaskToDelete} = suspended-{pxTaskToDelete}\/blocked\/runable & (active = TRUE => not(runable = {}) & running: runable & idle: runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & queues = dom(queue_sending<+{pxQueue$0|->n_sending}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & first_sending<+{pxQueue$0|->n_first$0}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & dom(first_sending<+{pxQueue$0|->n_first$0}) = dom(queue_sending<+{pxQueue$0|->n_sending}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue$0|->n_first$0}) & not((queue_sending<+{pxQueue$0|->n_sending})(q1) = {}) => (first_sending<+{pxQueue$0|->n_first$0})(q1): (queue_sending<+{pxQueue$0|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & (active = TRUE => not(running: suspended & not(running = pxTaskToDelete))) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & mt: mutexes);
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & n_receiving: POW(TASK) & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: TASK & n_first: queue_receiving(pxQueue) & pxQueue$0: queues & n_sending: POW(TASK) & n_first$0: TASK & pxTaskToDelete: queue_sending(pxQueue$0) & n_sending = queue_sending(pxQueue$0)-{first_sending(pxQueue$0)} & n_first$0 = first_sending(pxQueue$0) & not(pxTaskToDelete: runable) & not(pxTaskToDelete: blocked) & pxTaskToDelete: suspended & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & runable: POW(tasks-{pxTaskToDelete}) & suspended-{pxTaskToDelete}: FIN(TASK) & suspended-{pxTaskToDelete}: POW(tasks-{pxTaskToDelete}) & blocked/\suspended-{pxTaskToDelete} = {} & suspended-{pxTaskToDelete}/\runable = {} & tasks-{pxTaskToDelete} = suspended-{pxTaskToDelete}\/blocked\/runable & (active = TRUE => not(runable = {}) & running: runable & idle: runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & queues = dom(queue_sending<+{pxQueue$0|->n_sending}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & first_sending<+{pxQueue$0|->n_first$0}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & dom(first_sending<+{pxQueue$0|->n_first$0}) = dom(queue_sending<+{pxQueue$0|->n_sending}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue$0|->n_first$0}) & not((queue_sending<+{pxQueue$0|->n_sending})(q1) = {}) => (first_sending<+{pxQueue$0|->n_first$0})(q1): (queue_sending<+{pxQueue$0|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & (active = TRUE => not(running: suspended & not(running = pxTaskToDelete))) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & active = TRUE & mt: mutexes_busy);
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & n_receiving: POW(TASK) & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: TASK & n_first: queue_receiving(pxQueue) & pxQueue$0: queues & n_sending: POW(TASK) & n_first$0: TASK & pxTaskToDelete: queue_sending(pxQueue$0) & n_sending = queue_sending(pxQueue$0)-{first_sending(pxQueue$0)} & n_first$0 = first_sending(pxQueue$0) & not(pxTaskToDelete: runable) & not(pxTaskToDelete: blocked) & pxTaskToDelete: suspended & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & runable: POW(tasks-{pxTaskToDelete}) & suspended-{pxTaskToDelete}: FIN(TASK) & suspended-{pxTaskToDelete}: POW(tasks-{pxTaskToDelete}) & blocked/\suspended-{pxTaskToDelete} = {} & suspended-{pxTaskToDelete}/\runable = {} & tasks-{pxTaskToDelete} = suspended-{pxTaskToDelete}\/blocked\/runable & (active = TRUE => not(runable = {}) & running: runable & idle: runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & queues = dom(queue_sending<+{pxQueue$0|->n_sending}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & first_sending<+{pxQueue$0|->n_first$0}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & dom(first_sending<+{pxQueue$0|->n_first$0}) = dom(queue_sending<+{pxQueue$0|->n_sending}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue$0|->n_first$0}) & not((queue_sending<+{pxQueue$0|->n_sending})(q1) = {}) => (first_sending<+{pxQueue$0|->n_first$0})(q1): (queue_sending<+{pxQueue$0|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & (active = TRUE => not(running: suspended & not(running = pxTaskToDelete))) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & active = TRUE & mt: mutexes & not(mt: mutexes_busy) & mutex_holder(mt): tasks);
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & n_receiving: POW(TASK) & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: TASK & n_first: queue_receiving(pxQueue) & pxQueue$0: queues & n_sending: POW(TASK) & n_first$0: TASK & pxTaskToDelete: queue_sending(pxQueue$0) & n_sending = queue_sending(pxQueue$0)-{first_sending(pxQueue$0)} & n_first$0 = first_sending(pxQueue$0) & not(pxTaskToDelete: runable) & not(pxTaskToDelete: blocked) & not(pxTaskToDelete: suspended) & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & tasks-{pxTaskToDelete} = suspended\/blocked\/runable & (active = TRUE => not(runable = {}) & running: runable & idle: runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & queues = dom(queue_sending<+{pxQueue$0|->n_sending}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & first_sending<+{pxQueue$0|->n_first$0}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & dom(first_sending<+{pxQueue$0|->n_first$0}) = dom(queue_sending<+{pxQueue$0|->n_sending}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue$0|->n_first$0}) & not((queue_sending<+{pxQueue$0|->n_sending})(q1) = {}) => (first_sending<+{pxQueue$0|->n_first$0})(q1): (queue_sending<+{pxQueue$0|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & que: queues);
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & n_receiving: POW(TASK) & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: TASK & n_first: queue_receiving(pxQueue) & pxQueue$0: queues & n_sending: POW(TASK) & n_first$0: TASK & pxTaskToDelete: queue_sending(pxQueue$0) & n_sending = queue_sending(pxQueue$0)-{first_sending(pxQueue$0)} & n_first$0 = first_sending(pxQueue$0) & not(pxTaskToDelete: runable) & not(pxTaskToDelete: blocked) & not(pxTaskToDelete: suspended) & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & tasks-{pxTaskToDelete} = suspended\/blocked\/runable & (active = TRUE => not(runable = {}) & running: runable & idle: runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & queues = dom(queue_sending<+{pxQueue$0|->n_sending}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & first_sending<+{pxQueue$0|->n_first$0}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & dom(first_sending<+{pxQueue$0|->n_first$0}) = dom(queue_sending<+{pxQueue$0|->n_sending}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue$0|->n_first$0}) & not((queue_sending<+{pxQueue$0|->n_sending})(q1) = {}) => (first_sending<+{pxQueue$0|->n_first$0})(q1): (queue_sending<+{pxQueue$0|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})));
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & n_receiving: POW(TASK) & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: TASK & n_first: queue_receiving(pxQueue) & pxQueue$0: queues & n_sending: POW(TASK) & n_first$0: TASK & pxTaskToDelete: queue_sending(pxQueue$0) & n_sending = queue_sending(pxQueue$0)-{first_sending(pxQueue$0)} & n_first$0 = first_sending(pxQueue$0) & not(pxTaskToDelete: runable) & not(pxTaskToDelete: blocked) & not(pxTaskToDelete: suspended) & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & tasks-{pxTaskToDelete} = suspended\/blocked\/runable & (active = TRUE => not(runable = {}) & running: runable & idle: runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & queues = dom(queue_sending<+{pxQueue$0|->n_sending}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & first_sending<+{pxQueue$0|->n_first$0}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & dom(first_sending<+{pxQueue$0|->n_first$0}) = dom(queue_sending<+{pxQueue$0|->n_sending}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue$0|->n_first$0}) & not((queue_sending<+{pxQueue$0|->n_sending})(q1) = {}) => (first_sending<+{pxQueue$0|->n_first$0})(q1): (queue_sending<+{pxQueue$0|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & mt: mutexes);
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & n_receiving: POW(TASK) & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: TASK & n_first: queue_receiving(pxQueue) & pxQueue$0: queues & n_sending: POW(TASK) & n_first$0: TASK & pxTaskToDelete: queue_sending(pxQueue$0) & n_sending = queue_sending(pxQueue$0)-{first_sending(pxQueue$0)} & n_first$0 = first_sending(pxQueue$0) & not(pxTaskToDelete: runable) & not(pxTaskToDelete: blocked) & not(pxTaskToDelete: suspended) & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & tasks-{pxTaskToDelete} = suspended\/blocked\/runable & (active = TRUE => not(runable = {}) & running: runable & idle: runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & queues = dom(queue_sending<+{pxQueue$0|->n_sending}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & first_sending<+{pxQueue$0|->n_first$0}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & dom(first_sending<+{pxQueue$0|->n_first$0}) = dom(queue_sending<+{pxQueue$0|->n_sending}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue$0|->n_first$0}) & not((queue_sending<+{pxQueue$0|->n_sending})(q1) = {}) => (first_sending<+{pxQueue$0|->n_first$0})(q1): (queue_sending<+{pxQueue$0|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & active = TRUE & mt: mutexes_busy);
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & n_receiving: POW(TASK) & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: TASK & n_first: queue_receiving(pxQueue) & pxQueue$0: queues & n_sending: POW(TASK) & n_first$0: TASK & pxTaskToDelete: queue_sending(pxQueue$0) & n_sending = queue_sending(pxQueue$0)-{first_sending(pxQueue$0)} & n_first$0 = first_sending(pxQueue$0) & not(pxTaskToDelete: runable) & not(pxTaskToDelete: blocked) & not(pxTaskToDelete: suspended) & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & tasks-{pxTaskToDelete} = suspended\/blocked\/runable & (active = TRUE => not(runable = {}) & running: runable & idle: runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & queues = dom(queue_sending<+{pxQueue$0|->n_sending}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & first_sending<+{pxQueue$0|->n_first$0}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & dom(first_sending<+{pxQueue$0|->n_first$0}) = dom(queue_sending<+{pxQueue$0|->n_sending}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue$0|->n_first$0}) & not((queue_sending<+{pxQueue$0|->n_sending})(q1) = {}) => (first_sending<+{pxQueue$0|->n_first$0})(q1): (queue_sending<+{pxQueue$0|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & active = TRUE & mt: mutexes & not(mt: mutexes_busy) & mutex_holder(mt): tasks);
  ("`vTaskEndScheduler preconditions in this component'" & active = TRUE);
  ("`Local hypotheses'" & {}: FIN(TASK) & {}: POW({}) & {}: POW(QUEUE) & {}: QUEUE +-> POW(TASK) & dom({}) = {} & {}: QUEUE +-> TASK & {}: QUEUE +-> POW(ITEM));
  ("`vTaskResume preconditions in this component'" & INCLUDE_vTaskSuspend = 1 & not(suspended = {}) & pxTaskToResume: TASK & pxTaskToResume: suspended & active = TRUE);
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToResume: queue_receiving(pxQueue) & n_receiving: POW(TASK) & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: TASK & n_first: queue_receiving(pxQueue) & pxQueue$0: queues & n_sending: POW(TASK) & n_first$0: TASK & pxTaskToResume: queue_sending(pxQueue$0) & n_sending = queue_sending(pxQueue$0)-{first_sending(pxQueue$0)} & n_first$0 = first_sending(pxQueue$0) & n_runable: POW(tasks) & n_runable = runable\/{pxTaskToResume} & running$0: n_runable & n_runable: FIN(TASK) & suspended-{pxTaskToResume}: FIN(TASK) & suspended-{pxTaskToResume}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{pxTaskToResume} = {} & suspended-{pxTaskToResume}/\n_runable = {} & tasks = suspended-{pxTaskToResume}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & queues = dom(queue_sending<+{pxQueue$0|->n_sending}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & first_sending<+{pxQueue$0|->n_first$0}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & dom(first_sending<+{pxQueue$0|->n_first$0}) = dom(queue_sending<+{pxQueue$0|->n_sending}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue$0|->n_first$0}) & not((queue_sending<+{pxQueue$0|->n_sending})(q1) = {}) => (first_sending<+{pxQueue$0|->n_first$0})(q1): (queue_sending<+{pxQueue$0|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = pxTaskToResume))) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = pxTaskToResume))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ((queue_sending<+{pxQueue$0|->n_sending})(que): POW(blocked\/suspended-{pxTaskToResume}));
  ((queue_receiving<+{pxQueue|->n_receiving})(que): POW(blocked\/suspended-{pxTaskToResume}));
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToResume: queue_receiving(pxQueue) & n_receiving: POW(TASK) & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: TASK & n_first: queue_receiving(pxQueue) & pxQueue$0: queues & n_sending: POW(TASK) & n_first$0: TASK & pxTaskToResume: queue_sending(pxQueue$0) & n_sending = queue_sending(pxQueue$0)-{first_sending(pxQueue$0)} & n_first$0 = first_sending(pxQueue$0) & n_runable: POW(tasks) & n_runable = runable\/{pxTaskToResume} & running$0: n_runable & n_runable: FIN(TASK) & suspended-{pxTaskToResume}: FIN(TASK) & suspended-{pxTaskToResume}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{pxTaskToResume} = {} & suspended-{pxTaskToResume}/\n_runable = {} & tasks = suspended-{pxTaskToResume}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & queues = dom(queue_sending<+{pxQueue$0|->n_sending}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & first_sending<+{pxQueue$0|->n_first$0}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & dom(first_sending<+{pxQueue$0|->n_first$0}) = dom(queue_sending<+{pxQueue$0|->n_sending}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue$0|->n_first$0}) & not((queue_sending<+{pxQueue$0|->n_sending})(q1) = {}) => (first_sending<+{pxQueue$0|->n_first$0})(q1): (queue_sending<+{pxQueue$0|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = pxTaskToResume))) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = pxTaskToResume))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToResume: queue_receiving(pxQueue) & n_receiving: POW(TASK) & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: TASK & n_first: queue_receiving(pxQueue) & pxQueue$0: queues & n_sending: POW(TASK) & n_first$0: TASK & pxTaskToResume: queue_sending(pxQueue$0) & n_sending = queue_sending(pxQueue$0)-{first_sending(pxQueue$0)} & n_first$0 = first_sending(pxQueue$0) & n_runable: POW(tasks) & n_runable = runable\/{pxTaskToResume} & n_runable: FIN(TASK) & suspended-{pxTaskToResume}: FIN(TASK) & suspended-{pxTaskToResume}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{pxTaskToResume} = {} & suspended-{pxTaskToResume}/\n_runable = {} & tasks = suspended-{pxTaskToResume}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & queues = dom(queue_sending<+{pxQueue$0|->n_sending}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & first_sending<+{pxQueue$0|->n_first$0}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & dom(first_sending<+{pxQueue$0|->n_first$0}) = dom(queue_sending<+{pxQueue$0|->n_sending}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue$0|->n_first$0}) & not((queue_sending<+{pxQueue$0|->n_sending})(q1) = {}) => (first_sending<+{pxQueue$0|->n_first$0})(q1): (queue_sending<+{pxQueue$0|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & (active = TRUE => not(running: suspended & not(running = pxTaskToResume))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = pxTaskToResume))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToResume: queue_receiving(pxQueue) & n_receiving: POW(TASK) & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: TASK & n_first: queue_receiving(pxQueue) & pxQueue$0: queues & n_sending: POW(TASK) & n_first$0: TASK & pxTaskToResume: queue_sending(pxQueue$0) & n_sending = queue_sending(pxQueue$0)-{first_sending(pxQueue$0)} & n_first$0 = first_sending(pxQueue$0) & n_runable: POW(tasks) & n_runable = runable\/{pxTaskToResume} & n_runable: FIN(TASK) & suspended-{pxTaskToResume}: FIN(TASK) & suspended-{pxTaskToResume}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{pxTaskToResume} = {} & suspended-{pxTaskToResume}/\n_runable = {} & tasks = suspended-{pxTaskToResume}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & queues = dom(queue_sending<+{pxQueue$0|->n_sending}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & first_sending<+{pxQueue$0|->n_first$0}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & dom(first_sending<+{pxQueue$0|->n_first$0}) = dom(queue_sending<+{pxQueue$0|->n_sending}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue$0|->n_first$0}) & not((queue_sending<+{pxQueue$0|->n_sending})(q1) = {}) => (first_sending<+{pxQueue$0|->n_first$0})(q1): (queue_sending<+{pxQueue$0|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & (active = TRUE => not(running: suspended & not(running = pxTaskToResume))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = pxTaskToResume))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`xTaskResumeAll preconditions in this component'" & active = FALSE);
  "`Check preconditions of called operation, or While loop construction, or Assert predicates'";
  (unblocked: POW(TASK));
  ("`Local hypotheses'" & not(queue_sending = {}) & n_sending: QUEUE +-> POW(TASK) & dom(n_sending) = dom(queue_sending) & n_sending = remove_task(queue_sending,unblocked) & n_first: QUEUE +-> TASK & dom(n_first) = dom(first_sending) & !q1.(q1: queues & q1: dom(n_first) & not(n_sending(q1) = {}) => n_first(q1): n_sending(q1)) & not(queue_receiving = {}) & n_receiving: QUEUE +-> POW(TASK) & dom(n_receiving) = dom(queue_receiving) & n_receiving = remove_task(queue_receiving,unblocked) & n_first$0: QUEUE +-> TASK & dom(n_first$0) = dom(first_receiving) & !q1.(q1: queues & q1: dom(n_first$0) & not(n_receiving(q1) = {}) => n_first$0(q1): n_receiving(q1)) & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & running$0: n_runable & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & {}: FIN(TASK) & {}: POW(blocked-unblocked) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queues = dom(n_receiving) & queues = dom(n_sending) & dom(n_first$0) = dom(n_receiving) & dom(n_first) = dom(n_sending) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: n_receiving(q1) => not(tk: n_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: n_sending(q2) => not(tk: n_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: n_receiving(q1) => not(tk: n_receiving(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: n_sending(q1) => not(tk: n_sending(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0: unblocked))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  "`Check that the invariant (!que.(que: queues => queue_sending(que) <: blocked\/suspended)) is preserved by the operation - ref 3.4'";
  (n_sending(que): POW(blocked-unblocked\/suspended));
  "`Check that the invariant (!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) is preserved by the operation - ref 3.4'";
  (n_receiving(que): POW(blocked-unblocked\/suspended));
  ("`Local hypotheses'" & not(queue_sending = {}) & n_sending: QUEUE +-> POW(TASK) & dom(n_sending) = dom(queue_sending) & n_sending = remove_task(queue_sending,unblocked) & n_first: QUEUE +-> TASK & dom(n_first) = dom(first_sending) & !q1.(q1: queues & q1: dom(n_first) & not(n_sending(q1) = {}) => n_first(q1): n_sending(q1)) & not(queue_receiving = {}) & n_receiving: QUEUE +-> POW(TASK) & dom(n_receiving) = dom(queue_receiving) & n_receiving = remove_task(queue_receiving,unblocked) & n_first$0: QUEUE +-> TASK & dom(n_first$0) = dom(first_receiving) & !q1.(q1: queues & q1: dom(n_first$0) & not(n_receiving(q1) = {}) => n_first$0(q1): n_receiving(q1)) & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & running$0: n_runable & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & {}: FIN(TASK) & {}: POW(blocked-unblocked) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queues = dom(n_receiving) & queues = dom(n_sending) & dom(n_first$0) = dom(n_receiving) & dom(n_first) = dom(n_sending) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: n_receiving(q1) => not(tk: n_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: n_sending(q2) => not(tk: n_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: n_receiving(q1) => not(tk: n_receiving(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: n_sending(q1) => not(tk: n_sending(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0: unblocked))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  "`Check that the invariant (!mt.(mt: mutexes => queue_sending(mt) = {})) is preserved by the operation - ref 3.4'";
  (n_sending(mt) = {});
  ("`Local hypotheses'" & not(queue_sending = {}) & n_sending: QUEUE +-> POW(TASK) & dom(n_sending) = dom(queue_sending) & n_sending = remove_task(queue_sending,unblocked) & n_first: QUEUE +-> TASK & dom(n_first) = dom(first_sending) & !q1.(q1: queues & q1: dom(n_first) & not(n_sending(q1) = {}) => n_first(q1): n_sending(q1)) & not(queue_receiving = {}) & n_receiving: QUEUE +-> POW(TASK) & dom(n_receiving) = dom(queue_receiving) & n_receiving = remove_task(queue_receiving,unblocked) & n_first$0: QUEUE +-> TASK & dom(n_first$0) = dom(first_receiving) & !q1.(q1: queues & q1: dom(n_first$0) & not(n_receiving(q1) = {}) => n_first$0(q1): n_receiving(q1)) & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & {}: FIN(TASK) & {}: POW(blocked-unblocked) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queues = dom(n_receiving) & queues = dom(n_sending) & dom(n_first$0) = dom(n_receiving) & dom(n_first) = dom(n_sending) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: n_receiving(q1) => not(tk: n_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: n_sending(q2) => not(tk: n_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: n_receiving(q1) => not(tk: n_receiving(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: n_sending(q1) => not(tk: n_sending(q2))) & (active = TRUE => not(running: blocked & not(running: unblocked))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(queue_sending = {}) & n_sending: QUEUE +-> POW(TASK) & dom(n_sending) = dom(queue_sending) & n_sending = remove_task(queue_sending,unblocked) & n_first: QUEUE +-> TASK & dom(n_first) = dom(first_sending) & !q1.(q1: queues & q1: dom(n_first) & not(n_sending(q1) = {}) => n_first(q1): n_sending(q1)) & not(queue_receiving = {}) & n_receiving: QUEUE +-> POW(TASK) & dom(n_receiving) = dom(queue_receiving) & n_receiving = remove_task(queue_receiving,unblocked) & n_first$0: QUEUE +-> TASK & dom(n_first$0) = dom(first_receiving) & !q1.(q1: queues & q1: dom(n_first$0) & not(n_receiving(q1) = {}) => n_first$0(q1): n_receiving(q1)) & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & {}: FIN(TASK) & {}: POW(blocked-unblocked) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queues = dom(n_receiving) & queues = dom(n_sending) & dom(n_first$0) = dom(n_receiving) & dom(n_first) = dom(n_sending) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: n_receiving(q1) => not(tk: n_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: n_sending(q2) => not(tk: n_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: n_receiving(q1) => not(tk: n_receiving(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: n_sending(q1) => not(tk: n_sending(q2))) & (active = TRUE => not(running: blocked & not(running: unblocked))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(queue_sending = {}) & n_sending: QUEUE +-> POW(TASK) & dom(n_sending) = dom(queue_sending) & n_sending = remove_task(queue_sending,unblocked) & n_first: QUEUE +-> TASK & dom(n_first) = dom(first_sending) & !q1.(q1: queues & q1: dom(n_first) & not(n_sending(q1) = {}) => n_first(q1): n_sending(q1)) & not(queue_receiving = {}) & n_receiving: QUEUE +-> POW(TASK) & dom(n_receiving) = dom(queue_receiving) & n_receiving = remove_task(queue_receiving,unblocked) & n_first$0: QUEUE +-> TASK & dom(n_first$0) = dom(first_receiving) & !q1.(q1: queues & q1: dom(n_first$0) & not(n_receiving(q1) = {}) => n_first$0(q1): n_receiving(q1)) & unblocked = {} & queues = dom(n_receiving) & queues = dom(n_sending) & dom(n_first$0) = dom(n_receiving) & dom(n_first) = dom(n_sending) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: n_receiving(q1) => not(tk: n_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: n_sending(q2) => not(tk: n_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: n_receiving(q1) => not(tk: n_receiving(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: n_sending(q1) => not(tk: n_sending(q2))) & que: queues);
  (n_sending(que): POW(blocked\/suspended));
  (n_receiving(que): POW(blocked\/suspended));
  ("`Local hypotheses'" & not(queue_sending = {}) & n_sending: QUEUE +-> POW(TASK) & dom(n_sending) = dom(queue_sending) & n_sending = remove_task(queue_sending,unblocked) & n_first: QUEUE +-> TASK & dom(n_first) = dom(first_sending) & !q1.(q1: queues & q1: dom(n_first) & not(n_sending(q1) = {}) => n_first(q1): n_sending(q1)) & not(queue_receiving = {}) & n_receiving: QUEUE +-> POW(TASK) & dom(n_receiving) = dom(queue_receiving) & n_receiving = remove_task(queue_receiving,unblocked) & n_first$0: QUEUE +-> TASK & dom(n_first$0) = dom(first_receiving) & !q1.(q1: queues & q1: dom(n_first$0) & not(n_receiving(q1) = {}) => n_first$0(q1): n_receiving(q1)) & unblocked = {} & queues = dom(n_receiving) & queues = dom(n_sending) & dom(n_first$0) = dom(n_receiving) & dom(n_first) = dom(n_sending) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: n_receiving(q1) => not(tk: n_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: n_sending(q2) => not(tk: n_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: n_receiving(q1) => not(tk: n_receiving(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: n_sending(q1) => not(tk: n_sending(q2))) & mt: mutexes);
  ("`Local hypotheses'" & not(queue_sending = {}) & n_sending: QUEUE +-> POW(TASK) & dom(n_sending) = dom(queue_sending) & n_sending = remove_task(queue_sending,unblocked) & n_first: QUEUE +-> TASK & dom(n_first) = dom(first_sending) & !q1.(q1: queues & q1: dom(n_first) & not(n_sending(q1) = {}) => n_first(q1): n_sending(q1)) & queue_receiving = {} & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & running$0: n_runable & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & {}: FIN(TASK) & {}: POW(blocked-unblocked) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queues = dom(n_sending) & dom(n_first) = dom(n_sending) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: n_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: n_sending(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: n_sending(q1) => not(tk: n_sending(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0: unblocked))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  (queue_receiving(que): POW(blocked-unblocked\/suspended));
  ("`Local hypotheses'" & not(queue_sending = {}) & n_sending: QUEUE +-> POW(TASK) & dom(n_sending) = dom(queue_sending) & n_sending = remove_task(queue_sending,unblocked) & n_first: QUEUE +-> TASK & dom(n_first) = dom(first_sending) & !q1.(q1: queues & q1: dom(n_first) & not(n_sending(q1) = {}) => n_first(q1): n_sending(q1)) & queue_receiving = {} & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & running$0: n_runable & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & {}: FIN(TASK) & {}: POW(blocked-unblocked) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queues = dom(n_sending) & dom(n_first) = dom(n_sending) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: n_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: n_sending(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: n_sending(q1) => not(tk: n_sending(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0: unblocked))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(queue_sending = {}) & n_sending: QUEUE +-> POW(TASK) & dom(n_sending) = dom(queue_sending) & n_sending = remove_task(queue_sending,unblocked) & n_first: QUEUE +-> TASK & dom(n_first) = dom(first_sending) & !q1.(q1: queues & q1: dom(n_first) & not(n_sending(q1) = {}) => n_first(q1): n_sending(q1)) & queue_receiving = {} & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & {}: FIN(TASK) & {}: POW(blocked-unblocked) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queues = dom(n_sending) & dom(n_first) = dom(n_sending) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: n_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: n_sending(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: n_sending(q1) => not(tk: n_sending(q2))) & (active = TRUE => not(running: blocked & not(running: unblocked))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(queue_sending = {}) & n_sending: QUEUE +-> POW(TASK) & dom(n_sending) = dom(queue_sending) & n_sending = remove_task(queue_sending,unblocked) & n_first: QUEUE +-> TASK & dom(n_first) = dom(first_sending) & !q1.(q1: queues & q1: dom(n_first) & not(n_sending(q1) = {}) => n_first(q1): n_sending(q1)) & queue_receiving = {} & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & {}: FIN(TASK) & {}: POW(blocked-unblocked) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queues = dom(n_sending) & dom(n_first) = dom(n_sending) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: n_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: n_sending(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: n_sending(q1) => not(tk: n_sending(q2))) & (active = TRUE => not(running: blocked & not(running: unblocked))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(queue_sending = {}) & n_sending: QUEUE +-> POW(TASK) & dom(n_sending) = dom(queue_sending) & n_sending = remove_task(queue_sending,unblocked) & n_first: QUEUE +-> TASK & dom(n_first) = dom(first_sending) & !q1.(q1: queues & q1: dom(n_first) & not(n_sending(q1) = {}) => n_first(q1): n_sending(q1)) & queue_receiving = {} & unblocked = {} & queues = dom(n_sending) & dom(n_first) = dom(n_sending) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: n_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: n_sending(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: n_sending(q1) => not(tk: n_sending(q2))) & que: queues);
  ("`Local hypotheses'" & not(queue_sending = {}) & n_sending: QUEUE +-> POW(TASK) & dom(n_sending) = dom(queue_sending) & n_sending = remove_task(queue_sending,unblocked) & n_first: QUEUE +-> TASK & dom(n_first) = dom(first_sending) & !q1.(q1: queues & q1: dom(n_first) & not(n_sending(q1) = {}) => n_first(q1): n_sending(q1)) & queue_receiving = {} & unblocked = {} & queues = dom(n_sending) & dom(n_first) = dom(n_sending) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: n_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: n_sending(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: n_sending(q1) => not(tk: n_sending(q2))) & mt: mutexes);
  ("`Local hypotheses'" & queue_sending = {} & not(queue_receiving = {}) & n_receiving: QUEUE +-> POW(TASK) & dom(n_receiving) = dom(queue_receiving) & n_receiving = remove_task(queue_receiving,unblocked) & n_first: QUEUE +-> TASK & dom(n_first) = dom(first_receiving) & !q1.(q1: queues & q1: dom(n_first) & not(n_receiving(q1) = {}) => n_first(q1): n_receiving(q1)) & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & running$0: n_runable & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & {}: FIN(TASK) & {}: POW(blocked-unblocked) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queues = dom(n_receiving) & dom(n_first) = dom(n_receiving) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: n_receiving(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: n_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: n_receiving(q1) => not(tk: n_receiving(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0: unblocked))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  (queue_sending(que): POW(blocked-unblocked\/suspended));
  ("`Local hypotheses'" & queue_sending = {} & not(queue_receiving = {}) & n_receiving: QUEUE +-> POW(TASK) & dom(n_receiving) = dom(queue_receiving) & n_receiving = remove_task(queue_receiving,unblocked) & n_first: QUEUE +-> TASK & dom(n_first) = dom(first_receiving) & !q1.(q1: queues & q1: dom(n_first) & not(n_receiving(q1) = {}) => n_first(q1): n_receiving(q1)) & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & {}: FIN(TASK) & {}: POW(blocked-unblocked) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queues = dom(n_receiving) & dom(n_first) = dom(n_receiving) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: n_receiving(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: n_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: n_receiving(q1) => not(tk: n_receiving(q2))) & (active = TRUE => not(running: blocked & not(running: unblocked))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & queue_sending = {} & not(queue_receiving = {}) & n_receiving: QUEUE +-> POW(TASK) & dom(n_receiving) = dom(queue_receiving) & n_receiving = remove_task(queue_receiving,unblocked) & n_first: QUEUE +-> TASK & dom(n_first) = dom(first_receiving) & !q1.(q1: queues & q1: dom(n_first) & not(n_receiving(q1) = {}) => n_first(q1): n_receiving(q1)) & unblocked = {} & queues = dom(n_receiving) & dom(n_first) = dom(n_receiving) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: n_receiving(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: n_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: n_receiving(q1) => not(tk: n_receiving(q2))) & que: queues);
  ("`Local hypotheses'" & queue_sending = {} & queue_receiving = {} & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & running$0: n_runable & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & {}: FIN(TASK) & {}: POW(blocked-unblocked) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0: unblocked))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & queue_sending = {} & queue_receiving = {} & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & {}: FIN(TASK) & {}: POW(blocked-unblocked) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & (active = TRUE => not(running: blocked & not(running: unblocked))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`vTaskStartScheduler preconditions in this component'" & active = FALSE);
  ("`Local hypotheses'" & idle_task: TASK & not(idle_task: tasks) & n_runable: POW(tasks) & n_runable = runable\/{idle_task} & running$0: n_runable & tasks\/{idle_task}: FIN(TASK) & blocked: POW(tasks\/{idle_task}) & n_runable: FIN(TASK) & n_runable: POW(tasks\/{idle_task}) & suspended: POW(tasks\/{idle_task}) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks\/{idle_task} = suspended\/blocked\/n_runable & running$0: TASK & not(n_runable = {}) & idle_task: n_runable & not(TASK_NULL: tasks) & not(TASK_NULL = idle_task) & not(running$0: suspended) & not(running$0: blocked) & not(idle_task = TASK_NULL) & not(idle_task: suspended) & not(idle_task: blocked));
  (ran(mutex_holder): POW(tasks\/{idle_task}\/{TASK_NULL}));
  (not(idle_task: ran(mutex_holder)));
  ("`Local hypotheses'" & idle_task: TASK & not(idle_task: tasks) & n_runable: POW(tasks) & n_runable = runable\/{idle_task} & running$0: n_runable & tasks\/{idle_task}: FIN(TASK) & blocked: POW(tasks\/{idle_task}) & n_runable: FIN(TASK) & n_runable: POW(tasks\/{idle_task}) & suspended: POW(tasks\/{idle_task}) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks\/{idle_task} = suspended\/blocked\/n_runable & running$0: TASK & not(n_runable = {}) & idle_task: n_runable & not(TASK_NULL: tasks) & not(TASK_NULL = idle_task) & not(running$0: suspended) & not(running$0: blocked) & not(idle_task = TASK_NULL) & not(idle_task: suspended) & not(idle_task: blocked) & mt: mutexes_busy);
  (mutex_holder(mt): tasks\/{idle_task});
  ("`Local hypotheses'" & idle_task: TASK & not(idle_task: tasks) & n_runable: POW(tasks) & n_runable = runable\/{idle_task} & running$0: n_runable & tasks\/{idle_task}: FIN(TASK) & blocked: POW(tasks\/{idle_task}) & n_runable: FIN(TASK) & n_runable: POW(tasks\/{idle_task}) & suspended: POW(tasks\/{idle_task}) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks\/{idle_task} = suspended\/blocked\/n_runable & running$0: TASK & not(n_runable = {}) & idle_task: n_runable & not(TASK_NULL: tasks) & not(TASK_NULL = idle_task) & not(running$0: suspended) & not(running$0: blocked) & not(idle_task = TASK_NULL) & not(idle_task: suspended) & not(idle_task: blocked) & mt: mutexes & not(mt: mutexes_busy));
  (not(mutex_holder(mt) = idle_task));
  ("`vTaskSuspend preconditions in this component'" & INCLUDE_vTaskSuspend = 1 & pxTaskToSuspend: TASK & pxTaskToSuspend: tasks & not(pxTaskToSuspend = idle));
  ("`Local hypotheses'" & not(pxTaskToSuspend: suspended) & pxQueue: queues & pxTaskToSuspend: queue_receiving(pxQueue) & n_receiving: POW(TASK) & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: TASK & n_first: queue_receiving(pxQueue) & pxQueue$0: queues & n_sending: POW(TASK) & n_first$0: TASK & pxTaskToSuspend: queue_sending(pxQueue$0) & n_sending = queue_sending(pxQueue$0)-{first_sending(pxQueue$0)} & n_first$0 = first_sending(pxQueue$0) & pxTaskToSuspend: runable & n_runable: POW(tasks) & n_runable = runable-{pxTaskToSuspend} & pxTaskToSuspend = running & running$0: n_runable & n_runable: FIN(TASK) & suspended\/{pxTaskToSuspend}: FIN(TASK) & n_runable/\blocked = {} & not(pxTaskToSuspend: blocked) & suspended\/{pxTaskToSuspend}/\n_runable = {} & tasks = suspended\/{pxTaskToSuspend}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & queues = dom(queue_sending<+{pxQueue$0|->n_sending}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & first_sending<+{pxQueue$0|->n_first$0}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & dom(first_sending<+{pxQueue$0|->n_first$0}) = dom(queue_sending<+{pxQueue$0|->n_sending}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue$0|->n_first$0}) & not((queue_sending<+{pxQueue$0|->n_sending})(q1) = {}) => (first_sending<+{pxQueue$0|->n_first$0})(q1): (queue_sending<+{pxQueue$0|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended) & not(running$0 = pxTaskToSuspend)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ((queue_sending<+{pxQueue$0|->n_sending})(que): POW(blocked\/(suspended\/{pxTaskToSuspend})));
  ((queue_receiving<+{pxQueue|->n_receiving})(que): POW(blocked\/(suspended\/{pxTaskToSuspend})));
  ("`Local hypotheses'" & not(pxTaskToSuspend: suspended) & pxQueue: queues & pxTaskToSuspend: queue_receiving(pxQueue) & n_receiving: POW(TASK) & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: TASK & n_first: queue_receiving(pxQueue) & pxQueue$0: queues & n_sending: POW(TASK) & n_first$0: TASK & pxTaskToSuspend: queue_sending(pxQueue$0) & n_sending = queue_sending(pxQueue$0)-{first_sending(pxQueue$0)} & n_first$0 = first_sending(pxQueue$0) & pxTaskToSuspend: runable & n_runable: POW(tasks) & n_runable = runable-{pxTaskToSuspend} & pxTaskToSuspend = running & running$0: n_runable & n_runable: FIN(TASK) & suspended\/{pxTaskToSuspend}: FIN(TASK) & n_runable/\blocked = {} & not(pxTaskToSuspend: blocked) & suspended\/{pxTaskToSuspend}/\n_runable = {} & tasks = suspended\/{pxTaskToSuspend}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & queues = dom(queue_sending<+{pxQueue$0|->n_sending}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & first_sending<+{pxQueue$0|->n_first$0}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & dom(first_sending<+{pxQueue$0|->n_first$0}) = dom(queue_sending<+{pxQueue$0|->n_sending}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue$0|->n_first$0}) & not((queue_sending<+{pxQueue$0|->n_sending})(q1) = {}) => (first_sending<+{pxQueue$0|->n_first$0})(q1): (queue_sending<+{pxQueue$0|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended) & not(running$0 = pxTaskToSuspend)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(pxTaskToSuspend: suspended) & pxQueue: queues & pxTaskToSuspend: queue_receiving(pxQueue) & n_receiving: POW(TASK) & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: TASK & n_first: queue_receiving(pxQueue) & pxQueue$0: queues & n_sending: POW(TASK) & n_first$0: TASK & pxTaskToSuspend: queue_sending(pxQueue$0) & n_sending = queue_sending(pxQueue$0)-{first_sending(pxQueue$0)} & n_first$0 = first_sending(pxQueue$0) & pxTaskToSuspend: runable & n_runable: POW(tasks) & n_runable = runable-{pxTaskToSuspend} & not(pxTaskToSuspend = running) & n_runable: FIN(TASK) & suspended\/{pxTaskToSuspend}: FIN(TASK) & n_runable/\blocked = {} & not(pxTaskToSuspend: blocked) & suspended\/{pxTaskToSuspend}/\n_runable = {} & tasks = suspended\/{pxTaskToSuspend}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & queues = dom(queue_sending<+{pxQueue$0|->n_sending}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & first_sending<+{pxQueue$0|->n_first$0}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & dom(first_sending<+{pxQueue$0|->n_first$0}) = dom(queue_sending<+{pxQueue$0|->n_sending}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue$0|->n_first$0}) & not((queue_sending<+{pxQueue$0|->n_sending})(q1) = {}) => (first_sending<+{pxQueue$0|->n_first$0})(q1): (queue_sending<+{pxQueue$0|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(pxTaskToSuspend: suspended) & pxQueue: queues & pxTaskToSuspend: queue_receiving(pxQueue) & n_receiving: POW(TASK) & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: TASK & n_first: queue_receiving(pxQueue) & pxQueue$0: queues & n_sending: POW(TASK) & n_first$0: TASK & pxTaskToSuspend: queue_sending(pxQueue$0) & n_sending = queue_sending(pxQueue$0)-{first_sending(pxQueue$0)} & n_first$0 = first_sending(pxQueue$0) & pxTaskToSuspend: runable & n_runable: POW(tasks) & n_runable = runable-{pxTaskToSuspend} & not(pxTaskToSuspend = running) & n_runable: FIN(TASK) & suspended\/{pxTaskToSuspend}: FIN(TASK) & n_runable/\blocked = {} & not(pxTaskToSuspend: blocked) & suspended\/{pxTaskToSuspend}/\n_runable = {} & tasks = suspended\/{pxTaskToSuspend}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & queues = dom(queue_sending<+{pxQueue$0|->n_sending}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & first_sending<+{pxQueue$0|->n_first$0}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & dom(first_sending<+{pxQueue$0|->n_first$0}) = dom(queue_sending<+{pxQueue$0|->n_sending}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue$0|->n_first$0}) & not((queue_sending<+{pxQueue$0|->n_sending})(q1) = {}) => (first_sending<+{pxQueue$0|->n_first$0})(q1): (queue_sending<+{pxQueue$0|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(pxTaskToSuspend: suspended) & pxQueue: queues & pxTaskToSuspend: queue_receiving(pxQueue) & n_receiving: POW(TASK) & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: TASK & n_first: queue_receiving(pxQueue) & pxQueue$0: queues & n_sending: POW(TASK) & n_first$0: TASK & pxTaskToSuspend: queue_sending(pxQueue$0) & n_sending = queue_sending(pxQueue$0)-{first_sending(pxQueue$0)} & n_first$0 = first_sending(pxQueue$0) & not(pxTaskToSuspend: runable) & pxTaskToSuspend: blocked & pxTaskToSuspend: unblocked & blocked-{pxTaskToSuspend}: FIN(TASK) & blocked-{pxTaskToSuspend}: POW(tasks) & unblocked-{pxTaskToSuspend}: FIN(TASK) & unblocked-{pxTaskToSuspend}: POW(blocked-{pxTaskToSuspend}) & suspended\/{pxTaskToSuspend}: FIN(TASK) & runable/\blocked-{pxTaskToSuspend} = {} & blocked-{pxTaskToSuspend}/\suspended = {} & suspended\/{pxTaskToSuspend}/\runable = {} & tasks = suspended\/{pxTaskToSuspend}\/blocked-{pxTaskToSuspend}\/runable & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & queues = dom(queue_sending<+{pxQueue$0|->n_sending}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & first_sending<+{pxQueue$0|->n_first$0}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & dom(first_sending<+{pxQueue$0|->n_first$0}) = dom(queue_sending<+{pxQueue$0|->n_sending}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue$0|->n_first$0}) & not((queue_sending<+{pxQueue$0|->n_sending})(q1) = {}) => (first_sending<+{pxQueue$0|->n_first$0})(q1): (queue_sending<+{pxQueue$0|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & (active = TRUE => not(running: suspended) & not(running = pxTaskToSuspend)) & (active = TRUE => not(running: blocked & not(running = pxTaskToSuspend))) & que: queues);
  ((queue_sending<+{pxQueue$0|->n_sending})(que): POW(blocked-{pxTaskToSuspend}\/(suspended\/{pxTaskToSuspend})));
  ((queue_receiving<+{pxQueue|->n_receiving})(que): POW(blocked-{pxTaskToSuspend}\/(suspended\/{pxTaskToSuspend})));
  ("`Local hypotheses'" & not(pxTaskToSuspend: suspended) & pxQueue: queues & pxTaskToSuspend: queue_receiving(pxQueue) & n_receiving: POW(TASK) & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: TASK & n_first: queue_receiving(pxQueue) & pxQueue$0: queues & n_sending: POW(TASK) & n_first$0: TASK & pxTaskToSuspend: queue_sending(pxQueue$0) & n_sending = queue_sending(pxQueue$0)-{first_sending(pxQueue$0)} & n_first$0 = first_sending(pxQueue$0) & not(pxTaskToSuspend: runable) & pxTaskToSuspend: blocked & pxTaskToSuspend: unblocked & blocked-{pxTaskToSuspend}: FIN(TASK) & blocked-{pxTaskToSuspend}: POW(tasks) & unblocked-{pxTaskToSuspend}: FIN(TASK) & unblocked-{pxTaskToSuspend}: POW(blocked-{pxTaskToSuspend}) & suspended\/{pxTaskToSuspend}: FIN(TASK) & runable/\blocked-{pxTaskToSuspend} = {} & blocked-{pxTaskToSuspend}/\suspended = {} & suspended\/{pxTaskToSuspend}/\runable = {} & tasks = suspended\/{pxTaskToSuspend}\/blocked-{pxTaskToSuspend}\/runable & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & queues = dom(queue_sending<+{pxQueue$0|->n_sending}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & first_sending<+{pxQueue$0|->n_first$0}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & dom(first_sending<+{pxQueue$0|->n_first$0}) = dom(queue_sending<+{pxQueue$0|->n_sending}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue$0|->n_first$0}) & not((queue_sending<+{pxQueue$0|->n_sending})(q1) = {}) => (first_sending<+{pxQueue$0|->n_first$0})(q1): (queue_sending<+{pxQueue$0|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & (active = TRUE => not(running: suspended) & not(running = pxTaskToSuspend)) & (active = TRUE => not(running: blocked & not(running = pxTaskToSuspend))) & mt: mutexes);
  ("`Local hypotheses'" & not(pxTaskToSuspend: suspended) & pxQueue: queues & pxTaskToSuspend: queue_receiving(pxQueue) & n_receiving: POW(TASK) & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: TASK & n_first: queue_receiving(pxQueue) & pxQueue$0: queues & n_sending: POW(TASK) & n_first$0: TASK & pxTaskToSuspend: queue_sending(pxQueue$0) & n_sending = queue_sending(pxQueue$0)-{first_sending(pxQueue$0)} & n_first$0 = first_sending(pxQueue$0) & not(pxTaskToSuspend: runable) & pxTaskToSuspend: blocked & not(pxTaskToSuspend: unblocked) & blocked-{pxTaskToSuspend}: FIN(TASK) & blocked-{pxTaskToSuspend}: POW(tasks) & unblocked: POW(blocked-{pxTaskToSuspend}) & suspended\/{pxTaskToSuspend}: FIN(TASK) & runable/\blocked-{pxTaskToSuspend} = {} & blocked-{pxTaskToSuspend}/\suspended = {} & suspended\/{pxTaskToSuspend}/\runable = {} & tasks = suspended\/{pxTaskToSuspend}\/blocked-{pxTaskToSuspend}\/runable & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & queues = dom(queue_sending<+{pxQueue$0|->n_sending}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & first_sending<+{pxQueue$0|->n_first$0}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & dom(first_sending<+{pxQueue$0|->n_first$0}) = dom(queue_sending<+{pxQueue$0|->n_sending}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue$0|->n_first$0}) & not((queue_sending<+{pxQueue$0|->n_sending})(q1) = {}) => (first_sending<+{pxQueue$0|->n_first$0})(q1): (queue_sending<+{pxQueue$0|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & (active = TRUE => not(running: suspended) & not(running = pxTaskToSuspend)) & (active = TRUE => not(running: blocked & not(running = pxTaskToSuspend))) & que: queues);
  ("`Local hypotheses'" & not(pxTaskToSuspend: suspended) & pxQueue: queues & pxTaskToSuspend: queue_receiving(pxQueue) & n_receiving: POW(TASK) & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: TASK & n_first: queue_receiving(pxQueue) & pxQueue$0: queues & n_sending: POW(TASK) & n_first$0: TASK & pxTaskToSuspend: queue_sending(pxQueue$0) & n_sending = queue_sending(pxQueue$0)-{first_sending(pxQueue$0)} & n_first$0 = first_sending(pxQueue$0) & not(pxTaskToSuspend: runable) & pxTaskToSuspend: blocked & not(pxTaskToSuspend: unblocked) & blocked-{pxTaskToSuspend}: FIN(TASK) & blocked-{pxTaskToSuspend}: POW(tasks) & unblocked: POW(blocked-{pxTaskToSuspend}) & suspended\/{pxTaskToSuspend}: FIN(TASK) & runable/\blocked-{pxTaskToSuspend} = {} & blocked-{pxTaskToSuspend}/\suspended = {} & suspended\/{pxTaskToSuspend}/\runable = {} & tasks = suspended\/{pxTaskToSuspend}\/blocked-{pxTaskToSuspend}\/runable & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & queues = dom(queue_sending<+{pxQueue$0|->n_sending}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & first_sending<+{pxQueue$0|->n_first$0}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & dom(first_sending<+{pxQueue$0|->n_first$0}) = dom(queue_sending<+{pxQueue$0|->n_sending}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue$0|->n_first$0}) & not((queue_sending<+{pxQueue$0|->n_sending})(q1) = {}) => (first_sending<+{pxQueue$0|->n_first$0})(q1): (queue_sending<+{pxQueue$0|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & (active = TRUE => not(running: suspended) & not(running = pxTaskToSuspend)) & (active = TRUE => not(running: blocked & not(running = pxTaskToSuspend))) & mt: mutexes);
  ("`Local hypotheses'" & not(pxTaskToSuspend: suspended) & pxQueue: queues & pxTaskToSuspend: queue_receiving(pxQueue) & n_receiving: POW(TASK) & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: TASK & n_first: queue_receiving(pxQueue) & pxQueue$0: queues & n_sending: POW(TASK) & n_first$0: TASK & pxTaskToSuspend: queue_sending(pxQueue$0) & n_sending = queue_sending(pxQueue$0)-{first_sending(pxQueue$0)} & n_first$0 = first_sending(pxQueue$0) & not(pxTaskToSuspend: runable) & not(pxTaskToSuspend: blocked) & suspended\/{pxTaskToSuspend}: FIN(TASK) & suspended\/{pxTaskToSuspend}/\runable = {} & tasks = suspended\/{pxTaskToSuspend}\/blocked\/runable & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & queues = dom(queue_sending<+{pxQueue$0|->n_sending}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & first_sending<+{pxQueue$0|->n_first$0}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & dom(first_sending<+{pxQueue$0|->n_first$0}) = dom(queue_sending<+{pxQueue$0|->n_sending}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue$0|->n_first$0}) & not((queue_sending<+{pxQueue$0|->n_sending})(q1) = {}) => (first_sending<+{pxQueue$0|->n_first$0})(q1): (queue_sending<+{pxQueue$0|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & (active = TRUE => not(running: suspended) & not(running = pxTaskToSuspend)) & que: queues);
  ("`Local hypotheses'" & not(pxTaskToSuspend: suspended) & pxQueue: queues & pxTaskToSuspend: queue_receiving(pxQueue) & n_receiving: POW(TASK) & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: TASK & n_first: queue_receiving(pxQueue) & pxQueue$0: queues & n_sending: POW(TASK) & n_first$0: TASK & pxTaskToSuspend: queue_sending(pxQueue$0) & n_sending = queue_sending(pxQueue$0)-{first_sending(pxQueue$0)} & n_first$0 = first_sending(pxQueue$0) & not(pxTaskToSuspend: runable) & not(pxTaskToSuspend: blocked) & suspended\/{pxTaskToSuspend}: FIN(TASK) & suspended\/{pxTaskToSuspend}/\runable = {} & tasks = suspended\/{pxTaskToSuspend}\/blocked\/runable & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & queues = dom(queue_sending<+{pxQueue$0|->n_sending}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & first_sending<+{pxQueue$0|->n_first$0}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & dom(first_sending<+{pxQueue$0|->n_first$0}) = dom(queue_sending<+{pxQueue$0|->n_sending}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue$0|->n_first$0}) & not((queue_sending<+{pxQueue$0|->n_sending})(q1) = {}) => (first_sending<+{pxQueue$0|->n_first$0})(q1): (queue_sending<+{pxQueue$0|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue$0|->n_sending})(q2))) & (active = TRUE => not(running: suspended) & not(running = pxTaskToSuspend)) & mt: mutexes);
  ("`xQueueCreate preconditions in this component'" & uxQueueLength: QUEUE_LENGTH & uxItemSize: INTEGER & 0<=uxItemSize & uxItemSize<=2147483647);
  ("`Local hypotheses'" & pxQueue: QUEUE & not(pxQueue: queues) & queue_receiving\/{pxQueue|->{}}: QUEUE +-> POW(TASK) & queue_sending\/{pxQueue|->{}}: QUEUE +-> POW(TASK) & queues\/{pxQueue} = dom(queue_receiving\/{pxQueue|->{}}) & queues\/{pxQueue} = dom(queue_sending\/{pxQueue|->{}}) & first_receiving\/{pxQueue|->TASK_NULL}: QUEUE +-> TASK & first_sending\/{pxQueue|->TASK_NULL}: QUEUE +-> TASK & dom(first_receiving\/{pxQueue|->TASK_NULL}) = dom(queue_receiving\/{pxQueue|->{}}) & dom(first_sending\/{pxQueue|->TASK_NULL}) = dom(queue_sending\/{pxQueue|->{}}) & !q1.(q1: queues\/{pxQueue} & q1: dom(first_receiving\/{pxQueue|->TASK_NULL}) & not((queue_receiving\/{pxQueue|->{}})(q1) = {}) => (first_receiving\/{pxQueue|->TASK_NULL})(q1): (queue_receiving\/{pxQueue|->{}})(q1)) & !q1.(q1: queues\/{pxQueue} & q1: dom(first_sending\/{pxQueue|->TASK_NULL}) & not((queue_sending\/{pxQueue|->{}})(q1) = {}) => (first_sending\/{pxQueue|->TASK_NULL})(q1): (queue_sending\/{pxQueue|->{}})(q1)) & pxQueue: queues\/{pxQueue} & queues_msg: POW(queues\/{pxQueue}) & queues_msg_full: POW(queues_msg\/{pxQueue}) & pxQueue: queues_msg\/{pxQueue} & queues_msg_empty: POW(queues_msg\/{pxQueue}) & not(pxQueue: queues_msg_full) & queue_items\/{pxQueue|->{}}: QUEUE +-> POW(ITEM) & queues_msg\/{pxQueue} = dom(queue_items\/{pxQueue|->{}}) & !(q1,q2,tk).(q1: queues\/{pxQueue} & q2: queues\/{pxQueue} & tk: TASK & tk: (queue_receiving\/{pxQueue|->{}})(q1) => not(tk: (queue_sending\/{pxQueue|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{pxQueue} & q2: queues\/{pxQueue} & tk: TASK & tk: (queue_sending\/{pxQueue|->{}})(q2) => not(tk: (queue_receiving\/{pxQueue|->{}})(q1))) & !(q1,q2,tk).(q1: queues\/{pxQueue} & q2: queues\/{pxQueue} & not(q1 = q2) & tk: TASK & tk: (queue_receiving\/{pxQueue|->{}})(q1) => not(tk: (queue_receiving\/{pxQueue|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{pxQueue} & q2: queues\/{pxQueue} & not(q1 = q2) & tk: TASK & tk: (queue_sending\/{pxQueue|->{}})(q1) => not(tk: (queue_sending\/{pxQueue|->{}})(q2))) & semaphores: POW(queues\/{pxQueue}) & mutexes: POW(queues\/{pxQueue}) & queues_msg\/{pxQueue}/\semaphores = {} & queues_msg\/{pxQueue}/\mutexes = {} & !que.(que: QUEUE & (not(que: queues) & not(que = pxQueue)) => not(que: mutexes)) & !que.(que: QUEUE & (not(que: queues) & not(que = pxQueue)) => not(que: semaphores)) & !que.(que: queues_msg\/{pxQueue} & que: queues_msg_full => not(que: queues_msg_empty) & not(que = pxQueue)) & !que.(que: queues_msg\/{pxQueue} & que: queues_msg_empty\/{pxQueue} => not(que: queues_msg_full)) & que: queues\/{pxQueue});
  ((queue_sending\/{pxQueue|->{}})(que): POW(blocked\/suspended));
  ((queue_receiving\/{pxQueue|->{}})(que): POW(blocked\/suspended));
  ("`Local hypotheses'" & pxQueue: QUEUE & not(pxQueue: queues) & queue_receiving\/{pxQueue|->{}}: QUEUE +-> POW(TASK) & queue_sending\/{pxQueue|->{}}: QUEUE +-> POW(TASK) & queues\/{pxQueue} = dom(queue_receiving\/{pxQueue|->{}}) & queues\/{pxQueue} = dom(queue_sending\/{pxQueue|->{}}) & first_receiving\/{pxQueue|->TASK_NULL}: QUEUE +-> TASK & first_sending\/{pxQueue|->TASK_NULL}: QUEUE +-> TASK & dom(first_receiving\/{pxQueue|->TASK_NULL}) = dom(queue_receiving\/{pxQueue|->{}}) & dom(first_sending\/{pxQueue|->TASK_NULL}) = dom(queue_sending\/{pxQueue|->{}}) & !q1.(q1: queues\/{pxQueue} & q1: dom(first_receiving\/{pxQueue|->TASK_NULL}) & not((queue_receiving\/{pxQueue|->{}})(q1) = {}) => (first_receiving\/{pxQueue|->TASK_NULL})(q1): (queue_receiving\/{pxQueue|->{}})(q1)) & !q1.(q1: queues\/{pxQueue} & q1: dom(first_sending\/{pxQueue|->TASK_NULL}) & not((queue_sending\/{pxQueue|->{}})(q1) = {}) => (first_sending\/{pxQueue|->TASK_NULL})(q1): (queue_sending\/{pxQueue|->{}})(q1)) & pxQueue: queues\/{pxQueue} & queues_msg: POW(queues\/{pxQueue}) & queues_msg_full: POW(queues_msg\/{pxQueue}) & pxQueue: queues_msg\/{pxQueue} & queues_msg_empty: POW(queues_msg\/{pxQueue}) & not(pxQueue: queues_msg_full) & queue_items\/{pxQueue|->{}}: QUEUE +-> POW(ITEM) & queues_msg\/{pxQueue} = dom(queue_items\/{pxQueue|->{}}) & !(q1,q2,tk).(q1: queues\/{pxQueue} & q2: queues\/{pxQueue} & tk: TASK & tk: (queue_receiving\/{pxQueue|->{}})(q1) => not(tk: (queue_sending\/{pxQueue|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{pxQueue} & q2: queues\/{pxQueue} & tk: TASK & tk: (queue_sending\/{pxQueue|->{}})(q2) => not(tk: (queue_receiving\/{pxQueue|->{}})(q1))) & !(q1,q2,tk).(q1: queues\/{pxQueue} & q2: queues\/{pxQueue} & not(q1 = q2) & tk: TASK & tk: (queue_receiving\/{pxQueue|->{}})(q1) => not(tk: (queue_receiving\/{pxQueue|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{pxQueue} & q2: queues\/{pxQueue} & not(q1 = q2) & tk: TASK & tk: (queue_sending\/{pxQueue|->{}})(q1) => not(tk: (queue_sending\/{pxQueue|->{}})(q2))) & semaphores: POW(queues\/{pxQueue}) & mutexes: POW(queues\/{pxQueue}) & queues_msg\/{pxQueue}/\semaphores = {} & queues_msg\/{pxQueue}/\mutexes = {} & !que.(que: QUEUE & (not(que: queues) & not(que = pxQueue)) => not(que: mutexes)) & !que.(que: QUEUE & (not(que: queues) & not(que = pxQueue)) => not(que: semaphores)) & !que.(que: queues_msg\/{pxQueue} & que: queues_msg_full => not(que: queues_msg_empty) & not(que = pxQueue)) & !que.(que: queues_msg\/{pxQueue} & que: queues_msg_empty\/{pxQueue} => not(que: queues_msg_full)) & mt: mutexes);
  ((queue_sending\/{pxQueue|->{}})(mt) = {});
  ("`queueDelete preconditions in this component'" & pxQueue: queues_msg & queue_receiving(pxQueue) = {} & queue_sending(pxQueue) = {});
  (pxQueue: queues);
  (not(pxQueue: semaphores));
  (not(pxQueue: mutexes));
  ("`Local hypotheses'" & pxQueue: queues_msg_full & pxQueue: queues_msg_empty & queues-{pxQueue}: POW(QUEUE) & {pxQueue}<<|queue_receiving: QUEUE +-> POW(TASK) & {pxQueue}<<|queue_sending: QUEUE +-> POW(TASK) & queues-{pxQueue} = dom({pxQueue}<<|queue_receiving) & queues-{pxQueue} = dom({pxQueue}<<|queue_sending) & {pxQueue}<<|first_receiving: QUEUE +-> TASK & {pxQueue}<<|first_sending: QUEUE +-> TASK & dom({pxQueue}<<|first_receiving) = dom({pxQueue}<<|queue_receiving) & dom({pxQueue}<<|first_sending) = dom({pxQueue}<<|queue_sending) & !q1.(q1: queues & not(q1 = pxQueue) & q1: dom({pxQueue}<<|first_receiving) & not(({pxQueue}<<|queue_receiving)(q1) = {}) => ({pxQueue}<<|first_receiving)(q1): ({pxQueue}<<|queue_receiving)(q1)) & !q1.(q1: queues & not(q1 = pxQueue) & q1: dom({pxQueue}<<|first_sending) & not(({pxQueue}<<|queue_sending)(q1) = {}) => ({pxQueue}<<|first_sending)(q1): ({pxQueue}<<|queue_sending)(q1)) & queues_msg-{pxQueue}: POW(queues-{pxQueue}) & queues_msg_full-{pxQueue}: POW(queues_msg-{pxQueue}) & queues_msg_empty-{pxQueue}: POW(queues_msg-{pxQueue}) & queues_msg_full-{pxQueue}/\queues_msg_empty-{pxQueue} = {} & {pxQueue}<<|queue_items: QUEUE +-> POW(ITEM) & queues_msg-{pxQueue} = dom({pxQueue}<<|queue_items) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q2) => not(tk: ({pxQueue}<<|queue_receiving)(q1))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_receiving)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & semaphores: POW(queues-{pxQueue}) & mutexes: POW(queues-{pxQueue}) & queues_msg-{pxQueue}/\semaphores = {} & queues_msg-{pxQueue}/\mutexes = {} & !que.(que: QUEUE & not(que: queues & not(que = pxQueue)) => not(que: mutexes)) & !que.(que: QUEUE & not(que: queues & not(que = pxQueue)) => not(que: semaphores)) & !que.(que: queues_msg & not(que = pxQueue) & (que: queues_msg_full & not(que = pxQueue)) => not(que: queues_msg_empty & not(que = pxQueue))) & !que.(que: queues_msg & not(que = pxQueue) & (que: queues_msg_empty & not(que = pxQueue)) => not(que: queues_msg_full & not(que = pxQueue))) & que: queues & not(que = pxQueue));
  (({pxQueue}<<|queue_sending)(que): POW(blocked\/suspended));
  (({pxQueue}<<|queue_receiving)(que): POW(blocked\/suspended));
  ("`Local hypotheses'" & pxQueue: queues_msg_full & pxQueue: queues_msg_empty & queues-{pxQueue}: POW(QUEUE) & {pxQueue}<<|queue_receiving: QUEUE +-> POW(TASK) & {pxQueue}<<|queue_sending: QUEUE +-> POW(TASK) & queues-{pxQueue} = dom({pxQueue}<<|queue_receiving) & queues-{pxQueue} = dom({pxQueue}<<|queue_sending) & {pxQueue}<<|first_receiving: QUEUE +-> TASK & {pxQueue}<<|first_sending: QUEUE +-> TASK & dom({pxQueue}<<|first_receiving) = dom({pxQueue}<<|queue_receiving) & dom({pxQueue}<<|first_sending) = dom({pxQueue}<<|queue_sending) & !q1.(q1: queues & not(q1 = pxQueue) & q1: dom({pxQueue}<<|first_receiving) & not(({pxQueue}<<|queue_receiving)(q1) = {}) => ({pxQueue}<<|first_receiving)(q1): ({pxQueue}<<|queue_receiving)(q1)) & !q1.(q1: queues & not(q1 = pxQueue) & q1: dom({pxQueue}<<|first_sending) & not(({pxQueue}<<|queue_sending)(q1) = {}) => ({pxQueue}<<|first_sending)(q1): ({pxQueue}<<|queue_sending)(q1)) & queues_msg-{pxQueue}: POW(queues-{pxQueue}) & queues_msg_full-{pxQueue}: POW(queues_msg-{pxQueue}) & queues_msg_empty-{pxQueue}: POW(queues_msg-{pxQueue}) & queues_msg_full-{pxQueue}/\queues_msg_empty-{pxQueue} = {} & {pxQueue}<<|queue_items: QUEUE +-> POW(ITEM) & queues_msg-{pxQueue} = dom({pxQueue}<<|queue_items) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q2) => not(tk: ({pxQueue}<<|queue_receiving)(q1))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_receiving)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & semaphores: POW(queues-{pxQueue}) & mutexes: POW(queues-{pxQueue}) & queues_msg-{pxQueue}/\semaphores = {} & queues_msg-{pxQueue}/\mutexes = {} & !que.(que: QUEUE & not(que: queues & not(que = pxQueue)) => not(que: mutexes)) & !que.(que: QUEUE & not(que: queues & not(que = pxQueue)) => not(que: semaphores)) & !que.(que: queues_msg & not(que = pxQueue) & (que: queues_msg_full & not(que = pxQueue)) => not(que: queues_msg_empty & not(que = pxQueue))) & !que.(que: queues_msg & not(que = pxQueue) & (que: queues_msg_empty & not(que = pxQueue)) => not(que: queues_msg_full & not(que = pxQueue))) & mt: mutexes);
  (({pxQueue}<<|queue_sending)(mt) = {});
  ("`Local hypotheses'" & pxQueue: queues_msg_full & not(pxQueue: queues_msg_empty) & queues-{pxQueue}: POW(QUEUE) & {pxQueue}<<|queue_receiving: QUEUE +-> POW(TASK) & {pxQueue}<<|queue_sending: QUEUE +-> POW(TASK) & queues-{pxQueue} = dom({pxQueue}<<|queue_receiving) & queues-{pxQueue} = dom({pxQueue}<<|queue_sending) & {pxQueue}<<|first_receiving: QUEUE +-> TASK & {pxQueue}<<|first_sending: QUEUE +-> TASK & dom({pxQueue}<<|first_receiving) = dom({pxQueue}<<|queue_receiving) & dom({pxQueue}<<|first_sending) = dom({pxQueue}<<|queue_sending) & !q1.(q1: queues & not(q1 = pxQueue) & q1: dom({pxQueue}<<|first_receiving) & not(({pxQueue}<<|queue_receiving)(q1) = {}) => ({pxQueue}<<|first_receiving)(q1): ({pxQueue}<<|queue_receiving)(q1)) & !q1.(q1: queues & not(q1 = pxQueue) & q1: dom({pxQueue}<<|first_sending) & not(({pxQueue}<<|queue_sending)(q1) = {}) => ({pxQueue}<<|first_sending)(q1): ({pxQueue}<<|queue_sending)(q1)) & queues_msg-{pxQueue}: POW(queues-{pxQueue}) & queues_msg_full-{pxQueue}: POW(queues_msg-{pxQueue}) & queues_msg_empty: POW(queues_msg-{pxQueue}) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & {pxQueue}<<|queue_items: QUEUE +-> POW(ITEM) & queues_msg-{pxQueue} = dom({pxQueue}<<|queue_items) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q2) => not(tk: ({pxQueue}<<|queue_receiving)(q1))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_receiving)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & semaphores: POW(queues-{pxQueue}) & mutexes: POW(queues-{pxQueue}) & queues_msg-{pxQueue}/\semaphores = {} & queues_msg-{pxQueue}/\mutexes = {} & !que.(que: QUEUE & not(que: queues & not(que = pxQueue)) => not(que: mutexes)) & !que.(que: QUEUE & not(que: queues & not(que = pxQueue)) => not(que: semaphores)) & !que.(que: queues_msg & not(que = pxQueue) & (que: queues_msg_full & not(que = pxQueue)) => not(que: queues_msg_empty)) & !que.(que: queues_msg & not(que = pxQueue) & que: queues_msg_empty => not(que: queues_msg_full & not(que = pxQueue))) & que: queues & not(que = pxQueue));
  ("`Local hypotheses'" & pxQueue: queues_msg_full & not(pxQueue: queues_msg_empty) & queues-{pxQueue}: POW(QUEUE) & {pxQueue}<<|queue_receiving: QUEUE +-> POW(TASK) & {pxQueue}<<|queue_sending: QUEUE +-> POW(TASK) & queues-{pxQueue} = dom({pxQueue}<<|queue_receiving) & queues-{pxQueue} = dom({pxQueue}<<|queue_sending) & {pxQueue}<<|first_receiving: QUEUE +-> TASK & {pxQueue}<<|first_sending: QUEUE +-> TASK & dom({pxQueue}<<|first_receiving) = dom({pxQueue}<<|queue_receiving) & dom({pxQueue}<<|first_sending) = dom({pxQueue}<<|queue_sending) & !q1.(q1: queues & not(q1 = pxQueue) & q1: dom({pxQueue}<<|first_receiving) & not(({pxQueue}<<|queue_receiving)(q1) = {}) => ({pxQueue}<<|first_receiving)(q1): ({pxQueue}<<|queue_receiving)(q1)) & !q1.(q1: queues & not(q1 = pxQueue) & q1: dom({pxQueue}<<|first_sending) & not(({pxQueue}<<|queue_sending)(q1) = {}) => ({pxQueue}<<|first_sending)(q1): ({pxQueue}<<|queue_sending)(q1)) & queues_msg-{pxQueue}: POW(queues-{pxQueue}) & queues_msg_full-{pxQueue}: POW(queues_msg-{pxQueue}) & queues_msg_empty: POW(queues_msg-{pxQueue}) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & {pxQueue}<<|queue_items: QUEUE +-> POW(ITEM) & queues_msg-{pxQueue} = dom({pxQueue}<<|queue_items) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q2) => not(tk: ({pxQueue}<<|queue_receiving)(q1))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_receiving)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & semaphores: POW(queues-{pxQueue}) & mutexes: POW(queues-{pxQueue}) & queues_msg-{pxQueue}/\semaphores = {} & queues_msg-{pxQueue}/\mutexes = {} & !que.(que: QUEUE & not(que: queues & not(que = pxQueue)) => not(que: mutexes)) & !que.(que: QUEUE & not(que: queues & not(que = pxQueue)) => not(que: semaphores)) & !que.(que: queues_msg & not(que = pxQueue) & (que: queues_msg_full & not(que = pxQueue)) => not(que: queues_msg_empty)) & !que.(que: queues_msg & not(que = pxQueue) & que: queues_msg_empty => not(que: queues_msg_full & not(que = pxQueue))) & mt: mutexes);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & pxQueue: queues_msg_empty & queues-{pxQueue}: POW(QUEUE) & {pxQueue}<<|queue_receiving: QUEUE +-> POW(TASK) & {pxQueue}<<|queue_sending: QUEUE +-> POW(TASK) & queues-{pxQueue} = dom({pxQueue}<<|queue_receiving) & queues-{pxQueue} = dom({pxQueue}<<|queue_sending) & {pxQueue}<<|first_receiving: QUEUE +-> TASK & {pxQueue}<<|first_sending: QUEUE +-> TASK & dom({pxQueue}<<|first_receiving) = dom({pxQueue}<<|queue_receiving) & dom({pxQueue}<<|first_sending) = dom({pxQueue}<<|queue_sending) & !q1.(q1: queues & not(q1 = pxQueue) & q1: dom({pxQueue}<<|first_receiving) & not(({pxQueue}<<|queue_receiving)(q1) = {}) => ({pxQueue}<<|first_receiving)(q1): ({pxQueue}<<|queue_receiving)(q1)) & !q1.(q1: queues & not(q1 = pxQueue) & q1: dom({pxQueue}<<|first_sending) & not(({pxQueue}<<|queue_sending)(q1) = {}) => ({pxQueue}<<|first_sending)(q1): ({pxQueue}<<|queue_sending)(q1)) & queues_msg-{pxQueue}: POW(queues-{pxQueue}) & queues_msg_full: POW(queues_msg-{pxQueue}) & queues_msg_empty-{pxQueue}: POW(queues_msg-{pxQueue}) & queues_msg_full/\queues_msg_empty-{pxQueue} = {} & {pxQueue}<<|queue_items: QUEUE +-> POW(ITEM) & queues_msg-{pxQueue} = dom({pxQueue}<<|queue_items) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q2) => not(tk: ({pxQueue}<<|queue_receiving)(q1))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_receiving)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & semaphores: POW(queues-{pxQueue}) & mutexes: POW(queues-{pxQueue}) & queues_msg-{pxQueue}/\semaphores = {} & queues_msg-{pxQueue}/\mutexes = {} & !que.(que: QUEUE & not(que: queues & not(que = pxQueue)) => not(que: mutexes)) & !que.(que: QUEUE & not(que: queues & not(que = pxQueue)) => not(que: semaphores)) & !que.(que: queues_msg & not(que = pxQueue) & que: queues_msg_full => not(que: queues_msg_empty & not(que = pxQueue))) & !que.(que: queues_msg & not(que = pxQueue) & (que: queues_msg_empty & not(que = pxQueue)) => not(que: queues_msg_full)) & que: queues & not(que = pxQueue));
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & pxQueue: queues_msg_empty & queues-{pxQueue}: POW(QUEUE) & {pxQueue}<<|queue_receiving: QUEUE +-> POW(TASK) & {pxQueue}<<|queue_sending: QUEUE +-> POW(TASK) & queues-{pxQueue} = dom({pxQueue}<<|queue_receiving) & queues-{pxQueue} = dom({pxQueue}<<|queue_sending) & {pxQueue}<<|first_receiving: QUEUE +-> TASK & {pxQueue}<<|first_sending: QUEUE +-> TASK & dom({pxQueue}<<|first_receiving) = dom({pxQueue}<<|queue_receiving) & dom({pxQueue}<<|first_sending) = dom({pxQueue}<<|queue_sending) & !q1.(q1: queues & not(q1 = pxQueue) & q1: dom({pxQueue}<<|first_receiving) & not(({pxQueue}<<|queue_receiving)(q1) = {}) => ({pxQueue}<<|first_receiving)(q1): ({pxQueue}<<|queue_receiving)(q1)) & !q1.(q1: queues & not(q1 = pxQueue) & q1: dom({pxQueue}<<|first_sending) & not(({pxQueue}<<|queue_sending)(q1) = {}) => ({pxQueue}<<|first_sending)(q1): ({pxQueue}<<|queue_sending)(q1)) & queues_msg-{pxQueue}: POW(queues-{pxQueue}) & queues_msg_full: POW(queues_msg-{pxQueue}) & queues_msg_empty-{pxQueue}: POW(queues_msg-{pxQueue}) & queues_msg_full/\queues_msg_empty-{pxQueue} = {} & {pxQueue}<<|queue_items: QUEUE +-> POW(ITEM) & queues_msg-{pxQueue} = dom({pxQueue}<<|queue_items) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q2) => not(tk: ({pxQueue}<<|queue_receiving)(q1))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_receiving)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & semaphores: POW(queues-{pxQueue}) & mutexes: POW(queues-{pxQueue}) & queues_msg-{pxQueue}/\semaphores = {} & queues_msg-{pxQueue}/\mutexes = {} & !que.(que: QUEUE & not(que: queues & not(que = pxQueue)) => not(que: mutexes)) & !que.(que: QUEUE & not(que: queues & not(que = pxQueue)) => not(que: semaphores)) & !que.(que: queues_msg & not(que = pxQueue) & que: queues_msg_full => not(que: queues_msg_empty & not(que = pxQueue))) & !que.(que: queues_msg & not(que = pxQueue) & (que: queues_msg_empty & not(que = pxQueue)) => not(que: queues_msg_full)) & mt: mutexes);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & not(pxQueue: queues_msg_empty) & queues-{pxQueue}: POW(QUEUE) & {pxQueue}<<|queue_receiving: QUEUE +-> POW(TASK) & {pxQueue}<<|queue_sending: QUEUE +-> POW(TASK) & queues-{pxQueue} = dom({pxQueue}<<|queue_receiving) & queues-{pxQueue} = dom({pxQueue}<<|queue_sending) & {pxQueue}<<|first_receiving: QUEUE +-> TASK & {pxQueue}<<|first_sending: QUEUE +-> TASK & dom({pxQueue}<<|first_receiving) = dom({pxQueue}<<|queue_receiving) & dom({pxQueue}<<|first_sending) = dom({pxQueue}<<|queue_sending) & !q1.(q1: queues & not(q1 = pxQueue) & q1: dom({pxQueue}<<|first_receiving) & not(({pxQueue}<<|queue_receiving)(q1) = {}) => ({pxQueue}<<|first_receiving)(q1): ({pxQueue}<<|queue_receiving)(q1)) & !q1.(q1: queues & not(q1 = pxQueue) & q1: dom({pxQueue}<<|first_sending) & not(({pxQueue}<<|queue_sending)(q1) = {}) => ({pxQueue}<<|first_sending)(q1): ({pxQueue}<<|queue_sending)(q1)) & queues_msg-{pxQueue}: POW(queues-{pxQueue}) & queues_msg_full: POW(queues_msg-{pxQueue}) & queues_msg_empty: POW(queues_msg-{pxQueue}) & {pxQueue}<<|queue_items: QUEUE +-> POW(ITEM) & queues_msg-{pxQueue} = dom({pxQueue}<<|queue_items) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q2) => not(tk: ({pxQueue}<<|queue_receiving)(q1))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_receiving)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & semaphores: POW(queues-{pxQueue}) & mutexes: POW(queues-{pxQueue}) & queues_msg-{pxQueue}/\semaphores = {} & queues_msg-{pxQueue}/\mutexes = {} & !que.(que: QUEUE & not(que: queues & not(que = pxQueue)) => not(que: mutexes)) & !que.(que: QUEUE & not(que: queues & not(que = pxQueue)) => not(que: semaphores)) & !que.(que: queues_msg & not(que = pxQueue) & que: queues_msg_full => not(que: queues_msg_empty)) & !que.(que: queues_msg & not(que = pxQueue) & que: queues_msg_empty => not(que: queues_msg_full)) & que: queues & not(que = pxQueue));
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & not(pxQueue: queues_msg_empty) & queues-{pxQueue}: POW(QUEUE) & {pxQueue}<<|queue_receiving: QUEUE +-> POW(TASK) & {pxQueue}<<|queue_sending: QUEUE +-> POW(TASK) & queues-{pxQueue} = dom({pxQueue}<<|queue_receiving) & queues-{pxQueue} = dom({pxQueue}<<|queue_sending) & {pxQueue}<<|first_receiving: QUEUE +-> TASK & {pxQueue}<<|first_sending: QUEUE +-> TASK & dom({pxQueue}<<|first_receiving) = dom({pxQueue}<<|queue_receiving) & dom({pxQueue}<<|first_sending) = dom({pxQueue}<<|queue_sending) & !q1.(q1: queues & not(q1 = pxQueue) & q1: dom({pxQueue}<<|first_receiving) & not(({pxQueue}<<|queue_receiving)(q1) = {}) => ({pxQueue}<<|first_receiving)(q1): ({pxQueue}<<|queue_receiving)(q1)) & !q1.(q1: queues & not(q1 = pxQueue) & q1: dom({pxQueue}<<|first_sending) & not(({pxQueue}<<|queue_sending)(q1) = {}) => ({pxQueue}<<|first_sending)(q1): ({pxQueue}<<|queue_sending)(q1)) & queues_msg-{pxQueue}: POW(queues-{pxQueue}) & queues_msg_full: POW(queues_msg-{pxQueue}) & queues_msg_empty: POW(queues_msg-{pxQueue}) & {pxQueue}<<|queue_items: QUEUE +-> POW(ITEM) & queues_msg-{pxQueue} = dom({pxQueue}<<|queue_items) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q2) => not(tk: ({pxQueue}<<|queue_receiving)(q1))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_receiving)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & semaphores: POW(queues-{pxQueue}) & mutexes: POW(queues-{pxQueue}) & queues_msg-{pxQueue}/\semaphores = {} & queues_msg-{pxQueue}/\mutexes = {} & !que.(que: QUEUE & not(que: queues & not(que = pxQueue)) => not(que: mutexes)) & !que.(que: QUEUE & not(que: queues & not(que = pxQueue)) => not(que: semaphores)) & !que.(que: queues_msg & not(que = pxQueue) & que: queues_msg_full => not(que: queues_msg_empty)) & !que.(que: queues_msg & not(que = pxQueue) & que: queues_msg_empty => not(que: queues_msg_full)) & mt: mutexes);
  ("`sendItem preconditions in this component'" & pxQueue: queues_msg & pvItemToQueue: ITEM & xTicksToWait: TICK & copy_position: (1..2)*{COPY_POSITION} & not(running = idle) & active = TRUE & not(pvItemToQueue: queue_items(pxQueue)));
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & not(queue_receiving(pxQueue) = {}));
  (first_receiving(pxQueue): TASK);
  (first_receiving(pxQueue): blocked\/suspended);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & not(queue_receiving(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(pxQueue)} & running$0: n_runable & first_receiving(pxQueue): suspended & first_receiving(pxQueue): blocked & first_receiving(pxQueue): unblocked & pxQueue: queues_msg_empty & n_receiving: POW(TASK) & n_first: TASK & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: n_receiving & blocked-{first_receiving(pxQueue)}: FIN(TASK) & blocked-{first_receiving(pxQueue)}: POW(tasks) & unblocked-{first_receiving(pxQueue)}: FIN(TASK) & unblocked-{first_receiving(pxQueue)}: POW(blocked-{first_receiving(pxQueue)}) & n_runable: FIN(TASK) & suspended-{first_receiving(pxQueue)}: FIN(TASK) & suspended-{first_receiving(pxQueue)}: POW(tasks) & n_runable/\blocked-{first_receiving(pxQueue)} = {} & blocked-{first_receiving(pxQueue)}/\suspended-{first_receiving(pxQueue)} = {} & suspended-{first_receiving(pxQueue)}/\n_runable = {} & tasks = suspended-{first_receiving(pxQueue)}\/blocked-{first_receiving(pxQueue)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & queues_msg_empty-{pxQueue}: POW(queues_msg) & queues_msg_full\/{pxQueue}/\queues_msg_empty-{pxQueue} = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = first_receiving(pxQueue)))) & (active = TRUE => not(running$0: blocked & not(running$0 = first_receiving(pxQueue)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(pxQueue)))) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full\/{pxQueue} => not(que: queues_msg_empty & not(que = pxQueue))) & !que.(que: queues_msg & (que: queues_msg_empty & not(que = pxQueue)) => not(que: queues_msg_full) & not(que = pxQueue)) & que: queues);
  (queue_sending(que): POW(blocked-{first_receiving(pxQueue)}\/suspended-{first_receiving(pxQueue)}));
  ((queue_receiving<+{pxQueue|->n_receiving})(que): POW(blocked-{first_receiving(pxQueue)}\/suspended-{first_receiving(pxQueue)}));
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & not(queue_receiving(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(pxQueue)} & running$0: n_runable & first_receiving(pxQueue): suspended & first_receiving(pxQueue): blocked & first_receiving(pxQueue): unblocked & not(pxQueue: queues_msg_empty) & n_receiving: POW(TASK) & n_first: TASK & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: n_receiving & blocked-{first_receiving(pxQueue)}: FIN(TASK) & blocked-{first_receiving(pxQueue)}: POW(tasks) & unblocked-{first_receiving(pxQueue)}: FIN(TASK) & unblocked-{first_receiving(pxQueue)}: POW(blocked-{first_receiving(pxQueue)}) & n_runable: FIN(TASK) & suspended-{first_receiving(pxQueue)}: FIN(TASK) & suspended-{first_receiving(pxQueue)}: POW(tasks) & n_runable/\blocked-{first_receiving(pxQueue)} = {} & blocked-{first_receiving(pxQueue)}/\suspended-{first_receiving(pxQueue)} = {} & suspended-{first_receiving(pxQueue)}/\n_runable = {} & tasks = suspended-{first_receiving(pxQueue)}\/blocked-{first_receiving(pxQueue)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & queues_msg_full\/{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = first_receiving(pxQueue)))) & (active = TRUE => not(running$0: blocked & not(running$0 = first_receiving(pxQueue)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(pxQueue)))) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full\/{pxQueue} => not(que: queues_msg_empty)) & !que.(que: queues_msg & que: queues_msg_empty => not(que: queues_msg_full) & not(que = pxQueue)) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & not(queue_receiving(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(pxQueue)} & running$0: n_runable & first_receiving(pxQueue): suspended & first_receiving(pxQueue): blocked & first_receiving(pxQueue): unblocked & pxQueue: queues_msg_empty & n_receiving: POW(TASK) & n_first: TASK & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: n_receiving & blocked-{first_receiving(pxQueue)}: FIN(TASK) & blocked-{first_receiving(pxQueue)}: POW(tasks) & unblocked-{first_receiving(pxQueue)}: FIN(TASK) & unblocked-{first_receiving(pxQueue)}: POW(blocked-{first_receiving(pxQueue)}) & n_runable: FIN(TASK) & suspended-{first_receiving(pxQueue)}: FIN(TASK) & suspended-{first_receiving(pxQueue)}: POW(tasks) & n_runable/\blocked-{first_receiving(pxQueue)} = {} & blocked-{first_receiving(pxQueue)}/\suspended-{first_receiving(pxQueue)} = {} & suspended-{first_receiving(pxQueue)}/\n_runable = {} & tasks = suspended-{first_receiving(pxQueue)}\/blocked-{first_receiving(pxQueue)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & queues_msg_empty-{pxQueue}: POW(queues_msg) & queues_msg_full/\queues_msg_empty-{pxQueue} = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = first_receiving(pxQueue)))) & (active = TRUE => not(running$0: blocked & not(running$0 = first_receiving(pxQueue)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(pxQueue)))) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full => not(que: queues_msg_empty & not(que = pxQueue))) & !que.(que: queues_msg & (que: queues_msg_empty & not(que = pxQueue)) => not(que: queues_msg_full)) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & not(queue_receiving(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(pxQueue)} & running$0: n_runable & first_receiving(pxQueue): suspended & first_receiving(pxQueue): blocked & first_receiving(pxQueue): unblocked & not(pxQueue: queues_msg_empty) & n_receiving: POW(TASK) & n_first: TASK & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: n_receiving & blocked-{first_receiving(pxQueue)}: FIN(TASK) & blocked-{first_receiving(pxQueue)}: POW(tasks) & unblocked-{first_receiving(pxQueue)}: FIN(TASK) & unblocked-{first_receiving(pxQueue)}: POW(blocked-{first_receiving(pxQueue)}) & n_runable: FIN(TASK) & suspended-{first_receiving(pxQueue)}: FIN(TASK) & suspended-{first_receiving(pxQueue)}: POW(tasks) & n_runable/\blocked-{first_receiving(pxQueue)} = {} & blocked-{first_receiving(pxQueue)}/\suspended-{first_receiving(pxQueue)} = {} & suspended-{first_receiving(pxQueue)}/\n_runable = {} & tasks = suspended-{first_receiving(pxQueue)}\/blocked-{first_receiving(pxQueue)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = first_receiving(pxQueue)))) & (active = TRUE => not(running$0: blocked & not(running$0 = first_receiving(pxQueue)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(pxQueue)))) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & not(queue_receiving(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(pxQueue)} & running$0: n_runable & first_receiving(pxQueue): suspended & first_receiving(pxQueue): blocked & not(first_receiving(pxQueue): unblocked) & pxQueue: queues_msg_empty & n_receiving: POW(TASK) & n_first: TASK & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: n_receiving & blocked-{first_receiving(pxQueue)}: FIN(TASK) & blocked-{first_receiving(pxQueue)}: POW(tasks) & unblocked: POW(blocked-{first_receiving(pxQueue)}) & n_runable: FIN(TASK) & suspended-{first_receiving(pxQueue)}: FIN(TASK) & suspended-{first_receiving(pxQueue)}: POW(tasks) & n_runable/\blocked-{first_receiving(pxQueue)} = {} & blocked-{first_receiving(pxQueue)}/\suspended-{first_receiving(pxQueue)} = {} & suspended-{first_receiving(pxQueue)}/\n_runable = {} & tasks = suspended-{first_receiving(pxQueue)}\/blocked-{first_receiving(pxQueue)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & queues_msg_empty-{pxQueue}: POW(queues_msg) & queues_msg_full\/{pxQueue}/\queues_msg_empty-{pxQueue} = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = first_receiving(pxQueue)))) & (active = TRUE => not(running$0: blocked & not(running$0 = first_receiving(pxQueue)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(pxQueue)))) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full\/{pxQueue} => not(que: queues_msg_empty & not(que = pxQueue))) & !que.(que: queues_msg & (que: queues_msg_empty & not(que = pxQueue)) => not(que: queues_msg_full) & not(que = pxQueue)) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & not(queue_receiving(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(pxQueue)} & running$0: n_runable & first_receiving(pxQueue): suspended & first_receiving(pxQueue): blocked & not(first_receiving(pxQueue): unblocked) & not(pxQueue: queues_msg_empty) & n_receiving: POW(TASK) & n_first: TASK & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: n_receiving & blocked-{first_receiving(pxQueue)}: FIN(TASK) & blocked-{first_receiving(pxQueue)}: POW(tasks) & unblocked: POW(blocked-{first_receiving(pxQueue)}) & n_runable: FIN(TASK) & suspended-{first_receiving(pxQueue)}: FIN(TASK) & suspended-{first_receiving(pxQueue)}: POW(tasks) & n_runable/\blocked-{first_receiving(pxQueue)} = {} & blocked-{first_receiving(pxQueue)}/\suspended-{first_receiving(pxQueue)} = {} & suspended-{first_receiving(pxQueue)}/\n_runable = {} & tasks = suspended-{first_receiving(pxQueue)}\/blocked-{first_receiving(pxQueue)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & queues_msg_full\/{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = first_receiving(pxQueue)))) & (active = TRUE => not(running$0: blocked & not(running$0 = first_receiving(pxQueue)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(pxQueue)))) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full\/{pxQueue} => not(que: queues_msg_empty)) & !que.(que: queues_msg & que: queues_msg_empty => not(que: queues_msg_full) & not(que = pxQueue)) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & not(queue_receiving(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(pxQueue)} & running$0: n_runable & first_receiving(pxQueue): suspended & first_receiving(pxQueue): blocked & not(first_receiving(pxQueue): unblocked) & pxQueue: queues_msg_empty & n_receiving: POW(TASK) & n_first: TASK & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: n_receiving & blocked-{first_receiving(pxQueue)}: FIN(TASK) & blocked-{first_receiving(pxQueue)}: POW(tasks) & unblocked: POW(blocked-{first_receiving(pxQueue)}) & n_runable: FIN(TASK) & suspended-{first_receiving(pxQueue)}: FIN(TASK) & suspended-{first_receiving(pxQueue)}: POW(tasks) & n_runable/\blocked-{first_receiving(pxQueue)} = {} & blocked-{first_receiving(pxQueue)}/\suspended-{first_receiving(pxQueue)} = {} & suspended-{first_receiving(pxQueue)}/\n_runable = {} & tasks = suspended-{first_receiving(pxQueue)}\/blocked-{first_receiving(pxQueue)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & queues_msg_empty-{pxQueue}: POW(queues_msg) & queues_msg_full/\queues_msg_empty-{pxQueue} = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = first_receiving(pxQueue)))) & (active = TRUE => not(running$0: blocked & not(running$0 = first_receiving(pxQueue)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(pxQueue)))) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full => not(que: queues_msg_empty & not(que = pxQueue))) & !que.(que: queues_msg & (que: queues_msg_empty & not(que = pxQueue)) => not(que: queues_msg_full)) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & not(queue_receiving(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(pxQueue)} & running$0: n_runable & first_receiving(pxQueue): suspended & first_receiving(pxQueue): blocked & not(first_receiving(pxQueue): unblocked) & not(pxQueue: queues_msg_empty) & n_receiving: POW(TASK) & n_first: TASK & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: n_receiving & blocked-{first_receiving(pxQueue)}: FIN(TASK) & blocked-{first_receiving(pxQueue)}: POW(tasks) & unblocked: POW(blocked-{first_receiving(pxQueue)}) & n_runable: FIN(TASK) & suspended-{first_receiving(pxQueue)}: FIN(TASK) & suspended-{first_receiving(pxQueue)}: POW(tasks) & n_runable/\blocked-{first_receiving(pxQueue)} = {} & blocked-{first_receiving(pxQueue)}/\suspended-{first_receiving(pxQueue)} = {} & suspended-{first_receiving(pxQueue)}/\n_runable = {} & tasks = suspended-{first_receiving(pxQueue)}\/blocked-{first_receiving(pxQueue)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = first_receiving(pxQueue)))) & (active = TRUE => not(running$0: blocked & not(running$0 = first_receiving(pxQueue)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(pxQueue)))) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & not(queue_receiving(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(pxQueue)} & running$0: n_runable & first_receiving(pxQueue): suspended & not(first_receiving(pxQueue): blocked) & pxQueue: queues_msg_empty & n_receiving: POW(TASK) & n_first: TASK & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: n_receiving & n_runable: FIN(TASK) & suspended-{first_receiving(pxQueue)}: FIN(TASK) & suspended-{first_receiving(pxQueue)}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{first_receiving(pxQueue)} = {} & suspended-{first_receiving(pxQueue)}/\n_runable = {} & tasks = suspended-{first_receiving(pxQueue)}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & queues_msg_empty-{pxQueue}: POW(queues_msg) & queues_msg_full\/{pxQueue}/\queues_msg_empty-{pxQueue} = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = first_receiving(pxQueue)))) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full\/{pxQueue} => not(que: queues_msg_empty & not(que = pxQueue))) & !que.(que: queues_msg & (que: queues_msg_empty & not(que = pxQueue)) => not(que: queues_msg_full) & not(que = pxQueue)) & que: queues);
  (queue_sending(que): POW(blocked\/suspended-{first_receiving(pxQueue)}));
  ((queue_receiving<+{pxQueue|->n_receiving})(que): POW(blocked\/suspended-{first_receiving(pxQueue)}));
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & not(queue_receiving(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(pxQueue)} & running$0: n_runable & first_receiving(pxQueue): suspended & not(first_receiving(pxQueue): blocked) & not(pxQueue: queues_msg_empty) & n_receiving: POW(TASK) & n_first: TASK & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: n_receiving & n_runable: FIN(TASK) & suspended-{first_receiving(pxQueue)}: FIN(TASK) & suspended-{first_receiving(pxQueue)}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{first_receiving(pxQueue)} = {} & suspended-{first_receiving(pxQueue)}/\n_runable = {} & tasks = suspended-{first_receiving(pxQueue)}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & queues_msg_full\/{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = first_receiving(pxQueue)))) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full\/{pxQueue} => not(que: queues_msg_empty)) & !que.(que: queues_msg & que: queues_msg_empty => not(que: queues_msg_full) & not(que = pxQueue)) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & not(queue_receiving(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(pxQueue)} & running$0: n_runable & first_receiving(pxQueue): suspended & not(first_receiving(pxQueue): blocked) & pxQueue: queues_msg_empty & n_receiving: POW(TASK) & n_first: TASK & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: n_receiving & n_runable: FIN(TASK) & suspended-{first_receiving(pxQueue)}: FIN(TASK) & suspended-{first_receiving(pxQueue)}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{first_receiving(pxQueue)} = {} & suspended-{first_receiving(pxQueue)}/\n_runable = {} & tasks = suspended-{first_receiving(pxQueue)}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & queues_msg_empty-{pxQueue}: POW(queues_msg) & queues_msg_full/\queues_msg_empty-{pxQueue} = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = first_receiving(pxQueue)))) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full => not(que: queues_msg_empty & not(que = pxQueue))) & !que.(que: queues_msg & (que: queues_msg_empty & not(que = pxQueue)) => not(que: queues_msg_full)) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & not(queue_receiving(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(pxQueue)} & running$0: n_runable & first_receiving(pxQueue): suspended & not(first_receiving(pxQueue): blocked) & not(pxQueue: queues_msg_empty) & n_receiving: POW(TASK) & n_first: TASK & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: n_receiving & n_runable: FIN(TASK) & suspended-{first_receiving(pxQueue)}: FIN(TASK) & suspended-{first_receiving(pxQueue)}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{first_receiving(pxQueue)} = {} & suspended-{first_receiving(pxQueue)}/\n_runable = {} & tasks = suspended-{first_receiving(pxQueue)}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = first_receiving(pxQueue)))) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & not(queue_receiving(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(pxQueue)} & running$0: n_runable & not(first_receiving(pxQueue): suspended) & first_receiving(pxQueue): blocked & first_receiving(pxQueue): unblocked & pxQueue: queues_msg_empty & n_receiving: POW(TASK) & n_first: TASK & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: n_receiving & blocked-{first_receiving(pxQueue)}: FIN(TASK) & blocked-{first_receiving(pxQueue)}: POW(tasks) & unblocked-{first_receiving(pxQueue)}: FIN(TASK) & unblocked-{first_receiving(pxQueue)}: POW(blocked-{first_receiving(pxQueue)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_receiving(pxQueue)} = {} & blocked-{first_receiving(pxQueue)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_receiving(pxQueue)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & queues_msg_empty-{pxQueue}: POW(queues_msg) & queues_msg_full\/{pxQueue}/\queues_msg_empty-{pxQueue} = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = first_receiving(pxQueue)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full\/{pxQueue} => not(que: queues_msg_empty & not(que = pxQueue))) & !que.(que: queues_msg & (que: queues_msg_empty & not(que = pxQueue)) => not(que: queues_msg_full) & not(que = pxQueue)) & que: queues);
  (queue_sending(que): POW(blocked-{first_receiving(pxQueue)}\/suspended));
  ((queue_receiving<+{pxQueue|->n_receiving})(que): POW(blocked-{first_receiving(pxQueue)}\/suspended));
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & not(queue_receiving(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(pxQueue)} & running$0: n_runable & not(first_receiving(pxQueue): suspended) & first_receiving(pxQueue): blocked & first_receiving(pxQueue): unblocked & not(pxQueue: queues_msg_empty) & n_receiving: POW(TASK) & n_first: TASK & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: n_receiving & blocked-{first_receiving(pxQueue)}: FIN(TASK) & blocked-{first_receiving(pxQueue)}: POW(tasks) & unblocked-{first_receiving(pxQueue)}: FIN(TASK) & unblocked-{first_receiving(pxQueue)}: POW(blocked-{first_receiving(pxQueue)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_receiving(pxQueue)} = {} & blocked-{first_receiving(pxQueue)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_receiving(pxQueue)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & queues_msg_full\/{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = first_receiving(pxQueue)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full\/{pxQueue} => not(que: queues_msg_empty)) & !que.(que: queues_msg & que: queues_msg_empty => not(que: queues_msg_full) & not(que = pxQueue)) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & not(queue_receiving(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(pxQueue)} & running$0: n_runable & not(first_receiving(pxQueue): suspended) & first_receiving(pxQueue): blocked & first_receiving(pxQueue): unblocked & pxQueue: queues_msg_empty & n_receiving: POW(TASK) & n_first: TASK & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: n_receiving & blocked-{first_receiving(pxQueue)}: FIN(TASK) & blocked-{first_receiving(pxQueue)}: POW(tasks) & unblocked-{first_receiving(pxQueue)}: FIN(TASK) & unblocked-{first_receiving(pxQueue)}: POW(blocked-{first_receiving(pxQueue)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_receiving(pxQueue)} = {} & blocked-{first_receiving(pxQueue)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_receiving(pxQueue)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & queues_msg_empty-{pxQueue}: POW(queues_msg) & queues_msg_full/\queues_msg_empty-{pxQueue} = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = first_receiving(pxQueue)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full => not(que: queues_msg_empty & not(que = pxQueue))) & !que.(que: queues_msg & (que: queues_msg_empty & not(que = pxQueue)) => not(que: queues_msg_full)) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & not(queue_receiving(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(pxQueue)} & running$0: n_runable & not(first_receiving(pxQueue): suspended) & first_receiving(pxQueue): blocked & first_receiving(pxQueue): unblocked & not(pxQueue: queues_msg_empty) & n_receiving: POW(TASK) & n_first: TASK & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: n_receiving & blocked-{first_receiving(pxQueue)}: FIN(TASK) & blocked-{first_receiving(pxQueue)}: POW(tasks) & unblocked-{first_receiving(pxQueue)}: FIN(TASK) & unblocked-{first_receiving(pxQueue)}: POW(blocked-{first_receiving(pxQueue)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_receiving(pxQueue)} = {} & blocked-{first_receiving(pxQueue)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_receiving(pxQueue)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = first_receiving(pxQueue)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & not(queue_receiving(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(pxQueue)} & running$0: n_runable & not(first_receiving(pxQueue): suspended) & first_receiving(pxQueue): blocked & not(first_receiving(pxQueue): unblocked) & pxQueue: queues_msg_empty & n_receiving: POW(TASK) & n_first: TASK & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: n_receiving & blocked-{first_receiving(pxQueue)}: FIN(TASK) & blocked-{first_receiving(pxQueue)}: POW(tasks) & unblocked: POW(blocked-{first_receiving(pxQueue)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_receiving(pxQueue)} = {} & blocked-{first_receiving(pxQueue)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_receiving(pxQueue)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & queues_msg_empty-{pxQueue}: POW(queues_msg) & queues_msg_full\/{pxQueue}/\queues_msg_empty-{pxQueue} = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = first_receiving(pxQueue)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full\/{pxQueue} => not(que: queues_msg_empty & not(que = pxQueue))) & !que.(que: queues_msg & (que: queues_msg_empty & not(que = pxQueue)) => not(que: queues_msg_full) & not(que = pxQueue)) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & not(queue_receiving(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(pxQueue)} & running$0: n_runable & not(first_receiving(pxQueue): suspended) & first_receiving(pxQueue): blocked & not(first_receiving(pxQueue): unblocked) & not(pxQueue: queues_msg_empty) & n_receiving: POW(TASK) & n_first: TASK & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: n_receiving & blocked-{first_receiving(pxQueue)}: FIN(TASK) & blocked-{first_receiving(pxQueue)}: POW(tasks) & unblocked: POW(blocked-{first_receiving(pxQueue)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_receiving(pxQueue)} = {} & blocked-{first_receiving(pxQueue)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_receiving(pxQueue)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & queues_msg_full\/{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = first_receiving(pxQueue)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full\/{pxQueue} => not(que: queues_msg_empty)) & !que.(que: queues_msg & que: queues_msg_empty => not(que: queues_msg_full) & not(que = pxQueue)) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & not(queue_receiving(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(pxQueue)} & running$0: n_runable & not(first_receiving(pxQueue): suspended) & first_receiving(pxQueue): blocked & not(first_receiving(pxQueue): unblocked) & pxQueue: queues_msg_empty & n_receiving: POW(TASK) & n_first: TASK & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: n_receiving & blocked-{first_receiving(pxQueue)}: FIN(TASK) & blocked-{first_receiving(pxQueue)}: POW(tasks) & unblocked: POW(blocked-{first_receiving(pxQueue)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_receiving(pxQueue)} = {} & blocked-{first_receiving(pxQueue)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_receiving(pxQueue)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & queues_msg_empty-{pxQueue}: POW(queues_msg) & queues_msg_full/\queues_msg_empty-{pxQueue} = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = first_receiving(pxQueue)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full => not(que: queues_msg_empty & not(que = pxQueue))) & !que.(que: queues_msg & (que: queues_msg_empty & not(que = pxQueue)) => not(que: queues_msg_full)) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & not(queue_receiving(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(pxQueue)} & running$0: n_runable & not(first_receiving(pxQueue): suspended) & first_receiving(pxQueue): blocked & not(first_receiving(pxQueue): unblocked) & not(pxQueue: queues_msg_empty) & n_receiving: POW(TASK) & n_first: TASK & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: n_receiving & blocked-{first_receiving(pxQueue)}: FIN(TASK) & blocked-{first_receiving(pxQueue)}: POW(tasks) & unblocked: POW(blocked-{first_receiving(pxQueue)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_receiving(pxQueue)} = {} & blocked-{first_receiving(pxQueue)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_receiving(pxQueue)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = first_receiving(pxQueue)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & not(queue_receiving(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(pxQueue)} & running$0: n_runable & not(first_receiving(pxQueue): suspended) & not(first_receiving(pxQueue): blocked) & pxQueue: queues_msg_empty & n_receiving: POW(TASK) & n_first: TASK & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: n_receiving & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & queues_msg_empty-{pxQueue}: POW(queues_msg) & queues_msg_full\/{pxQueue}/\queues_msg_empty-{pxQueue} = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full\/{pxQueue} => not(que: queues_msg_empty & not(que = pxQueue))) & !que.(que: queues_msg & (que: queues_msg_empty & not(que = pxQueue)) => not(que: queues_msg_full) & not(que = pxQueue)) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & not(queue_receiving(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(pxQueue)} & running$0: n_runable & not(first_receiving(pxQueue): suspended) & not(first_receiving(pxQueue): blocked) & not(pxQueue: queues_msg_empty) & n_receiving: POW(TASK) & n_first: TASK & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: n_receiving & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & queues_msg_full\/{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full\/{pxQueue} => not(que: queues_msg_empty)) & !que.(que: queues_msg & que: queues_msg_empty => not(que: queues_msg_full) & not(que = pxQueue)) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & not(queue_receiving(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(pxQueue)} & running$0: n_runable & not(first_receiving(pxQueue): suspended) & not(first_receiving(pxQueue): blocked) & pxQueue: queues_msg_empty & n_receiving: POW(TASK) & n_first: TASK & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: n_receiving & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & queues_msg_empty-{pxQueue}: POW(queues_msg) & queues_msg_full/\queues_msg_empty-{pxQueue} = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full => not(que: queues_msg_empty & not(que = pxQueue))) & !que.(que: queues_msg & (que: queues_msg_empty & not(que = pxQueue)) => not(que: queues_msg_full)) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & not(queue_receiving(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(pxQueue)} & running$0: n_runable & not(first_receiving(pxQueue): suspended) & not(first_receiving(pxQueue): blocked) & not(pxQueue: queues_msg_empty) & n_receiving: POW(TASK) & n_first: TASK & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: n_receiving & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & not(queue_receiving(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(pxQueue)} & first_receiving(pxQueue): suspended & first_receiving(pxQueue): blocked & first_receiving(pxQueue): unblocked & pxQueue: queues_msg_empty & n_receiving: POW(TASK) & n_first: TASK & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: n_receiving & blocked-{first_receiving(pxQueue)}: FIN(TASK) & blocked-{first_receiving(pxQueue)}: POW(tasks) & unblocked-{first_receiving(pxQueue)}: FIN(TASK) & unblocked-{first_receiving(pxQueue)}: POW(blocked-{first_receiving(pxQueue)}) & n_runable: FIN(TASK) & suspended-{first_receiving(pxQueue)}: FIN(TASK) & suspended-{first_receiving(pxQueue)}: POW(tasks) & n_runable/\blocked-{first_receiving(pxQueue)} = {} & blocked-{first_receiving(pxQueue)}/\suspended-{first_receiving(pxQueue)} = {} & suspended-{first_receiving(pxQueue)}/\n_runable = {} & tasks = suspended-{first_receiving(pxQueue)}\/blocked-{first_receiving(pxQueue)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & queues_msg_empty-{pxQueue}: POW(queues_msg) & queues_msg_full\/{pxQueue}/\queues_msg_empty-{pxQueue} = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & (active = TRUE => not(running: suspended & not(running = first_receiving(pxQueue)))) & (active = TRUE => not(running: blocked & not(running = first_receiving(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(pxQueue)))) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full\/{pxQueue} => not(que: queues_msg_empty & not(que = pxQueue))) & !que.(que: queues_msg & (que: queues_msg_empty & not(que = pxQueue)) => not(que: queues_msg_full) & not(que = pxQueue)) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & not(queue_receiving(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(pxQueue)} & first_receiving(pxQueue): suspended & first_receiving(pxQueue): blocked & first_receiving(pxQueue): unblocked & not(pxQueue: queues_msg_empty) & n_receiving: POW(TASK) & n_first: TASK & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: n_receiving & blocked-{first_receiving(pxQueue)}: FIN(TASK) & blocked-{first_receiving(pxQueue)}: POW(tasks) & unblocked-{first_receiving(pxQueue)}: FIN(TASK) & unblocked-{first_receiving(pxQueue)}: POW(blocked-{first_receiving(pxQueue)}) & n_runable: FIN(TASK) & suspended-{first_receiving(pxQueue)}: FIN(TASK) & suspended-{first_receiving(pxQueue)}: POW(tasks) & n_runable/\blocked-{first_receiving(pxQueue)} = {} & blocked-{first_receiving(pxQueue)}/\suspended-{first_receiving(pxQueue)} = {} & suspended-{first_receiving(pxQueue)}/\n_runable = {} & tasks = suspended-{first_receiving(pxQueue)}\/blocked-{first_receiving(pxQueue)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & queues_msg_full\/{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & (active = TRUE => not(running: suspended & not(running = first_receiving(pxQueue)))) & (active = TRUE => not(running: blocked & not(running = first_receiving(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(pxQueue)))) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full\/{pxQueue} => not(que: queues_msg_empty)) & !que.(que: queues_msg & que: queues_msg_empty => not(que: queues_msg_full) & not(que = pxQueue)) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & not(queue_receiving(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(pxQueue)} & first_receiving(pxQueue): suspended & first_receiving(pxQueue): blocked & first_receiving(pxQueue): unblocked & pxQueue: queues_msg_empty & n_receiving: POW(TASK) & n_first: TASK & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: n_receiving & blocked-{first_receiving(pxQueue)}: FIN(TASK) & blocked-{first_receiving(pxQueue)}: POW(tasks) & unblocked-{first_receiving(pxQueue)}: FIN(TASK) & unblocked-{first_receiving(pxQueue)}: POW(blocked-{first_receiving(pxQueue)}) & n_runable: FIN(TASK) & suspended-{first_receiving(pxQueue)}: FIN(TASK) & suspended-{first_receiving(pxQueue)}: POW(tasks) & n_runable/\blocked-{first_receiving(pxQueue)} = {} & blocked-{first_receiving(pxQueue)}/\suspended-{first_receiving(pxQueue)} = {} & suspended-{first_receiving(pxQueue)}/\n_runable = {} & tasks = suspended-{first_receiving(pxQueue)}\/blocked-{first_receiving(pxQueue)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & queues_msg_empty-{pxQueue}: POW(queues_msg) & queues_msg_full/\queues_msg_empty-{pxQueue} = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & (active = TRUE => not(running: suspended & not(running = first_receiving(pxQueue)))) & (active = TRUE => not(running: blocked & not(running = first_receiving(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(pxQueue)))) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full => not(que: queues_msg_empty & not(que = pxQueue))) & !que.(que: queues_msg & (que: queues_msg_empty & not(que = pxQueue)) => not(que: queues_msg_full)) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & not(queue_receiving(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(pxQueue)} & first_receiving(pxQueue): suspended & first_receiving(pxQueue): blocked & first_receiving(pxQueue): unblocked & not(pxQueue: queues_msg_empty) & n_receiving: POW(TASK) & n_first: TASK & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: n_receiving & blocked-{first_receiving(pxQueue)}: FIN(TASK) & blocked-{first_receiving(pxQueue)}: POW(tasks) & unblocked-{first_receiving(pxQueue)}: FIN(TASK) & unblocked-{first_receiving(pxQueue)}: POW(blocked-{first_receiving(pxQueue)}) & n_runable: FIN(TASK) & suspended-{first_receiving(pxQueue)}: FIN(TASK) & suspended-{first_receiving(pxQueue)}: POW(tasks) & n_runable/\blocked-{first_receiving(pxQueue)} = {} & blocked-{first_receiving(pxQueue)}/\suspended-{first_receiving(pxQueue)} = {} & suspended-{first_receiving(pxQueue)}/\n_runable = {} & tasks = suspended-{first_receiving(pxQueue)}\/blocked-{first_receiving(pxQueue)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & (active = TRUE => not(running: suspended & not(running = first_receiving(pxQueue)))) & (active = TRUE => not(running: blocked & not(running = first_receiving(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(pxQueue)))) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & not(queue_receiving(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(pxQueue)} & first_receiving(pxQueue): suspended & first_receiving(pxQueue): blocked & not(first_receiving(pxQueue): unblocked) & pxQueue: queues_msg_empty & n_receiving: POW(TASK) & n_first: TASK & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: n_receiving & blocked-{first_receiving(pxQueue)}: FIN(TASK) & blocked-{first_receiving(pxQueue)}: POW(tasks) & unblocked: POW(blocked-{first_receiving(pxQueue)}) & n_runable: FIN(TASK) & suspended-{first_receiving(pxQueue)}: FIN(TASK) & suspended-{first_receiving(pxQueue)}: POW(tasks) & n_runable/\blocked-{first_receiving(pxQueue)} = {} & blocked-{first_receiving(pxQueue)}/\suspended-{first_receiving(pxQueue)} = {} & suspended-{first_receiving(pxQueue)}/\n_runable = {} & tasks = suspended-{first_receiving(pxQueue)}\/blocked-{first_receiving(pxQueue)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & queues_msg_empty-{pxQueue}: POW(queues_msg) & queues_msg_full\/{pxQueue}/\queues_msg_empty-{pxQueue} = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & (active = TRUE => not(running: suspended & not(running = first_receiving(pxQueue)))) & (active = TRUE => not(running: blocked & not(running = first_receiving(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(pxQueue)))) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full\/{pxQueue} => not(que: queues_msg_empty & not(que = pxQueue))) & !que.(que: queues_msg & (que: queues_msg_empty & not(que = pxQueue)) => not(que: queues_msg_full) & not(que = pxQueue)) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & not(queue_receiving(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(pxQueue)} & first_receiving(pxQueue): suspended & first_receiving(pxQueue): blocked & not(first_receiving(pxQueue): unblocked) & not(pxQueue: queues_msg_empty) & n_receiving: POW(TASK) & n_first: TASK & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: n_receiving & blocked-{first_receiving(pxQueue)}: FIN(TASK) & blocked-{first_receiving(pxQueue)}: POW(tasks) & unblocked: POW(blocked-{first_receiving(pxQueue)}) & n_runable: FIN(TASK) & suspended-{first_receiving(pxQueue)}: FIN(TASK) & suspended-{first_receiving(pxQueue)}: POW(tasks) & n_runable/\blocked-{first_receiving(pxQueue)} = {} & blocked-{first_receiving(pxQueue)}/\suspended-{first_receiving(pxQueue)} = {} & suspended-{first_receiving(pxQueue)}/\n_runable = {} & tasks = suspended-{first_receiving(pxQueue)}\/blocked-{first_receiving(pxQueue)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & queues_msg_full\/{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & (active = TRUE => not(running: suspended & not(running = first_receiving(pxQueue)))) & (active = TRUE => not(running: blocked & not(running = first_receiving(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(pxQueue)))) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full\/{pxQueue} => not(que: queues_msg_empty)) & !que.(que: queues_msg & que: queues_msg_empty => not(que: queues_msg_full) & not(que = pxQueue)) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & not(queue_receiving(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(pxQueue)} & first_receiving(pxQueue): suspended & first_receiving(pxQueue): blocked & not(first_receiving(pxQueue): unblocked) & pxQueue: queues_msg_empty & n_receiving: POW(TASK) & n_first: TASK & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: n_receiving & blocked-{first_receiving(pxQueue)}: FIN(TASK) & blocked-{first_receiving(pxQueue)}: POW(tasks) & unblocked: POW(blocked-{first_receiving(pxQueue)}) & n_runable: FIN(TASK) & suspended-{first_receiving(pxQueue)}: FIN(TASK) & suspended-{first_receiving(pxQueue)}: POW(tasks) & n_runable/\blocked-{first_receiving(pxQueue)} = {} & blocked-{first_receiving(pxQueue)}/\suspended-{first_receiving(pxQueue)} = {} & suspended-{first_receiving(pxQueue)}/\n_runable = {} & tasks = suspended-{first_receiving(pxQueue)}\/blocked-{first_receiving(pxQueue)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & queues_msg_empty-{pxQueue}: POW(queues_msg) & queues_msg_full/\queues_msg_empty-{pxQueue} = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & (active = TRUE => not(running: suspended & not(running = first_receiving(pxQueue)))) & (active = TRUE => not(running: blocked & not(running = first_receiving(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(pxQueue)))) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full => not(que: queues_msg_empty & not(que = pxQueue))) & !que.(que: queues_msg & (que: queues_msg_empty & not(que = pxQueue)) => not(que: queues_msg_full)) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & not(queue_receiving(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(pxQueue)} & first_receiving(pxQueue): suspended & first_receiving(pxQueue): blocked & not(first_receiving(pxQueue): unblocked) & not(pxQueue: queues_msg_empty) & n_receiving: POW(TASK) & n_first: TASK & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: n_receiving & blocked-{first_receiving(pxQueue)}: FIN(TASK) & blocked-{first_receiving(pxQueue)}: POW(tasks) & unblocked: POW(blocked-{first_receiving(pxQueue)}) & n_runable: FIN(TASK) & suspended-{first_receiving(pxQueue)}: FIN(TASK) & suspended-{first_receiving(pxQueue)}: POW(tasks) & n_runable/\blocked-{first_receiving(pxQueue)} = {} & blocked-{first_receiving(pxQueue)}/\suspended-{first_receiving(pxQueue)} = {} & suspended-{first_receiving(pxQueue)}/\n_runable = {} & tasks = suspended-{first_receiving(pxQueue)}\/blocked-{first_receiving(pxQueue)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & (active = TRUE => not(running: suspended & not(running = first_receiving(pxQueue)))) & (active = TRUE => not(running: blocked & not(running = first_receiving(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(pxQueue)))) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & not(queue_receiving(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(pxQueue)} & first_receiving(pxQueue): suspended & not(first_receiving(pxQueue): blocked) & pxQueue: queues_msg_empty & n_receiving: POW(TASK) & n_first: TASK & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: n_receiving & n_runable: FIN(TASK) & suspended-{first_receiving(pxQueue)}: FIN(TASK) & suspended-{first_receiving(pxQueue)}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{first_receiving(pxQueue)} = {} & suspended-{first_receiving(pxQueue)}/\n_runable = {} & tasks = suspended-{first_receiving(pxQueue)}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & queues_msg_empty-{pxQueue}: POW(queues_msg) & queues_msg_full\/{pxQueue}/\queues_msg_empty-{pxQueue} = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & (active = TRUE => not(running: suspended & not(running = first_receiving(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full\/{pxQueue} => not(que: queues_msg_empty & not(que = pxQueue))) & !que.(que: queues_msg & (que: queues_msg_empty & not(que = pxQueue)) => not(que: queues_msg_full) & not(que = pxQueue)) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & not(queue_receiving(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(pxQueue)} & first_receiving(pxQueue): suspended & not(first_receiving(pxQueue): blocked) & not(pxQueue: queues_msg_empty) & n_receiving: POW(TASK) & n_first: TASK & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: n_receiving & n_runable: FIN(TASK) & suspended-{first_receiving(pxQueue)}: FIN(TASK) & suspended-{first_receiving(pxQueue)}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{first_receiving(pxQueue)} = {} & suspended-{first_receiving(pxQueue)}/\n_runable = {} & tasks = suspended-{first_receiving(pxQueue)}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & queues_msg_full\/{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & (active = TRUE => not(running: suspended & not(running = first_receiving(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full\/{pxQueue} => not(que: queues_msg_empty)) & !que.(que: queues_msg & que: queues_msg_empty => not(que: queues_msg_full) & not(que = pxQueue)) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & not(queue_receiving(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(pxQueue)} & first_receiving(pxQueue): suspended & not(first_receiving(pxQueue): blocked) & pxQueue: queues_msg_empty & n_receiving: POW(TASK) & n_first: TASK & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: n_receiving & n_runable: FIN(TASK) & suspended-{first_receiving(pxQueue)}: FIN(TASK) & suspended-{first_receiving(pxQueue)}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{first_receiving(pxQueue)} = {} & suspended-{first_receiving(pxQueue)}/\n_runable = {} & tasks = suspended-{first_receiving(pxQueue)}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & queues_msg_empty-{pxQueue}: POW(queues_msg) & queues_msg_full/\queues_msg_empty-{pxQueue} = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & (active = TRUE => not(running: suspended & not(running = first_receiving(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full => not(que: queues_msg_empty & not(que = pxQueue))) & !que.(que: queues_msg & (que: queues_msg_empty & not(que = pxQueue)) => not(que: queues_msg_full)) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & not(queue_receiving(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(pxQueue)} & first_receiving(pxQueue): suspended & not(first_receiving(pxQueue): blocked) & not(pxQueue: queues_msg_empty) & n_receiving: POW(TASK) & n_first: TASK & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: n_receiving & n_runable: FIN(TASK) & suspended-{first_receiving(pxQueue)}: FIN(TASK) & suspended-{first_receiving(pxQueue)}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{first_receiving(pxQueue)} = {} & suspended-{first_receiving(pxQueue)}/\n_runable = {} & tasks = suspended-{first_receiving(pxQueue)}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & (active = TRUE => not(running: suspended & not(running = first_receiving(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & not(queue_receiving(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(pxQueue)} & not(first_receiving(pxQueue): suspended) & first_receiving(pxQueue): blocked & first_receiving(pxQueue): unblocked & pxQueue: queues_msg_empty & n_receiving: POW(TASK) & n_first: TASK & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: n_receiving & blocked-{first_receiving(pxQueue)}: FIN(TASK) & blocked-{first_receiving(pxQueue)}: POW(tasks) & unblocked-{first_receiving(pxQueue)}: FIN(TASK) & unblocked-{first_receiving(pxQueue)}: POW(blocked-{first_receiving(pxQueue)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_receiving(pxQueue)} = {} & blocked-{first_receiving(pxQueue)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_receiving(pxQueue)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & queues_msg_empty-{pxQueue}: POW(queues_msg) & queues_msg_full\/{pxQueue}/\queues_msg_empty-{pxQueue} = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & (active = TRUE => not(running: blocked & not(running = first_receiving(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full\/{pxQueue} => not(que: queues_msg_empty & not(que = pxQueue))) & !que.(que: queues_msg & (que: queues_msg_empty & not(que = pxQueue)) => not(que: queues_msg_full) & not(que = pxQueue)) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & not(queue_receiving(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(pxQueue)} & not(first_receiving(pxQueue): suspended) & first_receiving(pxQueue): blocked & first_receiving(pxQueue): unblocked & not(pxQueue: queues_msg_empty) & n_receiving: POW(TASK) & n_first: TASK & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: n_receiving & blocked-{first_receiving(pxQueue)}: FIN(TASK) & blocked-{first_receiving(pxQueue)}: POW(tasks) & unblocked-{first_receiving(pxQueue)}: FIN(TASK) & unblocked-{first_receiving(pxQueue)}: POW(blocked-{first_receiving(pxQueue)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_receiving(pxQueue)} = {} & blocked-{first_receiving(pxQueue)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_receiving(pxQueue)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & queues_msg_full\/{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & (active = TRUE => not(running: blocked & not(running = first_receiving(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full\/{pxQueue} => not(que: queues_msg_empty)) & !que.(que: queues_msg & que: queues_msg_empty => not(que: queues_msg_full) & not(que = pxQueue)) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & not(queue_receiving(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(pxQueue)} & not(first_receiving(pxQueue): suspended) & first_receiving(pxQueue): blocked & first_receiving(pxQueue): unblocked & pxQueue: queues_msg_empty & n_receiving: POW(TASK) & n_first: TASK & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: n_receiving & blocked-{first_receiving(pxQueue)}: FIN(TASK) & blocked-{first_receiving(pxQueue)}: POW(tasks) & unblocked-{first_receiving(pxQueue)}: FIN(TASK) & unblocked-{first_receiving(pxQueue)}: POW(blocked-{first_receiving(pxQueue)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_receiving(pxQueue)} = {} & blocked-{first_receiving(pxQueue)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_receiving(pxQueue)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & queues_msg_empty-{pxQueue}: POW(queues_msg) & queues_msg_full/\queues_msg_empty-{pxQueue} = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & (active = TRUE => not(running: blocked & not(running = first_receiving(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full => not(que: queues_msg_empty & not(que = pxQueue))) & !que.(que: queues_msg & (que: queues_msg_empty & not(que = pxQueue)) => not(que: queues_msg_full)) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & not(queue_receiving(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(pxQueue)} & not(first_receiving(pxQueue): suspended) & first_receiving(pxQueue): blocked & first_receiving(pxQueue): unblocked & not(pxQueue: queues_msg_empty) & n_receiving: POW(TASK) & n_first: TASK & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: n_receiving & blocked-{first_receiving(pxQueue)}: FIN(TASK) & blocked-{first_receiving(pxQueue)}: POW(tasks) & unblocked-{first_receiving(pxQueue)}: FIN(TASK) & unblocked-{first_receiving(pxQueue)}: POW(blocked-{first_receiving(pxQueue)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_receiving(pxQueue)} = {} & blocked-{first_receiving(pxQueue)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_receiving(pxQueue)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & (active = TRUE => not(running: blocked & not(running = first_receiving(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & not(queue_receiving(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(pxQueue)} & not(first_receiving(pxQueue): suspended) & first_receiving(pxQueue): blocked & not(first_receiving(pxQueue): unblocked) & pxQueue: queues_msg_empty & n_receiving: POW(TASK) & n_first: TASK & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: n_receiving & blocked-{first_receiving(pxQueue)}: FIN(TASK) & blocked-{first_receiving(pxQueue)}: POW(tasks) & unblocked: POW(blocked-{first_receiving(pxQueue)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_receiving(pxQueue)} = {} & blocked-{first_receiving(pxQueue)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_receiving(pxQueue)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & queues_msg_empty-{pxQueue}: POW(queues_msg) & queues_msg_full\/{pxQueue}/\queues_msg_empty-{pxQueue} = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & (active = TRUE => not(running: blocked & not(running = first_receiving(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full\/{pxQueue} => not(que: queues_msg_empty & not(que = pxQueue))) & !que.(que: queues_msg & (que: queues_msg_empty & not(que = pxQueue)) => not(que: queues_msg_full) & not(que = pxQueue)) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & not(queue_receiving(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(pxQueue)} & not(first_receiving(pxQueue): suspended) & first_receiving(pxQueue): blocked & not(first_receiving(pxQueue): unblocked) & not(pxQueue: queues_msg_empty) & n_receiving: POW(TASK) & n_first: TASK & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: n_receiving & blocked-{first_receiving(pxQueue)}: FIN(TASK) & blocked-{first_receiving(pxQueue)}: POW(tasks) & unblocked: POW(blocked-{first_receiving(pxQueue)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_receiving(pxQueue)} = {} & blocked-{first_receiving(pxQueue)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_receiving(pxQueue)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & queues_msg_full\/{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & (active = TRUE => not(running: blocked & not(running = first_receiving(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full\/{pxQueue} => not(que: queues_msg_empty)) & !que.(que: queues_msg & que: queues_msg_empty => not(que: queues_msg_full) & not(que = pxQueue)) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & not(queue_receiving(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(pxQueue)} & not(first_receiving(pxQueue): suspended) & first_receiving(pxQueue): blocked & not(first_receiving(pxQueue): unblocked) & pxQueue: queues_msg_empty & n_receiving: POW(TASK) & n_first: TASK & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: n_receiving & blocked-{first_receiving(pxQueue)}: FIN(TASK) & blocked-{first_receiving(pxQueue)}: POW(tasks) & unblocked: POW(blocked-{first_receiving(pxQueue)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_receiving(pxQueue)} = {} & blocked-{first_receiving(pxQueue)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_receiving(pxQueue)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & queues_msg_empty-{pxQueue}: POW(queues_msg) & queues_msg_full/\queues_msg_empty-{pxQueue} = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & (active = TRUE => not(running: blocked & not(running = first_receiving(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full => not(que: queues_msg_empty & not(que = pxQueue))) & !que.(que: queues_msg & (que: queues_msg_empty & not(que = pxQueue)) => not(que: queues_msg_full)) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & not(queue_receiving(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(pxQueue)} & not(first_receiving(pxQueue): suspended) & first_receiving(pxQueue): blocked & not(first_receiving(pxQueue): unblocked) & not(pxQueue: queues_msg_empty) & n_receiving: POW(TASK) & n_first: TASK & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: n_receiving & blocked-{first_receiving(pxQueue)}: FIN(TASK) & blocked-{first_receiving(pxQueue)}: POW(tasks) & unblocked: POW(blocked-{first_receiving(pxQueue)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_receiving(pxQueue)} = {} & blocked-{first_receiving(pxQueue)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_receiving(pxQueue)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & (active = TRUE => not(running: blocked & not(running = first_receiving(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & not(queue_receiving(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(pxQueue)} & not(first_receiving(pxQueue): suspended) & not(first_receiving(pxQueue): blocked) & pxQueue: queues_msg_empty & n_receiving: POW(TASK) & n_first: TASK & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: n_receiving & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & queues_msg_empty-{pxQueue}: POW(queues_msg) & queues_msg_full\/{pxQueue}/\queues_msg_empty-{pxQueue} = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full\/{pxQueue} => not(que: queues_msg_empty & not(que = pxQueue))) & !que.(que: queues_msg & (que: queues_msg_empty & not(que = pxQueue)) => not(que: queues_msg_full) & not(que = pxQueue)) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & not(queue_receiving(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(pxQueue)} & not(first_receiving(pxQueue): suspended) & not(first_receiving(pxQueue): blocked) & not(pxQueue: queues_msg_empty) & n_receiving: POW(TASK) & n_first: TASK & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: n_receiving & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & queues_msg_full\/{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full\/{pxQueue} => not(que: queues_msg_empty)) & !que.(que: queues_msg & que: queues_msg_empty => not(que: queues_msg_full) & not(que = pxQueue)) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & not(queue_receiving(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(pxQueue)} & not(first_receiving(pxQueue): suspended) & not(first_receiving(pxQueue): blocked) & pxQueue: queues_msg_empty & n_receiving: POW(TASK) & n_first: TASK & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: n_receiving & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & queues_msg_empty-{pxQueue}: POW(queues_msg) & queues_msg_full/\queues_msg_empty-{pxQueue} = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full => not(que: queues_msg_empty & not(que = pxQueue))) & !que.(que: queues_msg & (que: queues_msg_empty & not(que = pxQueue)) => not(que: queues_msg_full)) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & not(queue_receiving(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(pxQueue)} & not(first_receiving(pxQueue): suspended) & not(first_receiving(pxQueue): blocked) & not(pxQueue: queues_msg_empty) & n_receiving: POW(TASK) & n_first: TASK & n_receiving = queue_receiving(pxQueue)-{first_receiving(pxQueue)} & n_first: n_receiving & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->n_receiving}) & first_receiving<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->n_first}) = dom(queue_receiving<+{pxQueue|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->n_first}) & not((queue_receiving<+{pxQueue|->n_receiving})(q1) = {}) => (first_receiving<+{pxQueue|->n_first})(q1): (queue_receiving<+{pxQueue|->n_receiving})(q1)) & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->n_receiving})(q1) => not(tk: (queue_receiving<+{pxQueue|->n_receiving})(q2))) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & pxQueue: queues_msg_full);
  (TICK_INCREMENT(xTicksToWait,tickCount): TICK);
  ("`Local hypotheses'" & pxQueue: queues_msg_full & q1: queues);
  (not(running: queue_sending(q1)));
  (not(running: queue_receiving(q1)));
  (running: tasks);
  ("`Local hypotheses'" & pxQueue: queues_msg_full & queue_sending(pxQueue) = {} & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & blocked\/{running}: FIN(TASK) & running: tasks & unblocked: POW(blocked\/{running}) & n_runable: FIN(TASK) & not(running: n_runable) & n_runable/\blocked = {} & blocked\/{running}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/(blocked\/{running})\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})}) & first_sending<+{pxQueue|->running}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->running}) = dom(queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->running}) & not((queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q1) = {}) => (first_sending<+{pxQueue|->running})(q1): (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q1) => not(tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked) & not(running$0 = running)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ((queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(que): POW(blocked\/{running}\/suspended));
  ("`Local hypotheses'" & pxQueue: queues_msg_full & queue_sending(pxQueue) = {} & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & blocked\/{running}: FIN(TASK) & running: tasks & unblocked: POW(blocked\/{running}) & n_runable: FIN(TASK) & not(running: n_runable) & n_runable/\blocked = {} & blocked\/{running}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/(blocked\/{running})\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})}) & first_sending<+{pxQueue|->running}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->running}) = dom(queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->running}) & not((queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q1) = {}) => (first_sending<+{pxQueue|->running})(q1): (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q1) => not(tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked) & not(running$0 = running)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ((queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(mt) = {});
  ("`Local hypotheses'" & pxQueue: queues_msg_full & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & blocked\/{running}: FIN(TASK) & running: tasks & unblocked: POW(blocked\/{running}) & n_runable: FIN(TASK) & not(running: n_runable) & n_runable/\blocked = {} & blocked\/{running}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/(blocked\/{running})\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})}) & dom(first_sending) = dom(queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})}) & !q1.(q1: queues & q1: dom(first_sending) & not((queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q1) = {}) => first_sending(q1): (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q1) => not(tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked) & not(running$0 = running)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & pxQueue: queues_msg_full & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & blocked\/{running}: FIN(TASK) & running: tasks & unblocked: POW(blocked\/{running}) & n_runable: FIN(TASK) & not(running: n_runable) & n_runable/\blocked = {} & blocked\/{running}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/(blocked\/{running})\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})}) & dom(first_sending) = dom(queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})}) & !q1.(q1: queues & q1: dom(first_sending) & not((queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q1) = {}) => first_sending(q1): (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q1) => not(tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked) & not(running$0 = running)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & pxQueue: queues_msg_full & queue_sending(pxQueue) = {} & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & n_runable: FIN(TASK) & suspended\/{running}: FIN(TASK) & running: tasks & n_runable/\blocked = {} & suspended\/{running}/\n_runable = {} & tasks = suspended\/{running}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})}) & first_sending<+{pxQueue|->running}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->running}) = dom(queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->running}) & not((queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q1) = {}) => (first_sending<+{pxQueue|->running})(q1): (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q1) => not(tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q2))) & (active = TRUE => not(running$0: suspended) & not(running$0 = running)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ((queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(que): POW(blocked\/(suspended\/{running})));
  (queue_receiving(que): POW(blocked\/(suspended\/{running})));
  ("`Local hypotheses'" & pxQueue: queues_msg_full & queue_sending(pxQueue) = {} & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & n_runable: FIN(TASK) & suspended\/{running}: FIN(TASK) & running: tasks & n_runable/\blocked = {} & suspended\/{running}/\n_runable = {} & tasks = suspended\/{running}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})}) & first_sending<+{pxQueue|->running}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->running}) = dom(queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->running}) & not((queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q1) = {}) => (first_sending<+{pxQueue|->running})(q1): (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q1) => not(tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q2))) & (active = TRUE => not(running$0: suspended) & not(running$0 = running)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & pxQueue: queues_msg_full & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & n_runable: FIN(TASK) & suspended\/{running}: FIN(TASK) & running: tasks & n_runable/\blocked = {} & suspended\/{running}/\n_runable = {} & tasks = suspended\/{running}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})}) & dom(first_sending) = dom(queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})}) & !q1.(q1: queues & q1: dom(first_sending) & not((queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q1) = {}) => first_sending(q1): (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q1) => not(tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q2))) & (active = TRUE => not(running$0: suspended) & not(running$0 = running)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & pxQueue: queues_msg_full & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & n_runable: FIN(TASK) & suspended\/{running}: FIN(TASK) & running: tasks & n_runable/\blocked = {} & suspended\/{running}/\n_runable = {} & tasks = suspended\/{running}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})}) & dom(first_sending) = dom(queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})}) & !q1.(q1: queues & q1: dom(first_sending) & not((queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q1) = {}) => first_sending(q1): (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q1) => not(tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q2))) & (active = TRUE => not(running$0: suspended) & not(running$0 = running)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`receiveItem preconditions in this component'" & active = TRUE & not(running = idle) & pxQueue: QUEUE & pxQueue: queues_msg & xTicksToWait: TICK & justPeeking: BOOL & running: runable & not(running = TASK_NULL));
  ("`Local hypotheses'" & pxQueue: queues_msg_empty);
  ("`Local hypotheses'" & pxQueue: queues_msg_empty & q1: queues);
  ("`Local hypotheses'" & pxQueue: queues_msg_empty & queue_receiving(pxQueue) = {} & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & blocked\/{running}: FIN(TASK) & running: tasks & unblocked: POW(blocked\/{running}) & n_runable: FIN(TASK) & not(running: n_runable) & n_runable/\blocked = {} & blocked\/{running}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/(blocked\/{running})\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})}) & first_receiving<+{pxQueue|->running}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->running}) = dom(queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->running}) & not((queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q1) = {}) => (first_receiving<+{pxQueue|->running})(q1): (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q1) => not(tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked) & not(running$0 = running)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ((queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(que): POW(blocked\/{running}\/suspended));
  ("`Local hypotheses'" & pxQueue: queues_msg_empty & not(queue_receiving(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & blocked\/{running}: FIN(TASK) & running: tasks & unblocked: POW(blocked\/{running}) & n_runable: FIN(TASK) & not(running: n_runable) & n_runable/\blocked = {} & blocked\/{running}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/(blocked\/{running})\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})}) & dom(first_receiving) = dom(queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})}) & !q1.(q1: queues & q1: dom(first_receiving) & not((queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q1) = {}) => first_receiving(q1): (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q1) => not(tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked) & not(running$0 = running)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & pxQueue: queues_msg_empty & queue_receiving(pxQueue) = {} & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & n_runable: FIN(TASK) & suspended\/{running}: FIN(TASK) & running: tasks & n_runable/\blocked = {} & suspended\/{running}/\n_runable = {} & tasks = suspended\/{running}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})}) & first_receiving<+{pxQueue|->running}: QUEUE +-> TASK & dom(first_receiving<+{pxQueue|->running}) = dom(queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})}) & !q1.(q1: queues & q1: dom(first_receiving<+{pxQueue|->running}) & not((queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q1) = {}) => (first_receiving<+{pxQueue|->running})(q1): (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q1) => not(tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q2))) & (active = TRUE => not(running$0: suspended) & not(running$0 = running)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  (queue_sending(que): POW(blocked\/(suspended\/{running})));
  ((queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(que): POW(blocked\/(suspended\/{running})));
  ("`Local hypotheses'" & pxQueue: queues_msg_empty & not(queue_receiving(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & n_runable: FIN(TASK) & suspended\/{running}: FIN(TASK) & running: tasks & n_runable/\blocked = {} & suspended\/{running}/\n_runable = {} & tasks = suspended\/{running}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})}) & dom(first_receiving) = dom(queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})}) & !q1.(q1: queues & q1: dom(first_receiving) & not((queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q1) = {}) => first_receiving(q1): (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q1) => not(tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q2))) & (active = TRUE => not(running$0: suspended) & not(running$0 = running)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}));
  (first_sending(pxQueue): TASK);
  (first_sending(pxQueue): blocked\/suspended);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & running$0: n_runable & first_sending(pxQueue): suspended & first_sending(pxQueue): blocked & first_sending(pxQueue): unblocked & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & pxQueue: queues_msg_full & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked-{first_sending(pxQueue)}: FIN(TASK) & unblocked-{first_sending(pxQueue)}: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & suspended-{first_sending(pxQueue)}: FIN(TASK) & suspended-{first_sending(pxQueue)}: POW(tasks) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended-{first_sending(pxQueue)} = {} & suspended-{first_sending(pxQueue)}/\n_runable = {} & tasks = suspended-{first_sending(pxQueue)}\/blocked-{first_sending(pxQueue)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(pxQueue)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & (que: queues_msg_full & not(que = pxQueue)) => not(que: queues_msg_empty) & not(que = pxQueue)) & !que.(que: queues_msg & que: queues_msg_empty\/{pxQueue} => not(que: queues_msg_full & not(que = pxQueue))) & que: queues);
  ((queue_sending<+{pxQueue|->n_sending})(que): POW(blocked-{first_sending(pxQueue)}\/suspended-{first_sending(pxQueue)}));
  (queue_receiving(que): POW(blocked-{first_sending(pxQueue)}\/suspended-{first_sending(pxQueue)}));
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & running$0: n_runable & first_sending(pxQueue): suspended & first_sending(pxQueue): blocked & first_sending(pxQueue): unblocked & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & pxQueue: queues_msg_full & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked-{first_sending(pxQueue)}: FIN(TASK) & unblocked-{first_sending(pxQueue)}: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & suspended-{first_sending(pxQueue)}: FIN(TASK) & suspended-{first_sending(pxQueue)}: POW(tasks) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended-{first_sending(pxQueue)} = {} & suspended-{first_sending(pxQueue)}/\n_runable = {} & tasks = suspended-{first_sending(pxQueue)}\/blocked-{first_sending(pxQueue)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(pxQueue)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & (que: queues_msg_full & not(que = pxQueue)) => not(que: queues_msg_empty) & not(que = pxQueue)) & !que.(que: queues_msg & que: queues_msg_empty\/{pxQueue} => not(que: queues_msg_full & not(que = pxQueue))) & mt: mutexes);
  ((queue_sending<+{pxQueue|->n_sending})(mt) = {});
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & running$0: n_runable & first_sending(pxQueue): suspended & first_sending(pxQueue): blocked & first_sending(pxQueue): unblocked & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & not(pxQueue: queues_msg_full) & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked-{first_sending(pxQueue)}: FIN(TASK) & unblocked-{first_sending(pxQueue)}: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & suspended-{first_sending(pxQueue)}: FIN(TASK) & suspended-{first_sending(pxQueue)}: POW(tasks) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended-{first_sending(pxQueue)} = {} & suspended-{first_sending(pxQueue)}/\n_runable = {} & tasks = suspended-{first_sending(pxQueue)}\/blocked-{first_sending(pxQueue)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(pxQueue)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full => not(que: queues_msg_empty) & not(que = pxQueue)) & !que.(que: queues_msg & que: queues_msg_empty\/{pxQueue} => not(que: queues_msg_full)) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & running$0: n_runable & first_sending(pxQueue): suspended & first_sending(pxQueue): blocked & first_sending(pxQueue): unblocked & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & not(pxQueue: queues_msg_full) & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked-{first_sending(pxQueue)}: FIN(TASK) & unblocked-{first_sending(pxQueue)}: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & suspended-{first_sending(pxQueue)}: FIN(TASK) & suspended-{first_sending(pxQueue)}: POW(tasks) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended-{first_sending(pxQueue)} = {} & suspended-{first_sending(pxQueue)}/\n_runable = {} & tasks = suspended-{first_sending(pxQueue)}\/blocked-{first_sending(pxQueue)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(pxQueue)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full => not(que: queues_msg_empty) & not(que = pxQueue)) & !que.(que: queues_msg & que: queues_msg_empty\/{pxQueue} => not(que: queues_msg_full)) & mt: mutexes);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & running$0: n_runable & first_sending(pxQueue): suspended & first_sending(pxQueue): blocked & first_sending(pxQueue): unblocked & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & pxQueue: queues_msg_full & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked-{first_sending(pxQueue)}: FIN(TASK) & unblocked-{first_sending(pxQueue)}: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & suspended-{first_sending(pxQueue)}: FIN(TASK) & suspended-{first_sending(pxQueue)}: POW(tasks) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended-{first_sending(pxQueue)} = {} & suspended-{first_sending(pxQueue)}/\n_runable = {} & tasks = suspended-{first_sending(pxQueue)}\/blocked-{first_sending(pxQueue)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(pxQueue)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & (que: queues_msg_full & not(que = pxQueue)) => not(que: queues_msg_empty)) & !que.(que: queues_msg & que: queues_msg_empty => not(que: queues_msg_full & not(que = pxQueue))) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & running$0: n_runable & first_sending(pxQueue): suspended & first_sending(pxQueue): blocked & first_sending(pxQueue): unblocked & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & pxQueue: queues_msg_full & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked-{first_sending(pxQueue)}: FIN(TASK) & unblocked-{first_sending(pxQueue)}: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & suspended-{first_sending(pxQueue)}: FIN(TASK) & suspended-{first_sending(pxQueue)}: POW(tasks) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended-{first_sending(pxQueue)} = {} & suspended-{first_sending(pxQueue)}/\n_runable = {} & tasks = suspended-{first_sending(pxQueue)}\/blocked-{first_sending(pxQueue)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(pxQueue)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & (que: queues_msg_full & not(que = pxQueue)) => not(que: queues_msg_empty)) & !que.(que: queues_msg & que: queues_msg_empty => not(que: queues_msg_full & not(que = pxQueue))) & mt: mutexes);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & running$0: n_runable & first_sending(pxQueue): suspended & first_sending(pxQueue): blocked & first_sending(pxQueue): unblocked & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & not(pxQueue: queues_msg_full) & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked-{first_sending(pxQueue)}: FIN(TASK) & unblocked-{first_sending(pxQueue)}: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & suspended-{first_sending(pxQueue)}: FIN(TASK) & suspended-{first_sending(pxQueue)}: POW(tasks) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended-{first_sending(pxQueue)} = {} & suspended-{first_sending(pxQueue)}/\n_runable = {} & tasks = suspended-{first_sending(pxQueue)}\/blocked-{first_sending(pxQueue)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(pxQueue)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & running$0: n_runable & first_sending(pxQueue): suspended & first_sending(pxQueue): blocked & first_sending(pxQueue): unblocked & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & not(pxQueue: queues_msg_full) & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked-{first_sending(pxQueue)}: FIN(TASK) & unblocked-{first_sending(pxQueue)}: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & suspended-{first_sending(pxQueue)}: FIN(TASK) & suspended-{first_sending(pxQueue)}: POW(tasks) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended-{first_sending(pxQueue)} = {} & suspended-{first_sending(pxQueue)}/\n_runable = {} & tasks = suspended-{first_sending(pxQueue)}\/blocked-{first_sending(pxQueue)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(pxQueue)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & running$0: n_runable & first_sending(pxQueue): suspended & first_sending(pxQueue): blocked & not(first_sending(pxQueue): unblocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & pxQueue: queues_msg_full & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & suspended-{first_sending(pxQueue)}: FIN(TASK) & suspended-{first_sending(pxQueue)}: POW(tasks) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended-{first_sending(pxQueue)} = {} & suspended-{first_sending(pxQueue)}/\n_runable = {} & tasks = suspended-{first_sending(pxQueue)}\/blocked-{first_sending(pxQueue)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(pxQueue)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & (que: queues_msg_full & not(que = pxQueue)) => not(que: queues_msg_empty) & not(que = pxQueue)) & !que.(que: queues_msg & que: queues_msg_empty\/{pxQueue} => not(que: queues_msg_full & not(que = pxQueue))) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & running$0: n_runable & first_sending(pxQueue): suspended & first_sending(pxQueue): blocked & not(first_sending(pxQueue): unblocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & pxQueue: queues_msg_full & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & suspended-{first_sending(pxQueue)}: FIN(TASK) & suspended-{first_sending(pxQueue)}: POW(tasks) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended-{first_sending(pxQueue)} = {} & suspended-{first_sending(pxQueue)}/\n_runable = {} & tasks = suspended-{first_sending(pxQueue)}\/blocked-{first_sending(pxQueue)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(pxQueue)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & (que: queues_msg_full & not(que = pxQueue)) => not(que: queues_msg_empty) & not(que = pxQueue)) & !que.(que: queues_msg & que: queues_msg_empty\/{pxQueue} => not(que: queues_msg_full & not(que = pxQueue))) & mt: mutexes);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & running$0: n_runable & first_sending(pxQueue): suspended & first_sending(pxQueue): blocked & not(first_sending(pxQueue): unblocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & not(pxQueue: queues_msg_full) & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & suspended-{first_sending(pxQueue)}: FIN(TASK) & suspended-{first_sending(pxQueue)}: POW(tasks) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended-{first_sending(pxQueue)} = {} & suspended-{first_sending(pxQueue)}/\n_runable = {} & tasks = suspended-{first_sending(pxQueue)}\/blocked-{first_sending(pxQueue)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(pxQueue)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full => not(que: queues_msg_empty) & not(que = pxQueue)) & !que.(que: queues_msg & que: queues_msg_empty\/{pxQueue} => not(que: queues_msg_full)) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & running$0: n_runable & first_sending(pxQueue): suspended & first_sending(pxQueue): blocked & not(first_sending(pxQueue): unblocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & not(pxQueue: queues_msg_full) & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & suspended-{first_sending(pxQueue)}: FIN(TASK) & suspended-{first_sending(pxQueue)}: POW(tasks) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended-{first_sending(pxQueue)} = {} & suspended-{first_sending(pxQueue)}/\n_runable = {} & tasks = suspended-{first_sending(pxQueue)}\/blocked-{first_sending(pxQueue)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(pxQueue)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full => not(que: queues_msg_empty) & not(que = pxQueue)) & !que.(que: queues_msg & que: queues_msg_empty\/{pxQueue} => not(que: queues_msg_full)) & mt: mutexes);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & running$0: n_runable & first_sending(pxQueue): suspended & first_sending(pxQueue): blocked & not(first_sending(pxQueue): unblocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & pxQueue: queues_msg_full & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & suspended-{first_sending(pxQueue)}: FIN(TASK) & suspended-{first_sending(pxQueue)}: POW(tasks) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended-{first_sending(pxQueue)} = {} & suspended-{first_sending(pxQueue)}/\n_runable = {} & tasks = suspended-{first_sending(pxQueue)}\/blocked-{first_sending(pxQueue)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(pxQueue)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & (que: queues_msg_full & not(que = pxQueue)) => not(que: queues_msg_empty)) & !que.(que: queues_msg & que: queues_msg_empty => not(que: queues_msg_full & not(que = pxQueue))) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & running$0: n_runable & first_sending(pxQueue): suspended & first_sending(pxQueue): blocked & not(first_sending(pxQueue): unblocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & pxQueue: queues_msg_full & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & suspended-{first_sending(pxQueue)}: FIN(TASK) & suspended-{first_sending(pxQueue)}: POW(tasks) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended-{first_sending(pxQueue)} = {} & suspended-{first_sending(pxQueue)}/\n_runable = {} & tasks = suspended-{first_sending(pxQueue)}\/blocked-{first_sending(pxQueue)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(pxQueue)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & (que: queues_msg_full & not(que = pxQueue)) => not(que: queues_msg_empty)) & !que.(que: queues_msg & que: queues_msg_empty => not(que: queues_msg_full & not(que = pxQueue))) & mt: mutexes);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & running$0: n_runable & first_sending(pxQueue): suspended & first_sending(pxQueue): blocked & not(first_sending(pxQueue): unblocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & not(pxQueue: queues_msg_full) & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & suspended-{first_sending(pxQueue)}: FIN(TASK) & suspended-{first_sending(pxQueue)}: POW(tasks) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended-{first_sending(pxQueue)} = {} & suspended-{first_sending(pxQueue)}/\n_runable = {} & tasks = suspended-{first_sending(pxQueue)}\/blocked-{first_sending(pxQueue)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(pxQueue)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & running$0: n_runable & first_sending(pxQueue): suspended & first_sending(pxQueue): blocked & not(first_sending(pxQueue): unblocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & not(pxQueue: queues_msg_full) & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & suspended-{first_sending(pxQueue)}: FIN(TASK) & suspended-{first_sending(pxQueue)}: POW(tasks) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended-{first_sending(pxQueue)} = {} & suspended-{first_sending(pxQueue)}/\n_runable = {} & tasks = suspended-{first_sending(pxQueue)}\/blocked-{first_sending(pxQueue)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(pxQueue)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & running$0: n_runable & first_sending(pxQueue): suspended & not(first_sending(pxQueue): blocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & pxQueue: queues_msg_full & n_runable: FIN(TASK) & suspended-{first_sending(pxQueue)}: FIN(TASK) & suspended-{first_sending(pxQueue)}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{first_sending(pxQueue)} = {} & suspended-{first_sending(pxQueue)}/\n_runable = {} & tasks = suspended-{first_sending(pxQueue)}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & (que: queues_msg_full & not(que = pxQueue)) => not(que: queues_msg_empty) & not(que = pxQueue)) & !que.(que: queues_msg & que: queues_msg_empty\/{pxQueue} => not(que: queues_msg_full & not(que = pxQueue))) & que: queues);
  ((queue_sending<+{pxQueue|->n_sending})(que): POW(blocked\/suspended-{first_sending(pxQueue)}));
  (queue_receiving(que): POW(blocked\/suspended-{first_sending(pxQueue)}));
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & running$0: n_runable & first_sending(pxQueue): suspended & not(first_sending(pxQueue): blocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & pxQueue: queues_msg_full & n_runable: FIN(TASK) & suspended-{first_sending(pxQueue)}: FIN(TASK) & suspended-{first_sending(pxQueue)}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{first_sending(pxQueue)} = {} & suspended-{first_sending(pxQueue)}/\n_runable = {} & tasks = suspended-{first_sending(pxQueue)}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & (que: queues_msg_full & not(que = pxQueue)) => not(que: queues_msg_empty) & not(que = pxQueue)) & !que.(que: queues_msg & que: queues_msg_empty\/{pxQueue} => not(que: queues_msg_full & not(que = pxQueue))) & mt: mutexes);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & running$0: n_runable & first_sending(pxQueue): suspended & not(first_sending(pxQueue): blocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & not(pxQueue: queues_msg_full) & n_runable: FIN(TASK) & suspended-{first_sending(pxQueue)}: FIN(TASK) & suspended-{first_sending(pxQueue)}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{first_sending(pxQueue)} = {} & suspended-{first_sending(pxQueue)}/\n_runable = {} & tasks = suspended-{first_sending(pxQueue)}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full => not(que: queues_msg_empty) & not(que = pxQueue)) & !que.(que: queues_msg & que: queues_msg_empty\/{pxQueue} => not(que: queues_msg_full)) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & running$0: n_runable & first_sending(pxQueue): suspended & not(first_sending(pxQueue): blocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & not(pxQueue: queues_msg_full) & n_runable: FIN(TASK) & suspended-{first_sending(pxQueue)}: FIN(TASK) & suspended-{first_sending(pxQueue)}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{first_sending(pxQueue)} = {} & suspended-{first_sending(pxQueue)}/\n_runable = {} & tasks = suspended-{first_sending(pxQueue)}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full => not(que: queues_msg_empty) & not(que = pxQueue)) & !que.(que: queues_msg & que: queues_msg_empty\/{pxQueue} => not(que: queues_msg_full)) & mt: mutexes);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & running$0: n_runable & first_sending(pxQueue): suspended & not(first_sending(pxQueue): blocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & pxQueue: queues_msg_full & n_runable: FIN(TASK) & suspended-{first_sending(pxQueue)}: FIN(TASK) & suspended-{first_sending(pxQueue)}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{first_sending(pxQueue)} = {} & suspended-{first_sending(pxQueue)}/\n_runable = {} & tasks = suspended-{first_sending(pxQueue)}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & (que: queues_msg_full & not(que = pxQueue)) => not(que: queues_msg_empty)) & !que.(que: queues_msg & que: queues_msg_empty => not(que: queues_msg_full & not(que = pxQueue))) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & running$0: n_runable & first_sending(pxQueue): suspended & not(first_sending(pxQueue): blocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & pxQueue: queues_msg_full & n_runable: FIN(TASK) & suspended-{first_sending(pxQueue)}: FIN(TASK) & suspended-{first_sending(pxQueue)}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{first_sending(pxQueue)} = {} & suspended-{first_sending(pxQueue)}/\n_runable = {} & tasks = suspended-{first_sending(pxQueue)}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & (que: queues_msg_full & not(que = pxQueue)) => not(que: queues_msg_empty)) & !que.(que: queues_msg & que: queues_msg_empty => not(que: queues_msg_full & not(que = pxQueue))) & mt: mutexes);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & running$0: n_runable & first_sending(pxQueue): suspended & not(first_sending(pxQueue): blocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & not(pxQueue: queues_msg_full) & n_runable: FIN(TASK) & suspended-{first_sending(pxQueue)}: FIN(TASK) & suspended-{first_sending(pxQueue)}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{first_sending(pxQueue)} = {} & suspended-{first_sending(pxQueue)}/\n_runable = {} & tasks = suspended-{first_sending(pxQueue)}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & running$0: n_runable & first_sending(pxQueue): suspended & not(first_sending(pxQueue): blocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & not(pxQueue: queues_msg_full) & n_runable: FIN(TASK) & suspended-{first_sending(pxQueue)}: FIN(TASK) & suspended-{first_sending(pxQueue)}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{first_sending(pxQueue)} = {} & suspended-{first_sending(pxQueue)}/\n_runable = {} & tasks = suspended-{first_sending(pxQueue)}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & running$0: n_runable & not(first_sending(pxQueue): suspended) & first_sending(pxQueue): blocked & first_sending(pxQueue): unblocked & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & pxQueue: queues_msg_full & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked-{first_sending(pxQueue)}: FIN(TASK) & unblocked-{first_sending(pxQueue)}: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(pxQueue)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & (que: queues_msg_full & not(que = pxQueue)) => not(que: queues_msg_empty) & not(que = pxQueue)) & !que.(que: queues_msg & que: queues_msg_empty\/{pxQueue} => not(que: queues_msg_full & not(que = pxQueue))) & que: queues);
  ((queue_sending<+{pxQueue|->n_sending})(que): POW(blocked-{first_sending(pxQueue)}\/suspended));
  (queue_receiving(que): POW(blocked-{first_sending(pxQueue)}\/suspended));
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & running$0: n_runable & not(first_sending(pxQueue): suspended) & first_sending(pxQueue): blocked & first_sending(pxQueue): unblocked & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & pxQueue: queues_msg_full & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked-{first_sending(pxQueue)}: FIN(TASK) & unblocked-{first_sending(pxQueue)}: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(pxQueue)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & (que: queues_msg_full & not(que = pxQueue)) => not(que: queues_msg_empty) & not(que = pxQueue)) & !que.(que: queues_msg & que: queues_msg_empty\/{pxQueue} => not(que: queues_msg_full & not(que = pxQueue))) & mt: mutexes);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & running$0: n_runable & not(first_sending(pxQueue): suspended) & first_sending(pxQueue): blocked & first_sending(pxQueue): unblocked & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & not(pxQueue: queues_msg_full) & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked-{first_sending(pxQueue)}: FIN(TASK) & unblocked-{first_sending(pxQueue)}: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(pxQueue)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full => not(que: queues_msg_empty) & not(que = pxQueue)) & !que.(que: queues_msg & que: queues_msg_empty\/{pxQueue} => not(que: queues_msg_full)) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & running$0: n_runable & not(first_sending(pxQueue): suspended) & first_sending(pxQueue): blocked & first_sending(pxQueue): unblocked & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & not(pxQueue: queues_msg_full) & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked-{first_sending(pxQueue)}: FIN(TASK) & unblocked-{first_sending(pxQueue)}: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(pxQueue)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full => not(que: queues_msg_empty) & not(que = pxQueue)) & !que.(que: queues_msg & que: queues_msg_empty\/{pxQueue} => not(que: queues_msg_full)) & mt: mutexes);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & running$0: n_runable & not(first_sending(pxQueue): suspended) & first_sending(pxQueue): blocked & first_sending(pxQueue): unblocked & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & pxQueue: queues_msg_full & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked-{first_sending(pxQueue)}: FIN(TASK) & unblocked-{first_sending(pxQueue)}: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(pxQueue)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & (que: queues_msg_full & not(que = pxQueue)) => not(que: queues_msg_empty)) & !que.(que: queues_msg & que: queues_msg_empty => not(que: queues_msg_full & not(que = pxQueue))) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & running$0: n_runable & not(first_sending(pxQueue): suspended) & first_sending(pxQueue): blocked & first_sending(pxQueue): unblocked & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & pxQueue: queues_msg_full & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked-{first_sending(pxQueue)}: FIN(TASK) & unblocked-{first_sending(pxQueue)}: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(pxQueue)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & (que: queues_msg_full & not(que = pxQueue)) => not(que: queues_msg_empty)) & !que.(que: queues_msg & que: queues_msg_empty => not(que: queues_msg_full & not(que = pxQueue))) & mt: mutexes);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & running$0: n_runable & not(first_sending(pxQueue): suspended) & first_sending(pxQueue): blocked & first_sending(pxQueue): unblocked & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & not(pxQueue: queues_msg_full) & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked-{first_sending(pxQueue)}: FIN(TASK) & unblocked-{first_sending(pxQueue)}: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(pxQueue)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & running$0: n_runable & not(first_sending(pxQueue): suspended) & first_sending(pxQueue): blocked & first_sending(pxQueue): unblocked & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & not(pxQueue: queues_msg_full) & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked-{first_sending(pxQueue)}: FIN(TASK) & unblocked-{first_sending(pxQueue)}: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(pxQueue)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & running$0: n_runable & not(first_sending(pxQueue): suspended) & first_sending(pxQueue): blocked & not(first_sending(pxQueue): unblocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & pxQueue: queues_msg_full & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(pxQueue)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & (que: queues_msg_full & not(que = pxQueue)) => not(que: queues_msg_empty) & not(que = pxQueue)) & !que.(que: queues_msg & que: queues_msg_empty\/{pxQueue} => not(que: queues_msg_full & not(que = pxQueue))) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & running$0: n_runable & not(first_sending(pxQueue): suspended) & first_sending(pxQueue): blocked & not(first_sending(pxQueue): unblocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & pxQueue: queues_msg_full & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(pxQueue)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & (que: queues_msg_full & not(que = pxQueue)) => not(que: queues_msg_empty) & not(que = pxQueue)) & !que.(que: queues_msg & que: queues_msg_empty\/{pxQueue} => not(que: queues_msg_full & not(que = pxQueue))) & mt: mutexes);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & running$0: n_runable & not(first_sending(pxQueue): suspended) & first_sending(pxQueue): blocked & not(first_sending(pxQueue): unblocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & not(pxQueue: queues_msg_full) & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(pxQueue)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full => not(que: queues_msg_empty) & not(que = pxQueue)) & !que.(que: queues_msg & que: queues_msg_empty\/{pxQueue} => not(que: queues_msg_full)) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & running$0: n_runable & not(first_sending(pxQueue): suspended) & first_sending(pxQueue): blocked & not(first_sending(pxQueue): unblocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & not(pxQueue: queues_msg_full) & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(pxQueue)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full => not(que: queues_msg_empty) & not(que = pxQueue)) & !que.(que: queues_msg & que: queues_msg_empty\/{pxQueue} => not(que: queues_msg_full)) & mt: mutexes);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & running$0: n_runable & not(first_sending(pxQueue): suspended) & first_sending(pxQueue): blocked & not(first_sending(pxQueue): unblocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & pxQueue: queues_msg_full & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(pxQueue)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & (que: queues_msg_full & not(que = pxQueue)) => not(que: queues_msg_empty)) & !que.(que: queues_msg & que: queues_msg_empty => not(que: queues_msg_full & not(que = pxQueue))) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & running$0: n_runable & not(first_sending(pxQueue): suspended) & first_sending(pxQueue): blocked & not(first_sending(pxQueue): unblocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & pxQueue: queues_msg_full & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(pxQueue)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & (que: queues_msg_full & not(que = pxQueue)) => not(que: queues_msg_empty)) & !que.(que: queues_msg & que: queues_msg_empty => not(que: queues_msg_full & not(que = pxQueue))) & mt: mutexes);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & running$0: n_runable & not(first_sending(pxQueue): suspended) & first_sending(pxQueue): blocked & not(first_sending(pxQueue): unblocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & not(pxQueue: queues_msg_full) & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(pxQueue)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & running$0: n_runable & not(first_sending(pxQueue): suspended) & first_sending(pxQueue): blocked & not(first_sending(pxQueue): unblocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & not(pxQueue: queues_msg_full) & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(pxQueue)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(pxQueue)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & running$0: n_runable & not(first_sending(pxQueue): suspended) & not(first_sending(pxQueue): blocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & pxQueue: queues_msg_full & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & (que: queues_msg_full & not(que = pxQueue)) => not(que: queues_msg_empty) & not(que = pxQueue)) & !que.(que: queues_msg & que: queues_msg_empty\/{pxQueue} => not(que: queues_msg_full & not(que = pxQueue))) & que: queues);
  ((queue_sending<+{pxQueue|->n_sending})(que): POW(blocked\/suspended));
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & running$0: n_runable & not(first_sending(pxQueue): suspended) & not(first_sending(pxQueue): blocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & pxQueue: queues_msg_full & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & (que: queues_msg_full & not(que = pxQueue)) => not(que: queues_msg_empty) & not(que = pxQueue)) & !que.(que: queues_msg & que: queues_msg_empty\/{pxQueue} => not(que: queues_msg_full & not(que = pxQueue))) & mt: mutexes);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & running$0: n_runable & not(first_sending(pxQueue): suspended) & not(first_sending(pxQueue): blocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & not(pxQueue: queues_msg_full) & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full => not(que: queues_msg_empty) & not(que = pxQueue)) & !que.(que: queues_msg & que: queues_msg_empty\/{pxQueue} => not(que: queues_msg_full)) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & running$0: n_runable & not(first_sending(pxQueue): suspended) & not(first_sending(pxQueue): blocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & not(pxQueue: queues_msg_full) & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full => not(que: queues_msg_empty) & not(que = pxQueue)) & !que.(que: queues_msg & que: queues_msg_empty\/{pxQueue} => not(que: queues_msg_full)) & mt: mutexes);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & running$0: n_runable & not(first_sending(pxQueue): suspended) & not(first_sending(pxQueue): blocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & pxQueue: queues_msg_full & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & (que: queues_msg_full & not(que = pxQueue)) => not(que: queues_msg_empty)) & !que.(que: queues_msg & que: queues_msg_empty => not(que: queues_msg_full & not(que = pxQueue))) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & running$0: n_runable & not(first_sending(pxQueue): suspended) & not(first_sending(pxQueue): blocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & pxQueue: queues_msg_full & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & (que: queues_msg_full & not(que = pxQueue)) => not(que: queues_msg_empty)) & !que.(que: queues_msg & que: queues_msg_empty => not(que: queues_msg_full & not(que = pxQueue))) & mt: mutexes);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & running$0: n_runable & not(first_sending(pxQueue): suspended) & not(first_sending(pxQueue): blocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & not(pxQueue: queues_msg_full) & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & running$0: n_runable & not(first_sending(pxQueue): suspended) & not(first_sending(pxQueue): blocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & not(pxQueue: queues_msg_full) & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & first_sending(pxQueue): suspended & first_sending(pxQueue): blocked & first_sending(pxQueue): unblocked & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & pxQueue: queues_msg_full & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked-{first_sending(pxQueue)}: FIN(TASK) & unblocked-{first_sending(pxQueue)}: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & suspended-{first_sending(pxQueue)}: FIN(TASK) & suspended-{first_sending(pxQueue)}: POW(tasks) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended-{first_sending(pxQueue)} = {} & suspended-{first_sending(pxQueue)}/\n_runable = {} & tasks = suspended-{first_sending(pxQueue)}\/blocked-{first_sending(pxQueue)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running: suspended & not(running = first_sending(pxQueue)))) & (active = TRUE => not(running: blocked & not(running = first_sending(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(pxQueue)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & (que: queues_msg_full & not(que = pxQueue)) => not(que: queues_msg_empty) & not(que = pxQueue)) & !que.(que: queues_msg & que: queues_msg_empty\/{pxQueue} => not(que: queues_msg_full & not(que = pxQueue))) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & first_sending(pxQueue): suspended & first_sending(pxQueue): blocked & first_sending(pxQueue): unblocked & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & pxQueue: queues_msg_full & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked-{first_sending(pxQueue)}: FIN(TASK) & unblocked-{first_sending(pxQueue)}: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & suspended-{first_sending(pxQueue)}: FIN(TASK) & suspended-{first_sending(pxQueue)}: POW(tasks) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended-{first_sending(pxQueue)} = {} & suspended-{first_sending(pxQueue)}/\n_runable = {} & tasks = suspended-{first_sending(pxQueue)}\/blocked-{first_sending(pxQueue)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running: suspended & not(running = first_sending(pxQueue)))) & (active = TRUE => not(running: blocked & not(running = first_sending(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(pxQueue)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & (que: queues_msg_full & not(que = pxQueue)) => not(que: queues_msg_empty) & not(que = pxQueue)) & !que.(que: queues_msg & que: queues_msg_empty\/{pxQueue} => not(que: queues_msg_full & not(que = pxQueue))) & mt: mutexes);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & first_sending(pxQueue): suspended & first_sending(pxQueue): blocked & first_sending(pxQueue): unblocked & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & not(pxQueue: queues_msg_full) & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked-{first_sending(pxQueue)}: FIN(TASK) & unblocked-{first_sending(pxQueue)}: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & suspended-{first_sending(pxQueue)}: FIN(TASK) & suspended-{first_sending(pxQueue)}: POW(tasks) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended-{first_sending(pxQueue)} = {} & suspended-{first_sending(pxQueue)}/\n_runable = {} & tasks = suspended-{first_sending(pxQueue)}\/blocked-{first_sending(pxQueue)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running: suspended & not(running = first_sending(pxQueue)))) & (active = TRUE => not(running: blocked & not(running = first_sending(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(pxQueue)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full => not(que: queues_msg_empty) & not(que = pxQueue)) & !que.(que: queues_msg & que: queues_msg_empty\/{pxQueue} => not(que: queues_msg_full)) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & first_sending(pxQueue): suspended & first_sending(pxQueue): blocked & first_sending(pxQueue): unblocked & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & not(pxQueue: queues_msg_full) & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked-{first_sending(pxQueue)}: FIN(TASK) & unblocked-{first_sending(pxQueue)}: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & suspended-{first_sending(pxQueue)}: FIN(TASK) & suspended-{first_sending(pxQueue)}: POW(tasks) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended-{first_sending(pxQueue)} = {} & suspended-{first_sending(pxQueue)}/\n_runable = {} & tasks = suspended-{first_sending(pxQueue)}\/blocked-{first_sending(pxQueue)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running: suspended & not(running = first_sending(pxQueue)))) & (active = TRUE => not(running: blocked & not(running = first_sending(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(pxQueue)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full => not(que: queues_msg_empty) & not(que = pxQueue)) & !que.(que: queues_msg & que: queues_msg_empty\/{pxQueue} => not(que: queues_msg_full)) & mt: mutexes);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & first_sending(pxQueue): suspended & first_sending(pxQueue): blocked & first_sending(pxQueue): unblocked & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & pxQueue: queues_msg_full & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked-{first_sending(pxQueue)}: FIN(TASK) & unblocked-{first_sending(pxQueue)}: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & suspended-{first_sending(pxQueue)}: FIN(TASK) & suspended-{first_sending(pxQueue)}: POW(tasks) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended-{first_sending(pxQueue)} = {} & suspended-{first_sending(pxQueue)}/\n_runable = {} & tasks = suspended-{first_sending(pxQueue)}\/blocked-{first_sending(pxQueue)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running: suspended & not(running = first_sending(pxQueue)))) & (active = TRUE => not(running: blocked & not(running = first_sending(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(pxQueue)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & (que: queues_msg_full & not(que = pxQueue)) => not(que: queues_msg_empty)) & !que.(que: queues_msg & que: queues_msg_empty => not(que: queues_msg_full & not(que = pxQueue))) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & first_sending(pxQueue): suspended & first_sending(pxQueue): blocked & first_sending(pxQueue): unblocked & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & pxQueue: queues_msg_full & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked-{first_sending(pxQueue)}: FIN(TASK) & unblocked-{first_sending(pxQueue)}: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & suspended-{first_sending(pxQueue)}: FIN(TASK) & suspended-{first_sending(pxQueue)}: POW(tasks) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended-{first_sending(pxQueue)} = {} & suspended-{first_sending(pxQueue)}/\n_runable = {} & tasks = suspended-{first_sending(pxQueue)}\/blocked-{first_sending(pxQueue)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running: suspended & not(running = first_sending(pxQueue)))) & (active = TRUE => not(running: blocked & not(running = first_sending(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(pxQueue)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & (que: queues_msg_full & not(que = pxQueue)) => not(que: queues_msg_empty)) & !que.(que: queues_msg & que: queues_msg_empty => not(que: queues_msg_full & not(que = pxQueue))) & mt: mutexes);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & first_sending(pxQueue): suspended & first_sending(pxQueue): blocked & first_sending(pxQueue): unblocked & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & not(pxQueue: queues_msg_full) & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked-{first_sending(pxQueue)}: FIN(TASK) & unblocked-{first_sending(pxQueue)}: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & suspended-{first_sending(pxQueue)}: FIN(TASK) & suspended-{first_sending(pxQueue)}: POW(tasks) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended-{first_sending(pxQueue)} = {} & suspended-{first_sending(pxQueue)}/\n_runable = {} & tasks = suspended-{first_sending(pxQueue)}\/blocked-{first_sending(pxQueue)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running: suspended & not(running = first_sending(pxQueue)))) & (active = TRUE => not(running: blocked & not(running = first_sending(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(pxQueue)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & first_sending(pxQueue): suspended & first_sending(pxQueue): blocked & first_sending(pxQueue): unblocked & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & not(pxQueue: queues_msg_full) & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked-{first_sending(pxQueue)}: FIN(TASK) & unblocked-{first_sending(pxQueue)}: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & suspended-{first_sending(pxQueue)}: FIN(TASK) & suspended-{first_sending(pxQueue)}: POW(tasks) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended-{first_sending(pxQueue)} = {} & suspended-{first_sending(pxQueue)}/\n_runable = {} & tasks = suspended-{first_sending(pxQueue)}\/blocked-{first_sending(pxQueue)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running: suspended & not(running = first_sending(pxQueue)))) & (active = TRUE => not(running: blocked & not(running = first_sending(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(pxQueue)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & first_sending(pxQueue): suspended & first_sending(pxQueue): blocked & not(first_sending(pxQueue): unblocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & pxQueue: queues_msg_full & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & suspended-{first_sending(pxQueue)}: FIN(TASK) & suspended-{first_sending(pxQueue)}: POW(tasks) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended-{first_sending(pxQueue)} = {} & suspended-{first_sending(pxQueue)}/\n_runable = {} & tasks = suspended-{first_sending(pxQueue)}\/blocked-{first_sending(pxQueue)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running: suspended & not(running = first_sending(pxQueue)))) & (active = TRUE => not(running: blocked & not(running = first_sending(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(pxQueue)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & (que: queues_msg_full & not(que = pxQueue)) => not(que: queues_msg_empty) & not(que = pxQueue)) & !que.(que: queues_msg & que: queues_msg_empty\/{pxQueue} => not(que: queues_msg_full & not(que = pxQueue))) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & first_sending(pxQueue): suspended & first_sending(pxQueue): blocked & not(first_sending(pxQueue): unblocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & pxQueue: queues_msg_full & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & suspended-{first_sending(pxQueue)}: FIN(TASK) & suspended-{first_sending(pxQueue)}: POW(tasks) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended-{first_sending(pxQueue)} = {} & suspended-{first_sending(pxQueue)}/\n_runable = {} & tasks = suspended-{first_sending(pxQueue)}\/blocked-{first_sending(pxQueue)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running: suspended & not(running = first_sending(pxQueue)))) & (active = TRUE => not(running: blocked & not(running = first_sending(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(pxQueue)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & (que: queues_msg_full & not(que = pxQueue)) => not(que: queues_msg_empty) & not(que = pxQueue)) & !que.(que: queues_msg & que: queues_msg_empty\/{pxQueue} => not(que: queues_msg_full & not(que = pxQueue))) & mt: mutexes);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & first_sending(pxQueue): suspended & first_sending(pxQueue): blocked & not(first_sending(pxQueue): unblocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & not(pxQueue: queues_msg_full) & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & suspended-{first_sending(pxQueue)}: FIN(TASK) & suspended-{first_sending(pxQueue)}: POW(tasks) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended-{first_sending(pxQueue)} = {} & suspended-{first_sending(pxQueue)}/\n_runable = {} & tasks = suspended-{first_sending(pxQueue)}\/blocked-{first_sending(pxQueue)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running: suspended & not(running = first_sending(pxQueue)))) & (active = TRUE => not(running: blocked & not(running = first_sending(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(pxQueue)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full => not(que: queues_msg_empty) & not(que = pxQueue)) & !que.(que: queues_msg & que: queues_msg_empty\/{pxQueue} => not(que: queues_msg_full)) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & first_sending(pxQueue): suspended & first_sending(pxQueue): blocked & not(first_sending(pxQueue): unblocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & not(pxQueue: queues_msg_full) & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & suspended-{first_sending(pxQueue)}: FIN(TASK) & suspended-{first_sending(pxQueue)}: POW(tasks) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended-{first_sending(pxQueue)} = {} & suspended-{first_sending(pxQueue)}/\n_runable = {} & tasks = suspended-{first_sending(pxQueue)}\/blocked-{first_sending(pxQueue)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running: suspended & not(running = first_sending(pxQueue)))) & (active = TRUE => not(running: blocked & not(running = first_sending(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(pxQueue)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full => not(que: queues_msg_empty) & not(que = pxQueue)) & !que.(que: queues_msg & que: queues_msg_empty\/{pxQueue} => not(que: queues_msg_full)) & mt: mutexes);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & first_sending(pxQueue): suspended & first_sending(pxQueue): blocked & not(first_sending(pxQueue): unblocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & pxQueue: queues_msg_full & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & suspended-{first_sending(pxQueue)}: FIN(TASK) & suspended-{first_sending(pxQueue)}: POW(tasks) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended-{first_sending(pxQueue)} = {} & suspended-{first_sending(pxQueue)}/\n_runable = {} & tasks = suspended-{first_sending(pxQueue)}\/blocked-{first_sending(pxQueue)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running: suspended & not(running = first_sending(pxQueue)))) & (active = TRUE => not(running: blocked & not(running = first_sending(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(pxQueue)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & (que: queues_msg_full & not(que = pxQueue)) => not(que: queues_msg_empty)) & !que.(que: queues_msg & que: queues_msg_empty => not(que: queues_msg_full & not(que = pxQueue))) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & first_sending(pxQueue): suspended & first_sending(pxQueue): blocked & not(first_sending(pxQueue): unblocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & pxQueue: queues_msg_full & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & suspended-{first_sending(pxQueue)}: FIN(TASK) & suspended-{first_sending(pxQueue)}: POW(tasks) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended-{first_sending(pxQueue)} = {} & suspended-{first_sending(pxQueue)}/\n_runable = {} & tasks = suspended-{first_sending(pxQueue)}\/blocked-{first_sending(pxQueue)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running: suspended & not(running = first_sending(pxQueue)))) & (active = TRUE => not(running: blocked & not(running = first_sending(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(pxQueue)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & (que: queues_msg_full & not(que = pxQueue)) => not(que: queues_msg_empty)) & !que.(que: queues_msg & que: queues_msg_empty => not(que: queues_msg_full & not(que = pxQueue))) & mt: mutexes);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & first_sending(pxQueue): suspended & first_sending(pxQueue): blocked & not(first_sending(pxQueue): unblocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & not(pxQueue: queues_msg_full) & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & suspended-{first_sending(pxQueue)}: FIN(TASK) & suspended-{first_sending(pxQueue)}: POW(tasks) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended-{first_sending(pxQueue)} = {} & suspended-{first_sending(pxQueue)}/\n_runable = {} & tasks = suspended-{first_sending(pxQueue)}\/blocked-{first_sending(pxQueue)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running: suspended & not(running = first_sending(pxQueue)))) & (active = TRUE => not(running: blocked & not(running = first_sending(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(pxQueue)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & first_sending(pxQueue): suspended & first_sending(pxQueue): blocked & not(first_sending(pxQueue): unblocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & not(pxQueue: queues_msg_full) & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & suspended-{first_sending(pxQueue)}: FIN(TASK) & suspended-{first_sending(pxQueue)}: POW(tasks) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended-{first_sending(pxQueue)} = {} & suspended-{first_sending(pxQueue)}/\n_runable = {} & tasks = suspended-{first_sending(pxQueue)}\/blocked-{first_sending(pxQueue)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running: suspended & not(running = first_sending(pxQueue)))) & (active = TRUE => not(running: blocked & not(running = first_sending(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(pxQueue)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & first_sending(pxQueue): suspended & not(first_sending(pxQueue): blocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & pxQueue: queues_msg_full & n_runable: FIN(TASK) & suspended-{first_sending(pxQueue)}: FIN(TASK) & suspended-{first_sending(pxQueue)}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{first_sending(pxQueue)} = {} & suspended-{first_sending(pxQueue)}/\n_runable = {} & tasks = suspended-{first_sending(pxQueue)}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running: suspended & not(running = first_sending(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & (que: queues_msg_full & not(que = pxQueue)) => not(que: queues_msg_empty) & not(que = pxQueue)) & !que.(que: queues_msg & que: queues_msg_empty\/{pxQueue} => not(que: queues_msg_full & not(que = pxQueue))) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & first_sending(pxQueue): suspended & not(first_sending(pxQueue): blocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & pxQueue: queues_msg_full & n_runable: FIN(TASK) & suspended-{first_sending(pxQueue)}: FIN(TASK) & suspended-{first_sending(pxQueue)}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{first_sending(pxQueue)} = {} & suspended-{first_sending(pxQueue)}/\n_runable = {} & tasks = suspended-{first_sending(pxQueue)}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running: suspended & not(running = first_sending(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & (que: queues_msg_full & not(que = pxQueue)) => not(que: queues_msg_empty) & not(que = pxQueue)) & !que.(que: queues_msg & que: queues_msg_empty\/{pxQueue} => not(que: queues_msg_full & not(que = pxQueue))) & mt: mutexes);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & first_sending(pxQueue): suspended & not(first_sending(pxQueue): blocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & not(pxQueue: queues_msg_full) & n_runable: FIN(TASK) & suspended-{first_sending(pxQueue)}: FIN(TASK) & suspended-{first_sending(pxQueue)}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{first_sending(pxQueue)} = {} & suspended-{first_sending(pxQueue)}/\n_runable = {} & tasks = suspended-{first_sending(pxQueue)}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running: suspended & not(running = first_sending(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full => not(que: queues_msg_empty) & not(que = pxQueue)) & !que.(que: queues_msg & que: queues_msg_empty\/{pxQueue} => not(que: queues_msg_full)) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & first_sending(pxQueue): suspended & not(first_sending(pxQueue): blocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & not(pxQueue: queues_msg_full) & n_runable: FIN(TASK) & suspended-{first_sending(pxQueue)}: FIN(TASK) & suspended-{first_sending(pxQueue)}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{first_sending(pxQueue)} = {} & suspended-{first_sending(pxQueue)}/\n_runable = {} & tasks = suspended-{first_sending(pxQueue)}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running: suspended & not(running = first_sending(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full => not(que: queues_msg_empty) & not(que = pxQueue)) & !que.(que: queues_msg & que: queues_msg_empty\/{pxQueue} => not(que: queues_msg_full)) & mt: mutexes);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & first_sending(pxQueue): suspended & not(first_sending(pxQueue): blocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & pxQueue: queues_msg_full & n_runable: FIN(TASK) & suspended-{first_sending(pxQueue)}: FIN(TASK) & suspended-{first_sending(pxQueue)}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{first_sending(pxQueue)} = {} & suspended-{first_sending(pxQueue)}/\n_runable = {} & tasks = suspended-{first_sending(pxQueue)}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running: suspended & not(running = first_sending(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & (que: queues_msg_full & not(que = pxQueue)) => not(que: queues_msg_empty)) & !que.(que: queues_msg & que: queues_msg_empty => not(que: queues_msg_full & not(que = pxQueue))) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & first_sending(pxQueue): suspended & not(first_sending(pxQueue): blocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & pxQueue: queues_msg_full & n_runable: FIN(TASK) & suspended-{first_sending(pxQueue)}: FIN(TASK) & suspended-{first_sending(pxQueue)}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{first_sending(pxQueue)} = {} & suspended-{first_sending(pxQueue)}/\n_runable = {} & tasks = suspended-{first_sending(pxQueue)}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running: suspended & not(running = first_sending(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & (que: queues_msg_full & not(que = pxQueue)) => not(que: queues_msg_empty)) & !que.(que: queues_msg & que: queues_msg_empty => not(que: queues_msg_full & not(que = pxQueue))) & mt: mutexes);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & first_sending(pxQueue): suspended & not(first_sending(pxQueue): blocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & not(pxQueue: queues_msg_full) & n_runable: FIN(TASK) & suspended-{first_sending(pxQueue)}: FIN(TASK) & suspended-{first_sending(pxQueue)}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{first_sending(pxQueue)} = {} & suspended-{first_sending(pxQueue)}/\n_runable = {} & tasks = suspended-{first_sending(pxQueue)}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running: suspended & not(running = first_sending(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & first_sending(pxQueue): suspended & not(first_sending(pxQueue): blocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & not(pxQueue: queues_msg_full) & n_runable: FIN(TASK) & suspended-{first_sending(pxQueue)}: FIN(TASK) & suspended-{first_sending(pxQueue)}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{first_sending(pxQueue)} = {} & suspended-{first_sending(pxQueue)}/\n_runable = {} & tasks = suspended-{first_sending(pxQueue)}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running: suspended & not(running = first_sending(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & not(first_sending(pxQueue): suspended) & first_sending(pxQueue): blocked & first_sending(pxQueue): unblocked & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & pxQueue: queues_msg_full & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked-{first_sending(pxQueue)}: FIN(TASK) & unblocked-{first_sending(pxQueue)}: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(pxQueue)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running: blocked & not(running = first_sending(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & (que: queues_msg_full & not(que = pxQueue)) => not(que: queues_msg_empty) & not(que = pxQueue)) & !que.(que: queues_msg & que: queues_msg_empty\/{pxQueue} => not(que: queues_msg_full & not(que = pxQueue))) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & not(first_sending(pxQueue): suspended) & first_sending(pxQueue): blocked & first_sending(pxQueue): unblocked & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & pxQueue: queues_msg_full & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked-{first_sending(pxQueue)}: FIN(TASK) & unblocked-{first_sending(pxQueue)}: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(pxQueue)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running: blocked & not(running = first_sending(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & (que: queues_msg_full & not(que = pxQueue)) => not(que: queues_msg_empty) & not(que = pxQueue)) & !que.(que: queues_msg & que: queues_msg_empty\/{pxQueue} => not(que: queues_msg_full & not(que = pxQueue))) & mt: mutexes);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & not(first_sending(pxQueue): suspended) & first_sending(pxQueue): blocked & first_sending(pxQueue): unblocked & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & not(pxQueue: queues_msg_full) & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked-{first_sending(pxQueue)}: FIN(TASK) & unblocked-{first_sending(pxQueue)}: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(pxQueue)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running: blocked & not(running = first_sending(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full => not(que: queues_msg_empty) & not(que = pxQueue)) & !que.(que: queues_msg & que: queues_msg_empty\/{pxQueue} => not(que: queues_msg_full)) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & not(first_sending(pxQueue): suspended) & first_sending(pxQueue): blocked & first_sending(pxQueue): unblocked & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & not(pxQueue: queues_msg_full) & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked-{first_sending(pxQueue)}: FIN(TASK) & unblocked-{first_sending(pxQueue)}: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(pxQueue)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running: blocked & not(running = first_sending(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full => not(que: queues_msg_empty) & not(que = pxQueue)) & !que.(que: queues_msg & que: queues_msg_empty\/{pxQueue} => not(que: queues_msg_full)) & mt: mutexes);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & not(first_sending(pxQueue): suspended) & first_sending(pxQueue): blocked & first_sending(pxQueue): unblocked & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & pxQueue: queues_msg_full & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked-{first_sending(pxQueue)}: FIN(TASK) & unblocked-{first_sending(pxQueue)}: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(pxQueue)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running: blocked & not(running = first_sending(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & (que: queues_msg_full & not(que = pxQueue)) => not(que: queues_msg_empty)) & !que.(que: queues_msg & que: queues_msg_empty => not(que: queues_msg_full & not(que = pxQueue))) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & not(first_sending(pxQueue): suspended) & first_sending(pxQueue): blocked & first_sending(pxQueue): unblocked & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & pxQueue: queues_msg_full & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked-{first_sending(pxQueue)}: FIN(TASK) & unblocked-{first_sending(pxQueue)}: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(pxQueue)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running: blocked & not(running = first_sending(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & (que: queues_msg_full & not(que = pxQueue)) => not(que: queues_msg_empty)) & !que.(que: queues_msg & que: queues_msg_empty => not(que: queues_msg_full & not(que = pxQueue))) & mt: mutexes);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & not(first_sending(pxQueue): suspended) & first_sending(pxQueue): blocked & first_sending(pxQueue): unblocked & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & not(pxQueue: queues_msg_full) & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked-{first_sending(pxQueue)}: FIN(TASK) & unblocked-{first_sending(pxQueue)}: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(pxQueue)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running: blocked & not(running = first_sending(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & not(first_sending(pxQueue): suspended) & first_sending(pxQueue): blocked & first_sending(pxQueue): unblocked & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & not(pxQueue: queues_msg_full) & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked-{first_sending(pxQueue)}: FIN(TASK) & unblocked-{first_sending(pxQueue)}: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(pxQueue)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running: blocked & not(running = first_sending(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & not(first_sending(pxQueue): suspended) & first_sending(pxQueue): blocked & not(first_sending(pxQueue): unblocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & pxQueue: queues_msg_full & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(pxQueue)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running: blocked & not(running = first_sending(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & (que: queues_msg_full & not(que = pxQueue)) => not(que: queues_msg_empty) & not(que = pxQueue)) & !que.(que: queues_msg & que: queues_msg_empty\/{pxQueue} => not(que: queues_msg_full & not(que = pxQueue))) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & not(first_sending(pxQueue): suspended) & first_sending(pxQueue): blocked & not(first_sending(pxQueue): unblocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & pxQueue: queues_msg_full & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(pxQueue)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running: blocked & not(running = first_sending(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & (que: queues_msg_full & not(que = pxQueue)) => not(que: queues_msg_empty) & not(que = pxQueue)) & !que.(que: queues_msg & que: queues_msg_empty\/{pxQueue} => not(que: queues_msg_full & not(que = pxQueue))) & mt: mutexes);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & not(first_sending(pxQueue): suspended) & first_sending(pxQueue): blocked & not(first_sending(pxQueue): unblocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & not(pxQueue: queues_msg_full) & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(pxQueue)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running: blocked & not(running = first_sending(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full => not(que: queues_msg_empty) & not(que = pxQueue)) & !que.(que: queues_msg & que: queues_msg_empty\/{pxQueue} => not(que: queues_msg_full)) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & not(first_sending(pxQueue): suspended) & first_sending(pxQueue): blocked & not(first_sending(pxQueue): unblocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & not(pxQueue: queues_msg_full) & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(pxQueue)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running: blocked & not(running = first_sending(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full => not(que: queues_msg_empty) & not(que = pxQueue)) & !que.(que: queues_msg & que: queues_msg_empty\/{pxQueue} => not(que: queues_msg_full)) & mt: mutexes);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & not(first_sending(pxQueue): suspended) & first_sending(pxQueue): blocked & not(first_sending(pxQueue): unblocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & pxQueue: queues_msg_full & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(pxQueue)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running: blocked & not(running = first_sending(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & (que: queues_msg_full & not(que = pxQueue)) => not(que: queues_msg_empty)) & !que.(que: queues_msg & que: queues_msg_empty => not(que: queues_msg_full & not(que = pxQueue))) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & not(first_sending(pxQueue): suspended) & first_sending(pxQueue): blocked & not(first_sending(pxQueue): unblocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & pxQueue: queues_msg_full & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(pxQueue)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running: blocked & not(running = first_sending(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & (que: queues_msg_full & not(que = pxQueue)) => not(que: queues_msg_empty)) & !que.(que: queues_msg & que: queues_msg_empty => not(que: queues_msg_full & not(que = pxQueue))) & mt: mutexes);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & not(first_sending(pxQueue): suspended) & first_sending(pxQueue): blocked & not(first_sending(pxQueue): unblocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & not(pxQueue: queues_msg_full) & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(pxQueue)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running: blocked & not(running = first_sending(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & not(first_sending(pxQueue): suspended) & first_sending(pxQueue): blocked & not(first_sending(pxQueue): unblocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & not(pxQueue: queues_msg_full) & blocked-{first_sending(pxQueue)}: FIN(TASK) & blocked-{first_sending(pxQueue)}: POW(tasks) & unblocked: POW(blocked-{first_sending(pxQueue)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(pxQueue)} = {} & blocked-{first_sending(pxQueue)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(pxQueue)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => not(running: blocked & not(running = first_sending(pxQueue)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(pxQueue)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & not(first_sending(pxQueue): suspended) & not(first_sending(pxQueue): blocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & pxQueue: queues_msg_full & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & (que: queues_msg_full & not(que = pxQueue)) => not(que: queues_msg_empty) & not(que = pxQueue)) & !que.(que: queues_msg & que: queues_msg_empty\/{pxQueue} => not(que: queues_msg_full & not(que = pxQueue))) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & not(first_sending(pxQueue): suspended) & not(first_sending(pxQueue): blocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & pxQueue: queues_msg_full & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & (que: queues_msg_full & not(que = pxQueue)) => not(que: queues_msg_empty) & not(que = pxQueue)) & !que.(que: queues_msg & que: queues_msg_empty\/{pxQueue} => not(que: queues_msg_full & not(que = pxQueue))) & mt: mutexes);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & not(first_sending(pxQueue): suspended) & not(first_sending(pxQueue): blocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & not(pxQueue: queues_msg_full) & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full => not(que: queues_msg_empty) & not(que = pxQueue)) & !que.(que: queues_msg & que: queues_msg_empty\/{pxQueue} => not(que: queues_msg_full)) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & not(first_sending(pxQueue): suspended) & not(first_sending(pxQueue): blocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & not(pxQueue: queues_msg_full) & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & que: queues_msg_full => not(que: queues_msg_empty) & not(que = pxQueue)) & !que.(que: queues_msg & que: queues_msg_empty\/{pxQueue} => not(que: queues_msg_full)) & mt: mutexes);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & not(first_sending(pxQueue): suspended) & not(first_sending(pxQueue): blocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & pxQueue: queues_msg_full & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & (que: queues_msg_full & not(que = pxQueue)) => not(que: queues_msg_empty)) & !que.(que: queues_msg & que: queues_msg_empty => not(que: queues_msg_full & not(que = pxQueue))) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & not(first_sending(pxQueue): suspended) & not(first_sending(pxQueue): blocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & pxQueue: queues_msg_full & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !que.(que: queues_msg & (que: queues_msg_full & not(que = pxQueue)) => not(que: queues_msg_empty)) & !que.(que: queues_msg & que: queues_msg_empty => not(que: queues_msg_full & not(que = pxQueue))) & mt: mutexes);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & not(first_sending(pxQueue): suspended) & not(first_sending(pxQueue): blocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & not(pxQueue: queues_msg_full) & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_empty) & justPeeking = FALSE & not(queue_sending(pxQueue) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(pxQueue)} & not(first_sending(pxQueue): suspended) & not(first_sending(pxQueue): blocked) & item: ITEM & item: queue_items(pxQueue) & n_sending: POW(TASK) & n_first: TASK & n_sending = queue_sending(pxQueue)-{first_sending(pxQueue)} & n_first: n_sending & not(pxQueue: queues_msg_full) & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->n_sending}) & first_sending<+{pxQueue|->n_first}: QUEUE +-> TASK & dom(first_sending<+{pxQueue|->n_first}) = dom(queue_sending<+{pxQueue|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{pxQueue|->n_first}) & not((queue_sending<+{pxQueue|->n_sending})(q1) = {}) => (first_sending<+{pxQueue|->n_first})(q1): (queue_sending<+{pxQueue|->n_sending})(q1)) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->n_sending})(q1) => not(tk: (queue_sending<+{pxQueue|->n_sending})(q2))) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  (1: QUEUE_LENGTH);
  (1: QUEUE_QUANT);
  ("`Local hypotheses'" & semaphore$0: QUEUE & not(semaphore$0: queues) & queue_receiving\/{semaphore$0|->{}}: QUEUE +-> POW(TASK) & queue_sending\/{semaphore$0|->{}}: QUEUE +-> POW(TASK) & queues\/{semaphore$0} = dom(queue_receiving\/{semaphore$0|->{}}) & queues\/{semaphore$0} = dom(queue_sending\/{semaphore$0|->{}}) & first_receiving\/{semaphore$0|->TASK_NULL}: QUEUE +-> TASK & first_sending\/{semaphore$0|->TASK_NULL}: QUEUE +-> TASK & dom(first_receiving\/{semaphore$0|->TASK_NULL}) = dom(queue_receiving\/{semaphore$0|->{}}) & dom(first_sending\/{semaphore$0|->TASK_NULL}) = dom(queue_sending\/{semaphore$0|->{}}) & !q1.(q1: queues\/{semaphore$0} & q1: dom(first_receiving\/{semaphore$0|->TASK_NULL}) & not((queue_receiving\/{semaphore$0|->{}})(q1) = {}) => (first_receiving\/{semaphore$0|->TASK_NULL})(q1): (queue_receiving\/{semaphore$0|->{}})(q1)) & !q1.(q1: queues\/{semaphore$0} & q1: dom(first_sending\/{semaphore$0|->TASK_NULL}) & not((queue_sending\/{semaphore$0|->{}})(q1) = {}) => (first_sending\/{semaphore$0|->TASK_NULL})(q1): (queue_sending\/{semaphore$0|->{}})(q1)) & queues_msg: POW(queues\/{semaphore$0}) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & tk: TASK & tk: (queue_receiving\/{semaphore$0|->{}})(q1) => not(tk: (queue_sending\/{semaphore$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & tk: TASK & tk: (queue_sending\/{semaphore$0|->{}})(q2) => not(tk: (queue_receiving\/{semaphore$0|->{}})(q1))) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & not(q1 = q2) & tk: TASK & tk: (queue_receiving\/{semaphore$0|->{}})(q1) => not(tk: (queue_receiving\/{semaphore$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & not(q1 = q2) & tk: TASK & tk: (queue_sending\/{semaphore$0|->{}})(q1) => not(tk: (queue_sending\/{semaphore$0|->{}})(q2))) & semaphore$0: queues\/{semaphore$0} & semaphores: POW(queues\/{semaphore$0}) & semaphore$0: semaphores\/{semaphore$0} & semaphores_busy: POW(semaphores\/{semaphore$0}) & semaphores_full: POW(semaphores\/{semaphore$0}) & semaphores_busy\/{semaphore$0}/\semaphores_full = {} & mutexes: POW(queues\/{semaphore$0}) & not(semaphore$0: queues_msg) & not(semaphore$0: mutexes) & !que.(que: QUEUE & (not(que: queues) & not(que = semaphore$0)) => not(que: mutexes)) & !que.(que: QUEUE & (not(que: queues) & not(que = semaphore$0)) => not(que: semaphores) & not(que = semaphore$0)) & que: queues\/{semaphore$0});
  ((queue_sending\/{semaphore$0|->{}})(que): POW(blocked\/suspended));
  ((queue_receiving\/{semaphore$0|->{}})(que): POW(blocked\/suspended));
  ("`Local hypotheses'" & semaphore$0: QUEUE & not(semaphore$0: queues) & queue_receiving\/{semaphore$0|->{}}: QUEUE +-> POW(TASK) & queue_sending\/{semaphore$0|->{}}: QUEUE +-> POW(TASK) & queues\/{semaphore$0} = dom(queue_receiving\/{semaphore$0|->{}}) & queues\/{semaphore$0} = dom(queue_sending\/{semaphore$0|->{}}) & first_receiving\/{semaphore$0|->TASK_NULL}: QUEUE +-> TASK & first_sending\/{semaphore$0|->TASK_NULL}: QUEUE +-> TASK & dom(first_receiving\/{semaphore$0|->TASK_NULL}) = dom(queue_receiving\/{semaphore$0|->{}}) & dom(first_sending\/{semaphore$0|->TASK_NULL}) = dom(queue_sending\/{semaphore$0|->{}}) & !q1.(q1: queues\/{semaphore$0} & q1: dom(first_receiving\/{semaphore$0|->TASK_NULL}) & not((queue_receiving\/{semaphore$0|->{}})(q1) = {}) => (first_receiving\/{semaphore$0|->TASK_NULL})(q1): (queue_receiving\/{semaphore$0|->{}})(q1)) & !q1.(q1: queues\/{semaphore$0} & q1: dom(first_sending\/{semaphore$0|->TASK_NULL}) & not((queue_sending\/{semaphore$0|->{}})(q1) = {}) => (first_sending\/{semaphore$0|->TASK_NULL})(q1): (queue_sending\/{semaphore$0|->{}})(q1)) & queues_msg: POW(queues\/{semaphore$0}) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & tk: TASK & tk: (queue_receiving\/{semaphore$0|->{}})(q1) => not(tk: (queue_sending\/{semaphore$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & tk: TASK & tk: (queue_sending\/{semaphore$0|->{}})(q2) => not(tk: (queue_receiving\/{semaphore$0|->{}})(q1))) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & not(q1 = q2) & tk: TASK & tk: (queue_receiving\/{semaphore$0|->{}})(q1) => not(tk: (queue_receiving\/{semaphore$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & not(q1 = q2) & tk: TASK & tk: (queue_sending\/{semaphore$0|->{}})(q1) => not(tk: (queue_sending\/{semaphore$0|->{}})(q2))) & semaphore$0: queues\/{semaphore$0} & semaphores: POW(queues\/{semaphore$0}) & semaphore$0: semaphores\/{semaphore$0} & semaphores_busy: POW(semaphores\/{semaphore$0}) & semaphores_full: POW(semaphores\/{semaphore$0}) & semaphores_busy\/{semaphore$0}/\semaphores_full = {} & mutexes: POW(queues\/{semaphore$0}) & not(semaphore$0: queues_msg) & not(semaphore$0: mutexes) & !que.(que: QUEUE & (not(que: queues) & not(que = semaphore$0)) => not(que: mutexes)) & !que.(que: QUEUE & (not(que: queues) & not(que = semaphore$0)) => not(que: semaphores) & not(que = semaphore$0)) & mt: mutexes);
  ((queue_sending\/{semaphore$0|->{}})(mt) = {});
  ("`Local hypotheses'" & semaphore$0: QUEUE & not(semaphore$0: queues) & queue_receiving\/{semaphore$0|->{}}: QUEUE +-> POW(TASK) & queue_sending\/{semaphore$0|->{}}: QUEUE +-> POW(TASK) & queues\/{semaphore$0} = dom(queue_receiving\/{semaphore$0|->{}}) & queues\/{semaphore$0} = dom(queue_sending\/{semaphore$0|->{}}) & first_receiving\/{semaphore$0|->TASK_NULL}: QUEUE +-> TASK & first_sending\/{semaphore$0|->TASK_NULL}: QUEUE +-> TASK & dom(first_receiving\/{semaphore$0|->TASK_NULL}) = dom(queue_receiving\/{semaphore$0|->{}}) & dom(first_sending\/{semaphore$0|->TASK_NULL}) = dom(queue_sending\/{semaphore$0|->{}}) & !q1.(q1: queues\/{semaphore$0} & q1: dom(first_receiving\/{semaphore$0|->TASK_NULL}) & not((queue_receiving\/{semaphore$0|->{}})(q1) = {}) => (first_receiving\/{semaphore$0|->TASK_NULL})(q1): (queue_receiving\/{semaphore$0|->{}})(q1)) & !q1.(q1: queues\/{semaphore$0} & q1: dom(first_sending\/{semaphore$0|->TASK_NULL}) & not((queue_sending\/{semaphore$0|->{}})(q1) = {}) => (first_sending\/{semaphore$0|->TASK_NULL})(q1): (queue_sending\/{semaphore$0|->{}})(q1)) & queues_msg: POW(queues\/{semaphore$0}) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & tk: TASK & tk: (queue_receiving\/{semaphore$0|->{}})(q1) => not(tk: (queue_sending\/{semaphore$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & tk: TASK & tk: (queue_sending\/{semaphore$0|->{}})(q2) => not(tk: (queue_receiving\/{semaphore$0|->{}})(q1))) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & not(q1 = q2) & tk: TASK & tk: (queue_receiving\/{semaphore$0|->{}})(q1) => not(tk: (queue_receiving\/{semaphore$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & not(q1 = q2) & tk: TASK & tk: (queue_sending\/{semaphore$0|->{}})(q1) => not(tk: (queue_sending\/{semaphore$0|->{}})(q2))) & semaphore$0: queues\/{semaphore$0} & semaphores: POW(queues\/{semaphore$0}) & semaphores_busy: POW(semaphores\/{semaphore$0}) & semaphore$0: semaphores\/{semaphore$0} & semaphores_full: POW(semaphores\/{semaphore$0}) & not(semaphore$0: semaphores_busy) & mutexes: POW(queues\/{semaphore$0}) & not(semaphore$0: queues_msg) & not(semaphore$0: mutexes) & !que.(que: QUEUE & (not(que: queues) & not(que = semaphore$0)) => not(que: mutexes)) & !que.(que: QUEUE & (not(que: queues) & not(que = semaphore$0)) => not(que: semaphores) & not(que = semaphore$0)) & que: queues\/{semaphore$0});
  ("`Local hypotheses'" & semaphore$0: QUEUE & not(semaphore$0: queues) & queue_receiving\/{semaphore$0|->{}}: QUEUE +-> POW(TASK) & queue_sending\/{semaphore$0|->{}}: QUEUE +-> POW(TASK) & queues\/{semaphore$0} = dom(queue_receiving\/{semaphore$0|->{}}) & queues\/{semaphore$0} = dom(queue_sending\/{semaphore$0|->{}}) & first_receiving\/{semaphore$0|->TASK_NULL}: QUEUE +-> TASK & first_sending\/{semaphore$0|->TASK_NULL}: QUEUE +-> TASK & dom(first_receiving\/{semaphore$0|->TASK_NULL}) = dom(queue_receiving\/{semaphore$0|->{}}) & dom(first_sending\/{semaphore$0|->TASK_NULL}) = dom(queue_sending\/{semaphore$0|->{}}) & !q1.(q1: queues\/{semaphore$0} & q1: dom(first_receiving\/{semaphore$0|->TASK_NULL}) & not((queue_receiving\/{semaphore$0|->{}})(q1) = {}) => (first_receiving\/{semaphore$0|->TASK_NULL})(q1): (queue_receiving\/{semaphore$0|->{}})(q1)) & !q1.(q1: queues\/{semaphore$0} & q1: dom(first_sending\/{semaphore$0|->TASK_NULL}) & not((queue_sending\/{semaphore$0|->{}})(q1) = {}) => (first_sending\/{semaphore$0|->TASK_NULL})(q1): (queue_sending\/{semaphore$0|->{}})(q1)) & queues_msg: POW(queues\/{semaphore$0}) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & tk: TASK & tk: (queue_receiving\/{semaphore$0|->{}})(q1) => not(tk: (queue_sending\/{semaphore$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & tk: TASK & tk: (queue_sending\/{semaphore$0|->{}})(q2) => not(tk: (queue_receiving\/{semaphore$0|->{}})(q1))) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & not(q1 = q2) & tk: TASK & tk: (queue_receiving\/{semaphore$0|->{}})(q1) => not(tk: (queue_receiving\/{semaphore$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & not(q1 = q2) & tk: TASK & tk: (queue_sending\/{semaphore$0|->{}})(q1) => not(tk: (queue_sending\/{semaphore$0|->{}})(q2))) & semaphore$0: queues\/{semaphore$0} & semaphores: POW(queues\/{semaphore$0}) & semaphores_busy: POW(semaphores\/{semaphore$0}) & semaphore$0: semaphores\/{semaphore$0} & semaphores_full: POW(semaphores\/{semaphore$0}) & not(semaphore$0: semaphores_busy) & mutexes: POW(queues\/{semaphore$0}) & not(semaphore$0: queues_msg) & not(semaphore$0: mutexes) & !que.(que: QUEUE & (not(que: queues) & not(que = semaphore$0)) => not(que: mutexes)) & !que.(que: QUEUE & (not(que: queues) & not(que = semaphore$0)) => not(que: semaphores) & not(que = semaphore$0)) & mt: mutexes);
  ("`Local hypotheses'" & semaphore$0: QUEUE & not(semaphore$0: queues) & queue_receiving\/{semaphore$0|->{}}: QUEUE +-> POW(TASK) & queue_sending\/{semaphore$0|->{}}: QUEUE +-> POW(TASK) & queues\/{semaphore$0} = dom(queue_receiving\/{semaphore$0|->{}}) & queues\/{semaphore$0} = dom(queue_sending\/{semaphore$0|->{}}) & first_receiving\/{semaphore$0|->TASK_NULL}: QUEUE +-> TASK & first_sending\/{semaphore$0|->TASK_NULL}: QUEUE +-> TASK & dom(first_receiving\/{semaphore$0|->TASK_NULL}) = dom(queue_receiving\/{semaphore$0|->{}}) & dom(first_sending\/{semaphore$0|->TASK_NULL}) = dom(queue_sending\/{semaphore$0|->{}}) & !q1.(q1: queues\/{semaphore$0} & q1: dom(first_receiving\/{semaphore$0|->TASK_NULL}) & not((queue_receiving\/{semaphore$0|->{}})(q1) = {}) => (first_receiving\/{semaphore$0|->TASK_NULL})(q1): (queue_receiving\/{semaphore$0|->{}})(q1)) & !q1.(q1: queues\/{semaphore$0} & q1: dom(first_sending\/{semaphore$0|->TASK_NULL}) & not((queue_sending\/{semaphore$0|->{}})(q1) = {}) => (first_sending\/{semaphore$0|->TASK_NULL})(q1): (queue_sending\/{semaphore$0|->{}})(q1)) & queues_msg: POW(queues\/{semaphore$0}) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & tk: TASK & tk: (queue_receiving\/{semaphore$0|->{}})(q1) => not(tk: (queue_sending\/{semaphore$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & tk: TASK & tk: (queue_sending\/{semaphore$0|->{}})(q2) => not(tk: (queue_receiving\/{semaphore$0|->{}})(q1))) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & not(q1 = q2) & tk: TASK & tk: (queue_receiving\/{semaphore$0|->{}})(q1) => not(tk: (queue_receiving\/{semaphore$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & not(q1 = q2) & tk: TASK & tk: (queue_sending\/{semaphore$0|->{}})(q1) => not(tk: (queue_sending\/{semaphore$0|->{}})(q2))) & semaphore$0: queues\/{semaphore$0} & semaphores: POW(queues\/{semaphore$0}) & semaphores_busy: POW(semaphores\/{semaphore$0}) & semaphores_full: POW(semaphores\/{semaphore$0}) & mutexes: POW(queues\/{semaphore$0}) & not(semaphore$0: queues_msg) & not(semaphore$0: mutexes) & !que.(que: QUEUE & (not(que: queues) & not(que = semaphore$0)) => not(que: mutexes)) & !que.(que: QUEUE & (not(que: queues) & not(que = semaphore$0)) => not(que: semaphores) & not(que = semaphore$0)) & que: queues\/{semaphore$0});
  ("`Local hypotheses'" & semaphore$0: QUEUE & not(semaphore$0: queues) & queue_receiving\/{semaphore$0|->{}}: QUEUE +-> POW(TASK) & queue_sending\/{semaphore$0|->{}}: QUEUE +-> POW(TASK) & queues\/{semaphore$0} = dom(queue_receiving\/{semaphore$0|->{}}) & queues\/{semaphore$0} = dom(queue_sending\/{semaphore$0|->{}}) & first_receiving\/{semaphore$0|->TASK_NULL}: QUEUE +-> TASK & first_sending\/{semaphore$0|->TASK_NULL}: QUEUE +-> TASK & dom(first_receiving\/{semaphore$0|->TASK_NULL}) = dom(queue_receiving\/{semaphore$0|->{}}) & dom(first_sending\/{semaphore$0|->TASK_NULL}) = dom(queue_sending\/{semaphore$0|->{}}) & !q1.(q1: queues\/{semaphore$0} & q1: dom(first_receiving\/{semaphore$0|->TASK_NULL}) & not((queue_receiving\/{semaphore$0|->{}})(q1) = {}) => (first_receiving\/{semaphore$0|->TASK_NULL})(q1): (queue_receiving\/{semaphore$0|->{}})(q1)) & !q1.(q1: queues\/{semaphore$0} & q1: dom(first_sending\/{semaphore$0|->TASK_NULL}) & not((queue_sending\/{semaphore$0|->{}})(q1) = {}) => (first_sending\/{semaphore$0|->TASK_NULL})(q1): (queue_sending\/{semaphore$0|->{}})(q1)) & queues_msg: POW(queues\/{semaphore$0}) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & tk: TASK & tk: (queue_receiving\/{semaphore$0|->{}})(q1) => not(tk: (queue_sending\/{semaphore$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & tk: TASK & tk: (queue_sending\/{semaphore$0|->{}})(q2) => not(tk: (queue_receiving\/{semaphore$0|->{}})(q1))) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & not(q1 = q2) & tk: TASK & tk: (queue_receiving\/{semaphore$0|->{}})(q1) => not(tk: (queue_receiving\/{semaphore$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & not(q1 = q2) & tk: TASK & tk: (queue_sending\/{semaphore$0|->{}})(q1) => not(tk: (queue_sending\/{semaphore$0|->{}})(q2))) & semaphore$0: queues\/{semaphore$0} & semaphores: POW(queues\/{semaphore$0}) & semaphores_busy: POW(semaphores\/{semaphore$0}) & semaphores_full: POW(semaphores\/{semaphore$0}) & mutexes: POW(queues\/{semaphore$0}) & not(semaphore$0: queues_msg) & not(semaphore$0: mutexes) & !que.(que: QUEUE & (not(que: queues) & not(que = semaphore$0)) => not(que: mutexes)) & !que.(que: QUEUE & (not(que: queues) & not(que = semaphore$0)) => not(que: semaphores) & not(que = semaphore$0)) & mt: mutexes);
  ("`vSemaphoreCreateCounting preconditions in this component'" & maxCount: QUEUE_LENGTH & initialCount: QUEUE_QUANT & initialCount<=maxCount);
  ("`deleteSemaphore preconditions in this component'" & semaphore: semaphores & not(queue_sending(semaphore) = {}) & not(queue_receiving(semaphore) = {}));
  ("`Local hypotheses'" & semaphore: semaphores_busy & semaphore: semaphores_full & queues-{semaphore}: POW(QUEUE) & {semaphore}<<|queue_receiving: QUEUE +-> POW(TASK) & {semaphore}<<|queue_sending: QUEUE +-> POW(TASK) & queues-{semaphore} = dom({semaphore}<<|queue_receiving) & queues-{semaphore} = dom({semaphore}<<|queue_sending) & {semaphore}<<|first_receiving: QUEUE +-> TASK & {semaphore}<<|first_sending: QUEUE +-> TASK & dom({semaphore}<<|first_receiving) = dom({semaphore}<<|queue_receiving) & dom({semaphore}<<|first_sending) = dom({semaphore}<<|queue_sending) & !q1.(q1: queues & not(q1 = semaphore) & q1: dom({semaphore}<<|first_receiving) & not(({semaphore}<<|queue_receiving)(q1) = {}) => ({semaphore}<<|first_receiving)(q1): ({semaphore}<<|queue_receiving)(q1)) & !q1.(q1: queues & not(q1 = semaphore) & q1: dom({semaphore}<<|first_sending) & not(({semaphore}<<|queue_sending)(q1) = {}) => ({semaphore}<<|first_sending)(q1): ({semaphore}<<|queue_sending)(q1)) & queues_msg: POW(queues-{semaphore}) & !(q1,q2,tk).(q1: queues & not(q1 = semaphore) & (q2: queues & not(q2 = semaphore)) & tk: TASK & tk: ({semaphore}<<|queue_receiving)(q1) => not(tk: ({semaphore}<<|queue_sending)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = semaphore) & (q2: queues & not(q2 = semaphore)) & tk: TASK & tk: ({semaphore}<<|queue_sending)(q2) => not(tk: ({semaphore}<<|queue_receiving)(q1))) & !(q1,q2,tk).(q1: queues & not(q1 = semaphore) & (q2: queues & not(q2 = semaphore)) & not(q1 = q2) & tk: TASK & tk: ({semaphore}<<|queue_receiving)(q1) => not(tk: ({semaphore}<<|queue_receiving)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = semaphore) & (q2: queues & not(q2 = semaphore)) & not(q1 = q2) & tk: TASK & tk: ({semaphore}<<|queue_sending)(q1) => not(tk: ({semaphore}<<|queue_sending)(q2))) & semaphores-{semaphore}: POW(QUEUE) & semaphores-{semaphore}: POW(queues-{semaphore}) & semaphores_busy-{semaphore}: POW(semaphores-{semaphore}) & semaphores_full-{semaphore}: POW(semaphores-{semaphore}) & semaphores_busy-{semaphore}/\semaphores_full-{semaphore} = {} & mutexes: POW(queues-{semaphore}) & queues_msg/\semaphores-{semaphore} = {} & mutexes/\semaphores-{semaphore} = {} & !que.(que: QUEUE & not(que: queues & not(que = semaphore)) => not(que: mutexes)) & !que.(que: QUEUE & not(que: queues & not(que = semaphore)) => not(que: semaphores & not(que = semaphore))) & que: queues & not(que = semaphore));
  (({semaphore}<<|queue_sending)(que): POW(blocked\/suspended));
  (({semaphore}<<|queue_receiving)(que): POW(blocked\/suspended));
  ("`Local hypotheses'" & semaphore: semaphores_busy & semaphore: semaphores_full & queues-{semaphore}: POW(QUEUE) & {semaphore}<<|queue_receiving: QUEUE +-> POW(TASK) & {semaphore}<<|queue_sending: QUEUE +-> POW(TASK) & queues-{semaphore} = dom({semaphore}<<|queue_receiving) & queues-{semaphore} = dom({semaphore}<<|queue_sending) & {semaphore}<<|first_receiving: QUEUE +-> TASK & {semaphore}<<|first_sending: QUEUE +-> TASK & dom({semaphore}<<|first_receiving) = dom({semaphore}<<|queue_receiving) & dom({semaphore}<<|first_sending) = dom({semaphore}<<|queue_sending) & !q1.(q1: queues & not(q1 = semaphore) & q1: dom({semaphore}<<|first_receiving) & not(({semaphore}<<|queue_receiving)(q1) = {}) => ({semaphore}<<|first_receiving)(q1): ({semaphore}<<|queue_receiving)(q1)) & !q1.(q1: queues & not(q1 = semaphore) & q1: dom({semaphore}<<|first_sending) & not(({semaphore}<<|queue_sending)(q1) = {}) => ({semaphore}<<|first_sending)(q1): ({semaphore}<<|queue_sending)(q1)) & queues_msg: POW(queues-{semaphore}) & !(q1,q2,tk).(q1: queues & not(q1 = semaphore) & (q2: queues & not(q2 = semaphore)) & tk: TASK & tk: ({semaphore}<<|queue_receiving)(q1) => not(tk: ({semaphore}<<|queue_sending)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = semaphore) & (q2: queues & not(q2 = semaphore)) & tk: TASK & tk: ({semaphore}<<|queue_sending)(q2) => not(tk: ({semaphore}<<|queue_receiving)(q1))) & !(q1,q2,tk).(q1: queues & not(q1 = semaphore) & (q2: queues & not(q2 = semaphore)) & not(q1 = q2) & tk: TASK & tk: ({semaphore}<<|queue_receiving)(q1) => not(tk: ({semaphore}<<|queue_receiving)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = semaphore) & (q2: queues & not(q2 = semaphore)) & not(q1 = q2) & tk: TASK & tk: ({semaphore}<<|queue_sending)(q1) => not(tk: ({semaphore}<<|queue_sending)(q2))) & semaphores-{semaphore}: POW(QUEUE) & semaphores-{semaphore}: POW(queues-{semaphore}) & semaphores_busy-{semaphore}: POW(semaphores-{semaphore}) & semaphores_full-{semaphore}: POW(semaphores-{semaphore}) & semaphores_busy-{semaphore}/\semaphores_full-{semaphore} = {} & mutexes: POW(queues-{semaphore}) & queues_msg/\semaphores-{semaphore} = {} & mutexes/\semaphores-{semaphore} = {} & !que.(que: QUEUE & not(que: queues & not(que = semaphore)) => not(que: mutexes)) & !que.(que: QUEUE & not(que: queues & not(que = semaphore)) => not(que: semaphores & not(que = semaphore))) & mt: mutexes);
  (({semaphore}<<|queue_sending)(mt) = {});
  ("`Local hypotheses'" & semaphore: semaphores_busy & not(semaphore: semaphores_full) & queues-{semaphore}: POW(QUEUE) & {semaphore}<<|queue_receiving: QUEUE +-> POW(TASK) & {semaphore}<<|queue_sending: QUEUE +-> POW(TASK) & queues-{semaphore} = dom({semaphore}<<|queue_receiving) & queues-{semaphore} = dom({semaphore}<<|queue_sending) & {semaphore}<<|first_receiving: QUEUE +-> TASK & {semaphore}<<|first_sending: QUEUE +-> TASK & dom({semaphore}<<|first_receiving) = dom({semaphore}<<|queue_receiving) & dom({semaphore}<<|first_sending) = dom({semaphore}<<|queue_sending) & !q1.(q1: queues & not(q1 = semaphore) & q1: dom({semaphore}<<|first_receiving) & not(({semaphore}<<|queue_receiving)(q1) = {}) => ({semaphore}<<|first_receiving)(q1): ({semaphore}<<|queue_receiving)(q1)) & !q1.(q1: queues & not(q1 = semaphore) & q1: dom({semaphore}<<|first_sending) & not(({semaphore}<<|queue_sending)(q1) = {}) => ({semaphore}<<|first_sending)(q1): ({semaphore}<<|queue_sending)(q1)) & queues_msg: POW(queues-{semaphore}) & !(q1,q2,tk).(q1: queues & not(q1 = semaphore) & (q2: queues & not(q2 = semaphore)) & tk: TASK & tk: ({semaphore}<<|queue_receiving)(q1) => not(tk: ({semaphore}<<|queue_sending)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = semaphore) & (q2: queues & not(q2 = semaphore)) & tk: TASK & tk: ({semaphore}<<|queue_sending)(q2) => not(tk: ({semaphore}<<|queue_receiving)(q1))) & !(q1,q2,tk).(q1: queues & not(q1 = semaphore) & (q2: queues & not(q2 = semaphore)) & not(q1 = q2) & tk: TASK & tk: ({semaphore}<<|queue_receiving)(q1) => not(tk: ({semaphore}<<|queue_receiving)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = semaphore) & (q2: queues & not(q2 = semaphore)) & not(q1 = q2) & tk: TASK & tk: ({semaphore}<<|queue_sending)(q1) => not(tk: ({semaphore}<<|queue_sending)(q2))) & semaphores-{semaphore}: POW(QUEUE) & semaphores-{semaphore}: POW(queues-{semaphore}) & semaphores_busy-{semaphore}: POW(semaphores-{semaphore}) & semaphores_full: POW(semaphores-{semaphore}) & semaphores_busy-{semaphore}/\semaphores_full = {} & mutexes: POW(queues-{semaphore}) & queues_msg/\semaphores-{semaphore} = {} & mutexes/\semaphores-{semaphore} = {} & !que.(que: QUEUE & not(que: queues & not(que = semaphore)) => not(que: mutexes)) & !que.(que: QUEUE & not(que: queues & not(que = semaphore)) => not(que: semaphores & not(que = semaphore))) & que: queues & not(que = semaphore));
  ("`Local hypotheses'" & semaphore: semaphores_busy & not(semaphore: semaphores_full) & queues-{semaphore}: POW(QUEUE) & {semaphore}<<|queue_receiving: QUEUE +-> POW(TASK) & {semaphore}<<|queue_sending: QUEUE +-> POW(TASK) & queues-{semaphore} = dom({semaphore}<<|queue_receiving) & queues-{semaphore} = dom({semaphore}<<|queue_sending) & {semaphore}<<|first_receiving: QUEUE +-> TASK & {semaphore}<<|first_sending: QUEUE +-> TASK & dom({semaphore}<<|first_receiving) = dom({semaphore}<<|queue_receiving) & dom({semaphore}<<|first_sending) = dom({semaphore}<<|queue_sending) & !q1.(q1: queues & not(q1 = semaphore) & q1: dom({semaphore}<<|first_receiving) & not(({semaphore}<<|queue_receiving)(q1) = {}) => ({semaphore}<<|first_receiving)(q1): ({semaphore}<<|queue_receiving)(q1)) & !q1.(q1: queues & not(q1 = semaphore) & q1: dom({semaphore}<<|first_sending) & not(({semaphore}<<|queue_sending)(q1) = {}) => ({semaphore}<<|first_sending)(q1): ({semaphore}<<|queue_sending)(q1)) & queues_msg: POW(queues-{semaphore}) & !(q1,q2,tk).(q1: queues & not(q1 = semaphore) & (q2: queues & not(q2 = semaphore)) & tk: TASK & tk: ({semaphore}<<|queue_receiving)(q1) => not(tk: ({semaphore}<<|queue_sending)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = semaphore) & (q2: queues & not(q2 = semaphore)) & tk: TASK & tk: ({semaphore}<<|queue_sending)(q2) => not(tk: ({semaphore}<<|queue_receiving)(q1))) & !(q1,q2,tk).(q1: queues & not(q1 = semaphore) & (q2: queues & not(q2 = semaphore)) & not(q1 = q2) & tk: TASK & tk: ({semaphore}<<|queue_receiving)(q1) => not(tk: ({semaphore}<<|queue_receiving)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = semaphore) & (q2: queues & not(q2 = semaphore)) & not(q1 = q2) & tk: TASK & tk: ({semaphore}<<|queue_sending)(q1) => not(tk: ({semaphore}<<|queue_sending)(q2))) & semaphores-{semaphore}: POW(QUEUE) & semaphores-{semaphore}: POW(queues-{semaphore}) & semaphores_busy-{semaphore}: POW(semaphores-{semaphore}) & semaphores_full: POW(semaphores-{semaphore}) & semaphores_busy-{semaphore}/\semaphores_full = {} & mutexes: POW(queues-{semaphore}) & queues_msg/\semaphores-{semaphore} = {} & mutexes/\semaphores-{semaphore} = {} & !que.(que: QUEUE & not(que: queues & not(que = semaphore)) => not(que: mutexes)) & !que.(que: QUEUE & not(que: queues & not(que = semaphore)) => not(que: semaphores & not(que = semaphore))) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & semaphore: semaphores_full & queues-{semaphore}: POW(QUEUE) & {semaphore}<<|queue_receiving: QUEUE +-> POW(TASK) & {semaphore}<<|queue_sending: QUEUE +-> POW(TASK) & queues-{semaphore} = dom({semaphore}<<|queue_receiving) & queues-{semaphore} = dom({semaphore}<<|queue_sending) & {semaphore}<<|first_receiving: QUEUE +-> TASK & {semaphore}<<|first_sending: QUEUE +-> TASK & dom({semaphore}<<|first_receiving) = dom({semaphore}<<|queue_receiving) & dom({semaphore}<<|first_sending) = dom({semaphore}<<|queue_sending) & !q1.(q1: queues & not(q1 = semaphore) & q1: dom({semaphore}<<|first_receiving) & not(({semaphore}<<|queue_receiving)(q1) = {}) => ({semaphore}<<|first_receiving)(q1): ({semaphore}<<|queue_receiving)(q1)) & !q1.(q1: queues & not(q1 = semaphore) & q1: dom({semaphore}<<|first_sending) & not(({semaphore}<<|queue_sending)(q1) = {}) => ({semaphore}<<|first_sending)(q1): ({semaphore}<<|queue_sending)(q1)) & queues_msg: POW(queues-{semaphore}) & !(q1,q2,tk).(q1: queues & not(q1 = semaphore) & (q2: queues & not(q2 = semaphore)) & tk: TASK & tk: ({semaphore}<<|queue_receiving)(q1) => not(tk: ({semaphore}<<|queue_sending)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = semaphore) & (q2: queues & not(q2 = semaphore)) & tk: TASK & tk: ({semaphore}<<|queue_sending)(q2) => not(tk: ({semaphore}<<|queue_receiving)(q1))) & !(q1,q2,tk).(q1: queues & not(q1 = semaphore) & (q2: queues & not(q2 = semaphore)) & not(q1 = q2) & tk: TASK & tk: ({semaphore}<<|queue_receiving)(q1) => not(tk: ({semaphore}<<|queue_receiving)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = semaphore) & (q2: queues & not(q2 = semaphore)) & not(q1 = q2) & tk: TASK & tk: ({semaphore}<<|queue_sending)(q1) => not(tk: ({semaphore}<<|queue_sending)(q2))) & semaphores-{semaphore}: POW(QUEUE) & semaphores-{semaphore}: POW(queues-{semaphore}) & semaphores_busy: POW(semaphores-{semaphore}) & semaphores_full-{semaphore}: POW(semaphores-{semaphore}) & semaphores_busy/\semaphores_full-{semaphore} = {} & mutexes: POW(queues-{semaphore}) & queues_msg/\semaphores-{semaphore} = {} & mutexes/\semaphores-{semaphore} = {} & !que.(que: QUEUE & not(que: queues & not(que = semaphore)) => not(que: mutexes)) & !que.(que: QUEUE & not(que: queues & not(que = semaphore)) => not(que: semaphores & not(que = semaphore))) & que: queues & not(que = semaphore));
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & semaphore: semaphores_full & queues-{semaphore}: POW(QUEUE) & {semaphore}<<|queue_receiving: QUEUE +-> POW(TASK) & {semaphore}<<|queue_sending: QUEUE +-> POW(TASK) & queues-{semaphore} = dom({semaphore}<<|queue_receiving) & queues-{semaphore} = dom({semaphore}<<|queue_sending) & {semaphore}<<|first_receiving: QUEUE +-> TASK & {semaphore}<<|first_sending: QUEUE +-> TASK & dom({semaphore}<<|first_receiving) = dom({semaphore}<<|queue_receiving) & dom({semaphore}<<|first_sending) = dom({semaphore}<<|queue_sending) & !q1.(q1: queues & not(q1 = semaphore) & q1: dom({semaphore}<<|first_receiving) & not(({semaphore}<<|queue_receiving)(q1) = {}) => ({semaphore}<<|first_receiving)(q1): ({semaphore}<<|queue_receiving)(q1)) & !q1.(q1: queues & not(q1 = semaphore) & q1: dom({semaphore}<<|first_sending) & not(({semaphore}<<|queue_sending)(q1) = {}) => ({semaphore}<<|first_sending)(q1): ({semaphore}<<|queue_sending)(q1)) & queues_msg: POW(queues-{semaphore}) & !(q1,q2,tk).(q1: queues & not(q1 = semaphore) & (q2: queues & not(q2 = semaphore)) & tk: TASK & tk: ({semaphore}<<|queue_receiving)(q1) => not(tk: ({semaphore}<<|queue_sending)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = semaphore) & (q2: queues & not(q2 = semaphore)) & tk: TASK & tk: ({semaphore}<<|queue_sending)(q2) => not(tk: ({semaphore}<<|queue_receiving)(q1))) & !(q1,q2,tk).(q1: queues & not(q1 = semaphore) & (q2: queues & not(q2 = semaphore)) & not(q1 = q2) & tk: TASK & tk: ({semaphore}<<|queue_receiving)(q1) => not(tk: ({semaphore}<<|queue_receiving)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = semaphore) & (q2: queues & not(q2 = semaphore)) & not(q1 = q2) & tk: TASK & tk: ({semaphore}<<|queue_sending)(q1) => not(tk: ({semaphore}<<|queue_sending)(q2))) & semaphores-{semaphore}: POW(QUEUE) & semaphores-{semaphore}: POW(queues-{semaphore}) & semaphores_busy: POW(semaphores-{semaphore}) & semaphores_full-{semaphore}: POW(semaphores-{semaphore}) & semaphores_busy/\semaphores_full-{semaphore} = {} & mutexes: POW(queues-{semaphore}) & queues_msg/\semaphores-{semaphore} = {} & mutexes/\semaphores-{semaphore} = {} & !que.(que: QUEUE & not(que: queues & not(que = semaphore)) => not(que: mutexes)) & !que.(que: QUEUE & not(que: queues & not(que = semaphore)) => not(que: semaphores & not(que = semaphore))) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(semaphore: semaphores_full) & queues-{semaphore}: POW(QUEUE) & {semaphore}<<|queue_receiving: QUEUE +-> POW(TASK) & {semaphore}<<|queue_sending: QUEUE +-> POW(TASK) & queues-{semaphore} = dom({semaphore}<<|queue_receiving) & queues-{semaphore} = dom({semaphore}<<|queue_sending) & {semaphore}<<|first_receiving: QUEUE +-> TASK & {semaphore}<<|first_sending: QUEUE +-> TASK & dom({semaphore}<<|first_receiving) = dom({semaphore}<<|queue_receiving) & dom({semaphore}<<|first_sending) = dom({semaphore}<<|queue_sending) & !q1.(q1: queues & not(q1 = semaphore) & q1: dom({semaphore}<<|first_receiving) & not(({semaphore}<<|queue_receiving)(q1) = {}) => ({semaphore}<<|first_receiving)(q1): ({semaphore}<<|queue_receiving)(q1)) & !q1.(q1: queues & not(q1 = semaphore) & q1: dom({semaphore}<<|first_sending) & not(({semaphore}<<|queue_sending)(q1) = {}) => ({semaphore}<<|first_sending)(q1): ({semaphore}<<|queue_sending)(q1)) & queues_msg: POW(queues-{semaphore}) & !(q1,q2,tk).(q1: queues & not(q1 = semaphore) & (q2: queues & not(q2 = semaphore)) & tk: TASK & tk: ({semaphore}<<|queue_receiving)(q1) => not(tk: ({semaphore}<<|queue_sending)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = semaphore) & (q2: queues & not(q2 = semaphore)) & tk: TASK & tk: ({semaphore}<<|queue_sending)(q2) => not(tk: ({semaphore}<<|queue_receiving)(q1))) & !(q1,q2,tk).(q1: queues & not(q1 = semaphore) & (q2: queues & not(q2 = semaphore)) & not(q1 = q2) & tk: TASK & tk: ({semaphore}<<|queue_receiving)(q1) => not(tk: ({semaphore}<<|queue_receiving)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = semaphore) & (q2: queues & not(q2 = semaphore)) & not(q1 = q2) & tk: TASK & tk: ({semaphore}<<|queue_sending)(q1) => not(tk: ({semaphore}<<|queue_sending)(q2))) & semaphores-{semaphore}: POW(QUEUE) & semaphores-{semaphore}: POW(queues-{semaphore}) & semaphores_busy: POW(semaphores-{semaphore}) & semaphores_full: POW(semaphores-{semaphore}) & mutexes: POW(queues-{semaphore}) & queues_msg/\semaphores-{semaphore} = {} & mutexes/\semaphores-{semaphore} = {} & !que.(que: QUEUE & not(que: queues & not(que = semaphore)) => not(que: mutexes)) & !que.(que: QUEUE & not(que: queues & not(que = semaphore)) => not(que: semaphores & not(que = semaphore))) & que: queues & not(que = semaphore));
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(semaphore: semaphores_full) & queues-{semaphore}: POW(QUEUE) & {semaphore}<<|queue_receiving: QUEUE +-> POW(TASK) & {semaphore}<<|queue_sending: QUEUE +-> POW(TASK) & queues-{semaphore} = dom({semaphore}<<|queue_receiving) & queues-{semaphore} = dom({semaphore}<<|queue_sending) & {semaphore}<<|first_receiving: QUEUE +-> TASK & {semaphore}<<|first_sending: QUEUE +-> TASK & dom({semaphore}<<|first_receiving) = dom({semaphore}<<|queue_receiving) & dom({semaphore}<<|first_sending) = dom({semaphore}<<|queue_sending) & !q1.(q1: queues & not(q1 = semaphore) & q1: dom({semaphore}<<|first_receiving) & not(({semaphore}<<|queue_receiving)(q1) = {}) => ({semaphore}<<|first_receiving)(q1): ({semaphore}<<|queue_receiving)(q1)) & !q1.(q1: queues & not(q1 = semaphore) & q1: dom({semaphore}<<|first_sending) & not(({semaphore}<<|queue_sending)(q1) = {}) => ({semaphore}<<|first_sending)(q1): ({semaphore}<<|queue_sending)(q1)) & queues_msg: POW(queues-{semaphore}) & !(q1,q2,tk).(q1: queues & not(q1 = semaphore) & (q2: queues & not(q2 = semaphore)) & tk: TASK & tk: ({semaphore}<<|queue_receiving)(q1) => not(tk: ({semaphore}<<|queue_sending)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = semaphore) & (q2: queues & not(q2 = semaphore)) & tk: TASK & tk: ({semaphore}<<|queue_sending)(q2) => not(tk: ({semaphore}<<|queue_receiving)(q1))) & !(q1,q2,tk).(q1: queues & not(q1 = semaphore) & (q2: queues & not(q2 = semaphore)) & not(q1 = q2) & tk: TASK & tk: ({semaphore}<<|queue_receiving)(q1) => not(tk: ({semaphore}<<|queue_receiving)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = semaphore) & (q2: queues & not(q2 = semaphore)) & not(q1 = q2) & tk: TASK & tk: ({semaphore}<<|queue_sending)(q1) => not(tk: ({semaphore}<<|queue_sending)(q2))) & semaphores-{semaphore}: POW(QUEUE) & semaphores-{semaphore}: POW(queues-{semaphore}) & semaphores_busy: POW(semaphores-{semaphore}) & semaphores_full: POW(semaphores-{semaphore}) & mutexes: POW(queues-{semaphore}) & queues_msg/\semaphores-{semaphore} = {} & mutexes/\semaphores-{semaphore} = {} & !que.(que: QUEUE & not(que: queues & not(que = semaphore)) => not(que: mutexes)) & !que.(que: QUEUE & not(que: queues & not(que = semaphore)) => not(que: semaphores & not(que = semaphore))) & mt: mutexes);
  ("`takeSemaphore preconditions in this component'" & semaphore: semaphores & xTicksToWait: TICK & not(running = idle) & active = TRUE & not(running = TASK_NULL));
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}));
  (first_sending(semaphore): TASK);
  (first_sending(semaphore): blocked\/suspended);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & running$0: n_runable & first_sending(semaphore): suspended & first_sending(semaphore): blocked & first_sending(semaphore): unblocked & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & semaphore: semaphores_full & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked-{first_sending(semaphore)}: FIN(TASK) & unblocked-{first_sending(semaphore)}: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & suspended-{first_sending(semaphore)}: FIN(TASK) & suspended-{first_sending(semaphore)}: POW(tasks) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended-{first_sending(semaphore)} = {} & suspended-{first_sending(semaphore)}/\n_runable = {} & tasks = suspended-{first_sending(semaphore)}\/blocked-{first_sending(semaphore)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_full-{semaphore}: POW(semaphores) & semaphores_busy\/{semaphore}/\semaphores_full-{semaphore} = {} & (active = TRUE => not(running$0: suspended & not(running$0 = first_sending(semaphore)))) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(semaphore)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(semaphore)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ((queue_sending<+{semaphore|->n_sending})(que): POW(blocked-{first_sending(semaphore)}\/suspended-{first_sending(semaphore)}));
  (queue_receiving(que): POW(blocked-{first_sending(semaphore)}\/suspended-{first_sending(semaphore)}));
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & running$0: n_runable & first_sending(semaphore): suspended & first_sending(semaphore): blocked & first_sending(semaphore): unblocked & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & semaphore: semaphores_full & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked-{first_sending(semaphore)}: FIN(TASK) & unblocked-{first_sending(semaphore)}: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & suspended-{first_sending(semaphore)}: FIN(TASK) & suspended-{first_sending(semaphore)}: POW(tasks) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended-{first_sending(semaphore)} = {} & suspended-{first_sending(semaphore)}/\n_runable = {} & tasks = suspended-{first_sending(semaphore)}\/blocked-{first_sending(semaphore)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_full-{semaphore}: POW(semaphores) & semaphores_busy\/{semaphore}/\semaphores_full-{semaphore} = {} & (active = TRUE => not(running$0: suspended & not(running$0 = first_sending(semaphore)))) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(semaphore)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(semaphore)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ((queue_sending<+{semaphore|->n_sending})(mt) = {});
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & running$0: n_runable & first_sending(semaphore): suspended & first_sending(semaphore): blocked & first_sending(semaphore): unblocked & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & not(semaphore: semaphores_full) & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked-{first_sending(semaphore)}: FIN(TASK) & unblocked-{first_sending(semaphore)}: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & suspended-{first_sending(semaphore)}: FIN(TASK) & suspended-{first_sending(semaphore)}: POW(tasks) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended-{first_sending(semaphore)} = {} & suspended-{first_sending(semaphore)}/\n_runable = {} & tasks = suspended-{first_sending(semaphore)}\/blocked-{first_sending(semaphore)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_busy\/{semaphore}/\semaphores_full = {} & (active = TRUE => not(running$0: suspended & not(running$0 = first_sending(semaphore)))) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(semaphore)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(semaphore)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & running$0: n_runable & first_sending(semaphore): suspended & first_sending(semaphore): blocked & first_sending(semaphore): unblocked & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & not(semaphore: semaphores_full) & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked-{first_sending(semaphore)}: FIN(TASK) & unblocked-{first_sending(semaphore)}: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & suspended-{first_sending(semaphore)}: FIN(TASK) & suspended-{first_sending(semaphore)}: POW(tasks) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended-{first_sending(semaphore)} = {} & suspended-{first_sending(semaphore)}/\n_runable = {} & tasks = suspended-{first_sending(semaphore)}\/blocked-{first_sending(semaphore)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_busy\/{semaphore}/\semaphores_full = {} & (active = TRUE => not(running$0: suspended & not(running$0 = first_sending(semaphore)))) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(semaphore)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(semaphore)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & running$0: n_runable & first_sending(semaphore): suspended & first_sending(semaphore): blocked & first_sending(semaphore): unblocked & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & semaphore: semaphores_full & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked-{first_sending(semaphore)}: FIN(TASK) & unblocked-{first_sending(semaphore)}: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & suspended-{first_sending(semaphore)}: FIN(TASK) & suspended-{first_sending(semaphore)}: POW(tasks) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended-{first_sending(semaphore)} = {} & suspended-{first_sending(semaphore)}/\n_runable = {} & tasks = suspended-{first_sending(semaphore)}\/blocked-{first_sending(semaphore)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_full-{semaphore}: POW(semaphores) & semaphores_busy/\semaphores_full-{semaphore} = {} & (active = TRUE => not(running$0: suspended & not(running$0 = first_sending(semaphore)))) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(semaphore)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(semaphore)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & running$0: n_runable & first_sending(semaphore): suspended & first_sending(semaphore): blocked & first_sending(semaphore): unblocked & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & semaphore: semaphores_full & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked-{first_sending(semaphore)}: FIN(TASK) & unblocked-{first_sending(semaphore)}: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & suspended-{first_sending(semaphore)}: FIN(TASK) & suspended-{first_sending(semaphore)}: POW(tasks) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended-{first_sending(semaphore)} = {} & suspended-{first_sending(semaphore)}/\n_runable = {} & tasks = suspended-{first_sending(semaphore)}\/blocked-{first_sending(semaphore)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_full-{semaphore}: POW(semaphores) & semaphores_busy/\semaphores_full-{semaphore} = {} & (active = TRUE => not(running$0: suspended & not(running$0 = first_sending(semaphore)))) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(semaphore)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(semaphore)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & running$0: n_runable & first_sending(semaphore): suspended & first_sending(semaphore): blocked & first_sending(semaphore): unblocked & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & not(semaphore: semaphores_full) & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked-{first_sending(semaphore)}: FIN(TASK) & unblocked-{first_sending(semaphore)}: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & suspended-{first_sending(semaphore)}: FIN(TASK) & suspended-{first_sending(semaphore)}: POW(tasks) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended-{first_sending(semaphore)} = {} & suspended-{first_sending(semaphore)}/\n_runable = {} & tasks = suspended-{first_sending(semaphore)}\/blocked-{first_sending(semaphore)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = first_sending(semaphore)))) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(semaphore)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(semaphore)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & running$0: n_runable & first_sending(semaphore): suspended & first_sending(semaphore): blocked & first_sending(semaphore): unblocked & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & not(semaphore: semaphores_full) & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked-{first_sending(semaphore)}: FIN(TASK) & unblocked-{first_sending(semaphore)}: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & suspended-{first_sending(semaphore)}: FIN(TASK) & suspended-{first_sending(semaphore)}: POW(tasks) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended-{first_sending(semaphore)} = {} & suspended-{first_sending(semaphore)}/\n_runable = {} & tasks = suspended-{first_sending(semaphore)}\/blocked-{first_sending(semaphore)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = first_sending(semaphore)))) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(semaphore)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(semaphore)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & running$0: n_runable & first_sending(semaphore): suspended & first_sending(semaphore): blocked & not(first_sending(semaphore): unblocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & semaphore: semaphores_full & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & suspended-{first_sending(semaphore)}: FIN(TASK) & suspended-{first_sending(semaphore)}: POW(tasks) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended-{first_sending(semaphore)} = {} & suspended-{first_sending(semaphore)}/\n_runable = {} & tasks = suspended-{first_sending(semaphore)}\/blocked-{first_sending(semaphore)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_full-{semaphore}: POW(semaphores) & semaphores_busy\/{semaphore}/\semaphores_full-{semaphore} = {} & (active = TRUE => not(running$0: suspended & not(running$0 = first_sending(semaphore)))) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(semaphore)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(semaphore)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & running$0: n_runable & first_sending(semaphore): suspended & first_sending(semaphore): blocked & not(first_sending(semaphore): unblocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & semaphore: semaphores_full & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & suspended-{first_sending(semaphore)}: FIN(TASK) & suspended-{first_sending(semaphore)}: POW(tasks) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended-{first_sending(semaphore)} = {} & suspended-{first_sending(semaphore)}/\n_runable = {} & tasks = suspended-{first_sending(semaphore)}\/blocked-{first_sending(semaphore)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_full-{semaphore}: POW(semaphores) & semaphores_busy\/{semaphore}/\semaphores_full-{semaphore} = {} & (active = TRUE => not(running$0: suspended & not(running$0 = first_sending(semaphore)))) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(semaphore)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(semaphore)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & running$0: n_runable & first_sending(semaphore): suspended & first_sending(semaphore): blocked & not(first_sending(semaphore): unblocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & not(semaphore: semaphores_full) & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & suspended-{first_sending(semaphore)}: FIN(TASK) & suspended-{first_sending(semaphore)}: POW(tasks) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended-{first_sending(semaphore)} = {} & suspended-{first_sending(semaphore)}/\n_runable = {} & tasks = suspended-{first_sending(semaphore)}\/blocked-{first_sending(semaphore)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_busy\/{semaphore}/\semaphores_full = {} & (active = TRUE => not(running$0: suspended & not(running$0 = first_sending(semaphore)))) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(semaphore)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(semaphore)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & running$0: n_runable & first_sending(semaphore): suspended & first_sending(semaphore): blocked & not(first_sending(semaphore): unblocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & not(semaphore: semaphores_full) & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & suspended-{first_sending(semaphore)}: FIN(TASK) & suspended-{first_sending(semaphore)}: POW(tasks) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended-{first_sending(semaphore)} = {} & suspended-{first_sending(semaphore)}/\n_runable = {} & tasks = suspended-{first_sending(semaphore)}\/blocked-{first_sending(semaphore)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_busy\/{semaphore}/\semaphores_full = {} & (active = TRUE => not(running$0: suspended & not(running$0 = first_sending(semaphore)))) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(semaphore)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(semaphore)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & running$0: n_runable & first_sending(semaphore): suspended & first_sending(semaphore): blocked & not(first_sending(semaphore): unblocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & semaphore: semaphores_full & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & suspended-{first_sending(semaphore)}: FIN(TASK) & suspended-{first_sending(semaphore)}: POW(tasks) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended-{first_sending(semaphore)} = {} & suspended-{first_sending(semaphore)}/\n_runable = {} & tasks = suspended-{first_sending(semaphore)}\/blocked-{first_sending(semaphore)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_full-{semaphore}: POW(semaphores) & semaphores_busy/\semaphores_full-{semaphore} = {} & (active = TRUE => not(running$0: suspended & not(running$0 = first_sending(semaphore)))) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(semaphore)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(semaphore)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & running$0: n_runable & first_sending(semaphore): suspended & first_sending(semaphore): blocked & not(first_sending(semaphore): unblocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & semaphore: semaphores_full & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & suspended-{first_sending(semaphore)}: FIN(TASK) & suspended-{first_sending(semaphore)}: POW(tasks) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended-{first_sending(semaphore)} = {} & suspended-{first_sending(semaphore)}/\n_runable = {} & tasks = suspended-{first_sending(semaphore)}\/blocked-{first_sending(semaphore)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_full-{semaphore}: POW(semaphores) & semaphores_busy/\semaphores_full-{semaphore} = {} & (active = TRUE => not(running$0: suspended & not(running$0 = first_sending(semaphore)))) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(semaphore)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(semaphore)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & running$0: n_runable & first_sending(semaphore): suspended & first_sending(semaphore): blocked & not(first_sending(semaphore): unblocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & not(semaphore: semaphores_full) & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & suspended-{first_sending(semaphore)}: FIN(TASK) & suspended-{first_sending(semaphore)}: POW(tasks) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended-{first_sending(semaphore)} = {} & suspended-{first_sending(semaphore)}/\n_runable = {} & tasks = suspended-{first_sending(semaphore)}\/blocked-{first_sending(semaphore)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = first_sending(semaphore)))) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(semaphore)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(semaphore)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & running$0: n_runable & first_sending(semaphore): suspended & first_sending(semaphore): blocked & not(first_sending(semaphore): unblocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & not(semaphore: semaphores_full) & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & suspended-{first_sending(semaphore)}: FIN(TASK) & suspended-{first_sending(semaphore)}: POW(tasks) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended-{first_sending(semaphore)} = {} & suspended-{first_sending(semaphore)}/\n_runable = {} & tasks = suspended-{first_sending(semaphore)}\/blocked-{first_sending(semaphore)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = first_sending(semaphore)))) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(semaphore)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(semaphore)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & running$0: n_runable & first_sending(semaphore): suspended & not(first_sending(semaphore): blocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & semaphore: semaphores_full & n_runable: FIN(TASK) & suspended-{first_sending(semaphore)}: FIN(TASK) & suspended-{first_sending(semaphore)}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{first_sending(semaphore)} = {} & suspended-{first_sending(semaphore)}/\n_runable = {} & tasks = suspended-{first_sending(semaphore)}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_full-{semaphore}: POW(semaphores) & semaphores_busy\/{semaphore}/\semaphores_full-{semaphore} = {} & (active = TRUE => not(running$0: suspended & not(running$0 = first_sending(semaphore)))) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ((queue_sending<+{semaphore|->n_sending})(que): POW(blocked\/suspended-{first_sending(semaphore)}));
  (queue_receiving(que): POW(blocked\/suspended-{first_sending(semaphore)}));
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & running$0: n_runable & first_sending(semaphore): suspended & not(first_sending(semaphore): blocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & semaphore: semaphores_full & n_runable: FIN(TASK) & suspended-{first_sending(semaphore)}: FIN(TASK) & suspended-{first_sending(semaphore)}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{first_sending(semaphore)} = {} & suspended-{first_sending(semaphore)}/\n_runable = {} & tasks = suspended-{first_sending(semaphore)}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_full-{semaphore}: POW(semaphores) & semaphores_busy\/{semaphore}/\semaphores_full-{semaphore} = {} & (active = TRUE => not(running$0: suspended & not(running$0 = first_sending(semaphore)))) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & running$0: n_runable & first_sending(semaphore): suspended & not(first_sending(semaphore): blocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & not(semaphore: semaphores_full) & n_runable: FIN(TASK) & suspended-{first_sending(semaphore)}: FIN(TASK) & suspended-{first_sending(semaphore)}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{first_sending(semaphore)} = {} & suspended-{first_sending(semaphore)}/\n_runable = {} & tasks = suspended-{first_sending(semaphore)}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_busy\/{semaphore}/\semaphores_full = {} & (active = TRUE => not(running$0: suspended & not(running$0 = first_sending(semaphore)))) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & running$0: n_runable & first_sending(semaphore): suspended & not(first_sending(semaphore): blocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & not(semaphore: semaphores_full) & n_runable: FIN(TASK) & suspended-{first_sending(semaphore)}: FIN(TASK) & suspended-{first_sending(semaphore)}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{first_sending(semaphore)} = {} & suspended-{first_sending(semaphore)}/\n_runable = {} & tasks = suspended-{first_sending(semaphore)}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_busy\/{semaphore}/\semaphores_full = {} & (active = TRUE => not(running$0: suspended & not(running$0 = first_sending(semaphore)))) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & running$0: n_runable & first_sending(semaphore): suspended & not(first_sending(semaphore): blocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & semaphore: semaphores_full & n_runable: FIN(TASK) & suspended-{first_sending(semaphore)}: FIN(TASK) & suspended-{first_sending(semaphore)}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{first_sending(semaphore)} = {} & suspended-{first_sending(semaphore)}/\n_runable = {} & tasks = suspended-{first_sending(semaphore)}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_full-{semaphore}: POW(semaphores) & semaphores_busy/\semaphores_full-{semaphore} = {} & (active = TRUE => not(running$0: suspended & not(running$0 = first_sending(semaphore)))) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & running$0: n_runable & first_sending(semaphore): suspended & not(first_sending(semaphore): blocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & semaphore: semaphores_full & n_runable: FIN(TASK) & suspended-{first_sending(semaphore)}: FIN(TASK) & suspended-{first_sending(semaphore)}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{first_sending(semaphore)} = {} & suspended-{first_sending(semaphore)}/\n_runable = {} & tasks = suspended-{first_sending(semaphore)}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_full-{semaphore}: POW(semaphores) & semaphores_busy/\semaphores_full-{semaphore} = {} & (active = TRUE => not(running$0: suspended & not(running$0 = first_sending(semaphore)))) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & running$0: n_runable & first_sending(semaphore): suspended & not(first_sending(semaphore): blocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & not(semaphore: semaphores_full) & n_runable: FIN(TASK) & suspended-{first_sending(semaphore)}: FIN(TASK) & suspended-{first_sending(semaphore)}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{first_sending(semaphore)} = {} & suspended-{first_sending(semaphore)}/\n_runable = {} & tasks = suspended-{first_sending(semaphore)}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = first_sending(semaphore)))) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & running$0: n_runable & first_sending(semaphore): suspended & not(first_sending(semaphore): blocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & not(semaphore: semaphores_full) & n_runable: FIN(TASK) & suspended-{first_sending(semaphore)}: FIN(TASK) & suspended-{first_sending(semaphore)}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{first_sending(semaphore)} = {} & suspended-{first_sending(semaphore)}/\n_runable = {} & tasks = suspended-{first_sending(semaphore)}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = first_sending(semaphore)))) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & running$0: n_runable & not(first_sending(semaphore): suspended) & first_sending(semaphore): blocked & first_sending(semaphore): unblocked & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & semaphore: semaphores_full & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked-{first_sending(semaphore)}: FIN(TASK) & unblocked-{first_sending(semaphore)}: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(semaphore)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_full-{semaphore}: POW(semaphores) & semaphores_busy\/{semaphore}/\semaphores_full-{semaphore} = {} & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(semaphore)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ((queue_sending<+{semaphore|->n_sending})(que): POW(blocked-{first_sending(semaphore)}\/suspended));
  (queue_receiving(que): POW(blocked-{first_sending(semaphore)}\/suspended));
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & running$0: n_runable & not(first_sending(semaphore): suspended) & first_sending(semaphore): blocked & first_sending(semaphore): unblocked & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & semaphore: semaphores_full & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked-{first_sending(semaphore)}: FIN(TASK) & unblocked-{first_sending(semaphore)}: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(semaphore)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_full-{semaphore}: POW(semaphores) & semaphores_busy\/{semaphore}/\semaphores_full-{semaphore} = {} & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(semaphore)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & running$0: n_runable & not(first_sending(semaphore): suspended) & first_sending(semaphore): blocked & first_sending(semaphore): unblocked & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & not(semaphore: semaphores_full) & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked-{first_sending(semaphore)}: FIN(TASK) & unblocked-{first_sending(semaphore)}: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(semaphore)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_busy\/{semaphore}/\semaphores_full = {} & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(semaphore)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & running$0: n_runable & not(first_sending(semaphore): suspended) & first_sending(semaphore): blocked & first_sending(semaphore): unblocked & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & not(semaphore: semaphores_full) & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked-{first_sending(semaphore)}: FIN(TASK) & unblocked-{first_sending(semaphore)}: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(semaphore)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_busy\/{semaphore}/\semaphores_full = {} & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(semaphore)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & running$0: n_runable & not(first_sending(semaphore): suspended) & first_sending(semaphore): blocked & first_sending(semaphore): unblocked & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & semaphore: semaphores_full & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked-{first_sending(semaphore)}: FIN(TASK) & unblocked-{first_sending(semaphore)}: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(semaphore)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_full-{semaphore}: POW(semaphores) & semaphores_busy/\semaphores_full-{semaphore} = {} & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(semaphore)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & running$0: n_runable & not(first_sending(semaphore): suspended) & first_sending(semaphore): blocked & first_sending(semaphore): unblocked & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & semaphore: semaphores_full & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked-{first_sending(semaphore)}: FIN(TASK) & unblocked-{first_sending(semaphore)}: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(semaphore)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_full-{semaphore}: POW(semaphores) & semaphores_busy/\semaphores_full-{semaphore} = {} & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(semaphore)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & running$0: n_runable & not(first_sending(semaphore): suspended) & first_sending(semaphore): blocked & first_sending(semaphore): unblocked & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & not(semaphore: semaphores_full) & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked-{first_sending(semaphore)}: FIN(TASK) & unblocked-{first_sending(semaphore)}: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(semaphore)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(semaphore)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & running$0: n_runable & not(first_sending(semaphore): suspended) & first_sending(semaphore): blocked & first_sending(semaphore): unblocked & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & not(semaphore: semaphores_full) & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked-{first_sending(semaphore)}: FIN(TASK) & unblocked-{first_sending(semaphore)}: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(semaphore)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(semaphore)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & running$0: n_runable & not(first_sending(semaphore): suspended) & first_sending(semaphore): blocked & not(first_sending(semaphore): unblocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & semaphore: semaphores_full & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(semaphore)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_full-{semaphore}: POW(semaphores) & semaphores_busy\/{semaphore}/\semaphores_full-{semaphore} = {} & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(semaphore)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & running$0: n_runable & not(first_sending(semaphore): suspended) & first_sending(semaphore): blocked & not(first_sending(semaphore): unblocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & semaphore: semaphores_full & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(semaphore)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_full-{semaphore}: POW(semaphores) & semaphores_busy\/{semaphore}/\semaphores_full-{semaphore} = {} & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(semaphore)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & running$0: n_runable & not(first_sending(semaphore): suspended) & first_sending(semaphore): blocked & not(first_sending(semaphore): unblocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & not(semaphore: semaphores_full) & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(semaphore)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_busy\/{semaphore}/\semaphores_full = {} & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(semaphore)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & running$0: n_runable & not(first_sending(semaphore): suspended) & first_sending(semaphore): blocked & not(first_sending(semaphore): unblocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & not(semaphore: semaphores_full) & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(semaphore)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_busy\/{semaphore}/\semaphores_full = {} & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(semaphore)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & running$0: n_runable & not(first_sending(semaphore): suspended) & first_sending(semaphore): blocked & not(first_sending(semaphore): unblocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & semaphore: semaphores_full & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(semaphore)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_full-{semaphore}: POW(semaphores) & semaphores_busy/\semaphores_full-{semaphore} = {} & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(semaphore)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & running$0: n_runable & not(first_sending(semaphore): suspended) & first_sending(semaphore): blocked & not(first_sending(semaphore): unblocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & semaphore: semaphores_full & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(semaphore)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_full-{semaphore}: POW(semaphores) & semaphores_busy/\semaphores_full-{semaphore} = {} & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(semaphore)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & running$0: n_runable & not(first_sending(semaphore): suspended) & first_sending(semaphore): blocked & not(first_sending(semaphore): unblocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & not(semaphore: semaphores_full) & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(semaphore)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(semaphore)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & running$0: n_runable & not(first_sending(semaphore): suspended) & first_sending(semaphore): blocked & not(first_sending(semaphore): unblocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & not(semaphore: semaphores_full) & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(semaphore)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = first_sending(semaphore)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & running$0: n_runable & not(first_sending(semaphore): suspended) & not(first_sending(semaphore): blocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & semaphore: semaphores_full & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_full-{semaphore}: POW(semaphores) & semaphores_busy\/{semaphore}/\semaphores_full-{semaphore} = {} & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ((queue_sending<+{semaphore|->n_sending})(que): POW(blocked\/suspended));
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & running$0: n_runable & not(first_sending(semaphore): suspended) & not(first_sending(semaphore): blocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & semaphore: semaphores_full & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_full-{semaphore}: POW(semaphores) & semaphores_busy\/{semaphore}/\semaphores_full-{semaphore} = {} & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & running$0: n_runable & not(first_sending(semaphore): suspended) & not(first_sending(semaphore): blocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & not(semaphore: semaphores_full) & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_busy\/{semaphore}/\semaphores_full = {} & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & running$0: n_runable & not(first_sending(semaphore): suspended) & not(first_sending(semaphore): blocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & not(semaphore: semaphores_full) & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_busy\/{semaphore}/\semaphores_full = {} & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & running$0: n_runable & not(first_sending(semaphore): suspended) & not(first_sending(semaphore): blocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & semaphore: semaphores_full & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_full-{semaphore}: POW(semaphores) & semaphores_busy/\semaphores_full-{semaphore} = {} & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & running$0: n_runable & not(first_sending(semaphore): suspended) & not(first_sending(semaphore): blocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & semaphore: semaphores_full & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_full-{semaphore}: POW(semaphores) & semaphores_busy/\semaphores_full-{semaphore} = {} & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & running$0: n_runable & not(first_sending(semaphore): suspended) & not(first_sending(semaphore): blocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & not(semaphore: semaphores_full) & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & running$0: n_runable & not(first_sending(semaphore): suspended) & not(first_sending(semaphore): blocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & not(semaphore: semaphores_full) & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & first_sending(semaphore): suspended & first_sending(semaphore): blocked & first_sending(semaphore): unblocked & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & semaphore: semaphores_full & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked-{first_sending(semaphore)}: FIN(TASK) & unblocked-{first_sending(semaphore)}: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & suspended-{first_sending(semaphore)}: FIN(TASK) & suspended-{first_sending(semaphore)}: POW(tasks) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended-{first_sending(semaphore)} = {} & suspended-{first_sending(semaphore)}/\n_runable = {} & tasks = suspended-{first_sending(semaphore)}\/blocked-{first_sending(semaphore)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_full-{semaphore}: POW(semaphores) & semaphores_busy\/{semaphore}/\semaphores_full-{semaphore} = {} & (active = TRUE => not(running: suspended & not(running = first_sending(semaphore)))) & (active = TRUE => not(running: blocked & not(running = first_sending(semaphore)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(semaphore)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & first_sending(semaphore): suspended & first_sending(semaphore): blocked & first_sending(semaphore): unblocked & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & semaphore: semaphores_full & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked-{first_sending(semaphore)}: FIN(TASK) & unblocked-{first_sending(semaphore)}: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & suspended-{first_sending(semaphore)}: FIN(TASK) & suspended-{first_sending(semaphore)}: POW(tasks) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended-{first_sending(semaphore)} = {} & suspended-{first_sending(semaphore)}/\n_runable = {} & tasks = suspended-{first_sending(semaphore)}\/blocked-{first_sending(semaphore)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_full-{semaphore}: POW(semaphores) & semaphores_busy\/{semaphore}/\semaphores_full-{semaphore} = {} & (active = TRUE => not(running: suspended & not(running = first_sending(semaphore)))) & (active = TRUE => not(running: blocked & not(running = first_sending(semaphore)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(semaphore)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & first_sending(semaphore): suspended & first_sending(semaphore): blocked & first_sending(semaphore): unblocked & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & not(semaphore: semaphores_full) & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked-{first_sending(semaphore)}: FIN(TASK) & unblocked-{first_sending(semaphore)}: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & suspended-{first_sending(semaphore)}: FIN(TASK) & suspended-{first_sending(semaphore)}: POW(tasks) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended-{first_sending(semaphore)} = {} & suspended-{first_sending(semaphore)}/\n_runable = {} & tasks = suspended-{first_sending(semaphore)}\/blocked-{first_sending(semaphore)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_busy\/{semaphore}/\semaphores_full = {} & (active = TRUE => not(running: suspended & not(running = first_sending(semaphore)))) & (active = TRUE => not(running: blocked & not(running = first_sending(semaphore)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(semaphore)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & first_sending(semaphore): suspended & first_sending(semaphore): blocked & first_sending(semaphore): unblocked & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & not(semaphore: semaphores_full) & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked-{first_sending(semaphore)}: FIN(TASK) & unblocked-{first_sending(semaphore)}: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & suspended-{first_sending(semaphore)}: FIN(TASK) & suspended-{first_sending(semaphore)}: POW(tasks) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended-{first_sending(semaphore)} = {} & suspended-{first_sending(semaphore)}/\n_runable = {} & tasks = suspended-{first_sending(semaphore)}\/blocked-{first_sending(semaphore)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_busy\/{semaphore}/\semaphores_full = {} & (active = TRUE => not(running: suspended & not(running = first_sending(semaphore)))) & (active = TRUE => not(running: blocked & not(running = first_sending(semaphore)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(semaphore)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & first_sending(semaphore): suspended & first_sending(semaphore): blocked & first_sending(semaphore): unblocked & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & semaphore: semaphores_full & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked-{first_sending(semaphore)}: FIN(TASK) & unblocked-{first_sending(semaphore)}: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & suspended-{first_sending(semaphore)}: FIN(TASK) & suspended-{first_sending(semaphore)}: POW(tasks) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended-{first_sending(semaphore)} = {} & suspended-{first_sending(semaphore)}/\n_runable = {} & tasks = suspended-{first_sending(semaphore)}\/blocked-{first_sending(semaphore)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_full-{semaphore}: POW(semaphores) & semaphores_busy/\semaphores_full-{semaphore} = {} & (active = TRUE => not(running: suspended & not(running = first_sending(semaphore)))) & (active = TRUE => not(running: blocked & not(running = first_sending(semaphore)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(semaphore)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & first_sending(semaphore): suspended & first_sending(semaphore): blocked & first_sending(semaphore): unblocked & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & semaphore: semaphores_full & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked-{first_sending(semaphore)}: FIN(TASK) & unblocked-{first_sending(semaphore)}: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & suspended-{first_sending(semaphore)}: FIN(TASK) & suspended-{first_sending(semaphore)}: POW(tasks) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended-{first_sending(semaphore)} = {} & suspended-{first_sending(semaphore)}/\n_runable = {} & tasks = suspended-{first_sending(semaphore)}\/blocked-{first_sending(semaphore)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_full-{semaphore}: POW(semaphores) & semaphores_busy/\semaphores_full-{semaphore} = {} & (active = TRUE => not(running: suspended & not(running = first_sending(semaphore)))) & (active = TRUE => not(running: blocked & not(running = first_sending(semaphore)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(semaphore)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & first_sending(semaphore): suspended & first_sending(semaphore): blocked & first_sending(semaphore): unblocked & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & not(semaphore: semaphores_full) & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked-{first_sending(semaphore)}: FIN(TASK) & unblocked-{first_sending(semaphore)}: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & suspended-{first_sending(semaphore)}: FIN(TASK) & suspended-{first_sending(semaphore)}: POW(tasks) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended-{first_sending(semaphore)} = {} & suspended-{first_sending(semaphore)}/\n_runable = {} & tasks = suspended-{first_sending(semaphore)}\/blocked-{first_sending(semaphore)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & (active = TRUE => not(running: suspended & not(running = first_sending(semaphore)))) & (active = TRUE => not(running: blocked & not(running = first_sending(semaphore)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(semaphore)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & first_sending(semaphore): suspended & first_sending(semaphore): blocked & first_sending(semaphore): unblocked & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & not(semaphore: semaphores_full) & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked-{first_sending(semaphore)}: FIN(TASK) & unblocked-{first_sending(semaphore)}: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & suspended-{first_sending(semaphore)}: FIN(TASK) & suspended-{first_sending(semaphore)}: POW(tasks) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended-{first_sending(semaphore)} = {} & suspended-{first_sending(semaphore)}/\n_runable = {} & tasks = suspended-{first_sending(semaphore)}\/blocked-{first_sending(semaphore)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & (active = TRUE => not(running: suspended & not(running = first_sending(semaphore)))) & (active = TRUE => not(running: blocked & not(running = first_sending(semaphore)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(semaphore)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & first_sending(semaphore): suspended & first_sending(semaphore): blocked & not(first_sending(semaphore): unblocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & semaphore: semaphores_full & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & suspended-{first_sending(semaphore)}: FIN(TASK) & suspended-{first_sending(semaphore)}: POW(tasks) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended-{first_sending(semaphore)} = {} & suspended-{first_sending(semaphore)}/\n_runable = {} & tasks = suspended-{first_sending(semaphore)}\/blocked-{first_sending(semaphore)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_full-{semaphore}: POW(semaphores) & semaphores_busy\/{semaphore}/\semaphores_full-{semaphore} = {} & (active = TRUE => not(running: suspended & not(running = first_sending(semaphore)))) & (active = TRUE => not(running: blocked & not(running = first_sending(semaphore)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(semaphore)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & first_sending(semaphore): suspended & first_sending(semaphore): blocked & not(first_sending(semaphore): unblocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & semaphore: semaphores_full & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & suspended-{first_sending(semaphore)}: FIN(TASK) & suspended-{first_sending(semaphore)}: POW(tasks) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended-{first_sending(semaphore)} = {} & suspended-{first_sending(semaphore)}/\n_runable = {} & tasks = suspended-{first_sending(semaphore)}\/blocked-{first_sending(semaphore)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_full-{semaphore}: POW(semaphores) & semaphores_busy\/{semaphore}/\semaphores_full-{semaphore} = {} & (active = TRUE => not(running: suspended & not(running = first_sending(semaphore)))) & (active = TRUE => not(running: blocked & not(running = first_sending(semaphore)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(semaphore)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & first_sending(semaphore): suspended & first_sending(semaphore): blocked & not(first_sending(semaphore): unblocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & not(semaphore: semaphores_full) & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & suspended-{first_sending(semaphore)}: FIN(TASK) & suspended-{first_sending(semaphore)}: POW(tasks) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended-{first_sending(semaphore)} = {} & suspended-{first_sending(semaphore)}/\n_runable = {} & tasks = suspended-{first_sending(semaphore)}\/blocked-{first_sending(semaphore)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_busy\/{semaphore}/\semaphores_full = {} & (active = TRUE => not(running: suspended & not(running = first_sending(semaphore)))) & (active = TRUE => not(running: blocked & not(running = first_sending(semaphore)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(semaphore)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & first_sending(semaphore): suspended & first_sending(semaphore): blocked & not(first_sending(semaphore): unblocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & not(semaphore: semaphores_full) & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & suspended-{first_sending(semaphore)}: FIN(TASK) & suspended-{first_sending(semaphore)}: POW(tasks) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended-{first_sending(semaphore)} = {} & suspended-{first_sending(semaphore)}/\n_runable = {} & tasks = suspended-{first_sending(semaphore)}\/blocked-{first_sending(semaphore)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_busy\/{semaphore}/\semaphores_full = {} & (active = TRUE => not(running: suspended & not(running = first_sending(semaphore)))) & (active = TRUE => not(running: blocked & not(running = first_sending(semaphore)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(semaphore)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & first_sending(semaphore): suspended & first_sending(semaphore): blocked & not(first_sending(semaphore): unblocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & semaphore: semaphores_full & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & suspended-{first_sending(semaphore)}: FIN(TASK) & suspended-{first_sending(semaphore)}: POW(tasks) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended-{first_sending(semaphore)} = {} & suspended-{first_sending(semaphore)}/\n_runable = {} & tasks = suspended-{first_sending(semaphore)}\/blocked-{first_sending(semaphore)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_full-{semaphore}: POW(semaphores) & semaphores_busy/\semaphores_full-{semaphore} = {} & (active = TRUE => not(running: suspended & not(running = first_sending(semaphore)))) & (active = TRUE => not(running: blocked & not(running = first_sending(semaphore)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(semaphore)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & first_sending(semaphore): suspended & first_sending(semaphore): blocked & not(first_sending(semaphore): unblocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & semaphore: semaphores_full & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & suspended-{first_sending(semaphore)}: FIN(TASK) & suspended-{first_sending(semaphore)}: POW(tasks) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended-{first_sending(semaphore)} = {} & suspended-{first_sending(semaphore)}/\n_runable = {} & tasks = suspended-{first_sending(semaphore)}\/blocked-{first_sending(semaphore)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_full-{semaphore}: POW(semaphores) & semaphores_busy/\semaphores_full-{semaphore} = {} & (active = TRUE => not(running: suspended & not(running = first_sending(semaphore)))) & (active = TRUE => not(running: blocked & not(running = first_sending(semaphore)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(semaphore)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & first_sending(semaphore): suspended & first_sending(semaphore): blocked & not(first_sending(semaphore): unblocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & not(semaphore: semaphores_full) & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & suspended-{first_sending(semaphore)}: FIN(TASK) & suspended-{first_sending(semaphore)}: POW(tasks) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended-{first_sending(semaphore)} = {} & suspended-{first_sending(semaphore)}/\n_runable = {} & tasks = suspended-{first_sending(semaphore)}\/blocked-{first_sending(semaphore)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & (active = TRUE => not(running: suspended & not(running = first_sending(semaphore)))) & (active = TRUE => not(running: blocked & not(running = first_sending(semaphore)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(semaphore)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & first_sending(semaphore): suspended & first_sending(semaphore): blocked & not(first_sending(semaphore): unblocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & not(semaphore: semaphores_full) & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & suspended-{first_sending(semaphore)}: FIN(TASK) & suspended-{first_sending(semaphore)}: POW(tasks) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended-{first_sending(semaphore)} = {} & suspended-{first_sending(semaphore)}/\n_runable = {} & tasks = suspended-{first_sending(semaphore)}\/blocked-{first_sending(semaphore)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & (active = TRUE => not(running: suspended & not(running = first_sending(semaphore)))) & (active = TRUE => not(running: blocked & not(running = first_sending(semaphore)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(semaphore)))) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & first_sending(semaphore): suspended & not(first_sending(semaphore): blocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & semaphore: semaphores_full & n_runable: FIN(TASK) & suspended-{first_sending(semaphore)}: FIN(TASK) & suspended-{first_sending(semaphore)}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{first_sending(semaphore)} = {} & suspended-{first_sending(semaphore)}/\n_runable = {} & tasks = suspended-{first_sending(semaphore)}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_full-{semaphore}: POW(semaphores) & semaphores_busy\/{semaphore}/\semaphores_full-{semaphore} = {} & (active = TRUE => not(running: suspended & not(running = first_sending(semaphore)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & first_sending(semaphore): suspended & not(first_sending(semaphore): blocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & semaphore: semaphores_full & n_runable: FIN(TASK) & suspended-{first_sending(semaphore)}: FIN(TASK) & suspended-{first_sending(semaphore)}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{first_sending(semaphore)} = {} & suspended-{first_sending(semaphore)}/\n_runable = {} & tasks = suspended-{first_sending(semaphore)}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_full-{semaphore}: POW(semaphores) & semaphores_busy\/{semaphore}/\semaphores_full-{semaphore} = {} & (active = TRUE => not(running: suspended & not(running = first_sending(semaphore)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & first_sending(semaphore): suspended & not(first_sending(semaphore): blocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & not(semaphore: semaphores_full) & n_runable: FIN(TASK) & suspended-{first_sending(semaphore)}: FIN(TASK) & suspended-{first_sending(semaphore)}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{first_sending(semaphore)} = {} & suspended-{first_sending(semaphore)}/\n_runable = {} & tasks = suspended-{first_sending(semaphore)}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_busy\/{semaphore}/\semaphores_full = {} & (active = TRUE => not(running: suspended & not(running = first_sending(semaphore)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & first_sending(semaphore): suspended & not(first_sending(semaphore): blocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & not(semaphore: semaphores_full) & n_runable: FIN(TASK) & suspended-{first_sending(semaphore)}: FIN(TASK) & suspended-{first_sending(semaphore)}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{first_sending(semaphore)} = {} & suspended-{first_sending(semaphore)}/\n_runable = {} & tasks = suspended-{first_sending(semaphore)}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_busy\/{semaphore}/\semaphores_full = {} & (active = TRUE => not(running: suspended & not(running = first_sending(semaphore)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & first_sending(semaphore): suspended & not(first_sending(semaphore): blocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & semaphore: semaphores_full & n_runable: FIN(TASK) & suspended-{first_sending(semaphore)}: FIN(TASK) & suspended-{first_sending(semaphore)}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{first_sending(semaphore)} = {} & suspended-{first_sending(semaphore)}/\n_runable = {} & tasks = suspended-{first_sending(semaphore)}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_full-{semaphore}: POW(semaphores) & semaphores_busy/\semaphores_full-{semaphore} = {} & (active = TRUE => not(running: suspended & not(running = first_sending(semaphore)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & first_sending(semaphore): suspended & not(first_sending(semaphore): blocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & semaphore: semaphores_full & n_runable: FIN(TASK) & suspended-{first_sending(semaphore)}: FIN(TASK) & suspended-{first_sending(semaphore)}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{first_sending(semaphore)} = {} & suspended-{first_sending(semaphore)}/\n_runable = {} & tasks = suspended-{first_sending(semaphore)}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_full-{semaphore}: POW(semaphores) & semaphores_busy/\semaphores_full-{semaphore} = {} & (active = TRUE => not(running: suspended & not(running = first_sending(semaphore)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & first_sending(semaphore): suspended & not(first_sending(semaphore): blocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & not(semaphore: semaphores_full) & n_runable: FIN(TASK) & suspended-{first_sending(semaphore)}: FIN(TASK) & suspended-{first_sending(semaphore)}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{first_sending(semaphore)} = {} & suspended-{first_sending(semaphore)}/\n_runable = {} & tasks = suspended-{first_sending(semaphore)}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & (active = TRUE => not(running: suspended & not(running = first_sending(semaphore)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & first_sending(semaphore): suspended & not(first_sending(semaphore): blocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & not(semaphore: semaphores_full) & n_runable: FIN(TASK) & suspended-{first_sending(semaphore)}: FIN(TASK) & suspended-{first_sending(semaphore)}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{first_sending(semaphore)} = {} & suspended-{first_sending(semaphore)}/\n_runable = {} & tasks = suspended-{first_sending(semaphore)}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & (active = TRUE => not(running: suspended & not(running = first_sending(semaphore)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & not(first_sending(semaphore): suspended) & first_sending(semaphore): blocked & first_sending(semaphore): unblocked & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & semaphore: semaphores_full & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked-{first_sending(semaphore)}: FIN(TASK) & unblocked-{first_sending(semaphore)}: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(semaphore)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_full-{semaphore}: POW(semaphores) & semaphores_busy\/{semaphore}/\semaphores_full-{semaphore} = {} & (active = TRUE => not(running: blocked & not(running = first_sending(semaphore)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & not(first_sending(semaphore): suspended) & first_sending(semaphore): blocked & first_sending(semaphore): unblocked & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & semaphore: semaphores_full & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked-{first_sending(semaphore)}: FIN(TASK) & unblocked-{first_sending(semaphore)}: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(semaphore)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_full-{semaphore}: POW(semaphores) & semaphores_busy\/{semaphore}/\semaphores_full-{semaphore} = {} & (active = TRUE => not(running: blocked & not(running = first_sending(semaphore)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & not(first_sending(semaphore): suspended) & first_sending(semaphore): blocked & first_sending(semaphore): unblocked & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & not(semaphore: semaphores_full) & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked-{first_sending(semaphore)}: FIN(TASK) & unblocked-{first_sending(semaphore)}: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(semaphore)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_busy\/{semaphore}/\semaphores_full = {} & (active = TRUE => not(running: blocked & not(running = first_sending(semaphore)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & not(first_sending(semaphore): suspended) & first_sending(semaphore): blocked & first_sending(semaphore): unblocked & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & not(semaphore: semaphores_full) & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked-{first_sending(semaphore)}: FIN(TASK) & unblocked-{first_sending(semaphore)}: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(semaphore)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_busy\/{semaphore}/\semaphores_full = {} & (active = TRUE => not(running: blocked & not(running = first_sending(semaphore)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & not(first_sending(semaphore): suspended) & first_sending(semaphore): blocked & first_sending(semaphore): unblocked & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & semaphore: semaphores_full & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked-{first_sending(semaphore)}: FIN(TASK) & unblocked-{first_sending(semaphore)}: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(semaphore)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_full-{semaphore}: POW(semaphores) & semaphores_busy/\semaphores_full-{semaphore} = {} & (active = TRUE => not(running: blocked & not(running = first_sending(semaphore)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & not(first_sending(semaphore): suspended) & first_sending(semaphore): blocked & first_sending(semaphore): unblocked & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & semaphore: semaphores_full & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked-{first_sending(semaphore)}: FIN(TASK) & unblocked-{first_sending(semaphore)}: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(semaphore)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_full-{semaphore}: POW(semaphores) & semaphores_busy/\semaphores_full-{semaphore} = {} & (active = TRUE => not(running: blocked & not(running = first_sending(semaphore)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & not(first_sending(semaphore): suspended) & first_sending(semaphore): blocked & first_sending(semaphore): unblocked & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & not(semaphore: semaphores_full) & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked-{first_sending(semaphore)}: FIN(TASK) & unblocked-{first_sending(semaphore)}: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(semaphore)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & (active = TRUE => not(running: blocked & not(running = first_sending(semaphore)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & not(first_sending(semaphore): suspended) & first_sending(semaphore): blocked & first_sending(semaphore): unblocked & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & not(semaphore: semaphores_full) & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked-{first_sending(semaphore)}: FIN(TASK) & unblocked-{first_sending(semaphore)}: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(semaphore)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & (active = TRUE => not(running: blocked & not(running = first_sending(semaphore)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & not(first_sending(semaphore): suspended) & first_sending(semaphore): blocked & not(first_sending(semaphore): unblocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & semaphore: semaphores_full & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(semaphore)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_full-{semaphore}: POW(semaphores) & semaphores_busy\/{semaphore}/\semaphores_full-{semaphore} = {} & (active = TRUE => not(running: blocked & not(running = first_sending(semaphore)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & not(first_sending(semaphore): suspended) & first_sending(semaphore): blocked & not(first_sending(semaphore): unblocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & semaphore: semaphores_full & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(semaphore)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_full-{semaphore}: POW(semaphores) & semaphores_busy\/{semaphore}/\semaphores_full-{semaphore} = {} & (active = TRUE => not(running: blocked & not(running = first_sending(semaphore)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & not(first_sending(semaphore): suspended) & first_sending(semaphore): blocked & not(first_sending(semaphore): unblocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & not(semaphore: semaphores_full) & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(semaphore)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_busy\/{semaphore}/\semaphores_full = {} & (active = TRUE => not(running: blocked & not(running = first_sending(semaphore)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & not(first_sending(semaphore): suspended) & first_sending(semaphore): blocked & not(first_sending(semaphore): unblocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & not(semaphore: semaphores_full) & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(semaphore)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_busy\/{semaphore}/\semaphores_full = {} & (active = TRUE => not(running: blocked & not(running = first_sending(semaphore)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & not(first_sending(semaphore): suspended) & first_sending(semaphore): blocked & not(first_sending(semaphore): unblocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & semaphore: semaphores_full & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(semaphore)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_full-{semaphore}: POW(semaphores) & semaphores_busy/\semaphores_full-{semaphore} = {} & (active = TRUE => not(running: blocked & not(running = first_sending(semaphore)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & not(first_sending(semaphore): suspended) & first_sending(semaphore): blocked & not(first_sending(semaphore): unblocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & semaphore: semaphores_full & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(semaphore)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_full-{semaphore}: POW(semaphores) & semaphores_busy/\semaphores_full-{semaphore} = {} & (active = TRUE => not(running: blocked & not(running = first_sending(semaphore)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & not(first_sending(semaphore): suspended) & first_sending(semaphore): blocked & not(first_sending(semaphore): unblocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & not(semaphore: semaphores_full) & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(semaphore)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & (active = TRUE => not(running: blocked & not(running = first_sending(semaphore)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & not(first_sending(semaphore): suspended) & first_sending(semaphore): blocked & not(first_sending(semaphore): unblocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & not(semaphore: semaphores_full) & blocked-{first_sending(semaphore)}: FIN(TASK) & blocked-{first_sending(semaphore)}: POW(tasks) & unblocked: POW(blocked-{first_sending(semaphore)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_sending(semaphore)} = {} & blocked-{first_sending(semaphore)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_sending(semaphore)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & (active = TRUE => not(running: blocked & not(running = first_sending(semaphore)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_sending(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & not(first_sending(semaphore): suspended) & not(first_sending(semaphore): blocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & semaphore: semaphores_full & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_full-{semaphore}: POW(semaphores) & semaphores_busy\/{semaphore}/\semaphores_full-{semaphore} = {} & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & not(first_sending(semaphore): suspended) & not(first_sending(semaphore): blocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & semaphore: semaphores_full & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_full-{semaphore}: POW(semaphores) & semaphores_busy\/{semaphore}/\semaphores_full-{semaphore} = {} & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & not(first_sending(semaphore): suspended) & not(first_sending(semaphore): blocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & not(semaphore: semaphores_full) & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_busy\/{semaphore}/\semaphores_full = {} & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & not(first_sending(semaphore): suspended) & not(first_sending(semaphore): blocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & not(semaphore: semaphores_full) & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_busy\/{semaphore}/\semaphores_full = {} & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & not(first_sending(semaphore): suspended) & not(first_sending(semaphore): blocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & semaphore: semaphores_full & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_full-{semaphore}: POW(semaphores) & semaphores_busy/\semaphores_full-{semaphore} = {} & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & not(first_sending(semaphore): suspended) & not(first_sending(semaphore): blocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & semaphore: semaphores_full & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_full-{semaphore}: POW(semaphores) & semaphores_busy/\semaphores_full-{semaphore} = {} & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & not(first_sending(semaphore): suspended) & not(first_sending(semaphore): blocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & not(semaphore: semaphores_full) & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_sending(semaphore)} & not(first_sending(semaphore): suspended) & not(first_sending(semaphore): blocked) & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & not(semaphore: semaphores_full) & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & queue_sending(semaphore) = {} & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & semaphore: semaphores_full & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_full-{semaphore}: POW(semaphores) & semaphores_busy\/{semaphore}/\semaphores_full-{semaphore} = {} & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & queue_sending(semaphore) = {} & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & semaphore: semaphores_full & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_full-{semaphore}: POW(semaphores) & semaphores_busy\/{semaphore}/\semaphores_full-{semaphore} = {} & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & queue_sending(semaphore) = {} & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & not(semaphore: semaphores_full) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_busy\/{semaphore}/\semaphores_full = {} & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & queue_sending(semaphore) = {} & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & not(semaphore: semaphores_full) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_busy\/{semaphore}/\semaphores_full = {} & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & queue_sending(semaphore) = {} & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & semaphore: semaphores_full & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_full-{semaphore}: POW(semaphores) & semaphores_busy/\semaphores_full-{semaphore} = {} & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & queue_sending(semaphore) = {} & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & semaphore: semaphores_full & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & semaphores_full-{semaphore}: POW(semaphores) & semaphores_busy/\semaphores_full-{semaphore} = {} & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & queue_sending(semaphore) = {} & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & not(semaphore: semaphores_full) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & queue_sending(semaphore) = {} & n_sending: POW(TASK) & n_sending = queue_sending(semaphore)-{first_sending(semaphore)} & n_first: TASK & n_first: n_sending & not(semaphore: semaphores_full) & queue_sending<+{semaphore|->n_sending}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->n_sending}) & first_sending<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->n_first}) = dom(queue_sending<+{semaphore|->n_sending}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->n_first}) & not((queue_sending<+{semaphore|->n_sending})(q1) = {}) => (first_sending<+{semaphore|->n_first})(q1): (queue_sending<+{semaphore|->n_sending})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->n_sending})(q1) => not(tk: (queue_sending<+{semaphore|->n_sending})(q2))) & mt: mutexes);
  ("`Local hypotheses'" & semaphore: semaphores_busy);
  (semaphore: queues);
  ("`Local hypotheses'" & semaphore: semaphores_busy & q1: queues);
  ("`Local hypotheses'" & semaphore: semaphores_busy & queue_receiving(semaphore) = {} & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & blocked\/{running}: FIN(TASK) & running: tasks & unblocked: POW(blocked\/{running}) & n_runable: FIN(TASK) & not(running: n_runable) & n_runable/\blocked = {} & blocked\/{running}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/(blocked\/{running})\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})}) & first_receiving<+{semaphore|->running}: QUEUE +-> TASK & dom(first_receiving<+{semaphore|->running}) = dom(queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})}) & !q1.(q1: queues & q1: dom(first_receiving<+{semaphore|->running}) & not((queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})})(q1) = {}) => (first_receiving<+{semaphore|->running})(q1): (queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})})(q1) => not(tk: (queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked) & not(running$0 = running)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ((queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})})(que): POW(blocked\/{running}\/suspended));
  ("`Local hypotheses'" & semaphore: semaphores_busy & not(queue_receiving(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & blocked\/{running}: FIN(TASK) & running: tasks & unblocked: POW(blocked\/{running}) & n_runable: FIN(TASK) & not(running: n_runable) & n_runable/\blocked = {} & blocked\/{running}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/(blocked\/{running})\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})}) & dom(first_receiving) = dom(queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})}) & !q1.(q1: queues & q1: dom(first_receiving) & not((queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})})(q1) = {}) => first_receiving(q1): (queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})})(q1) => not(tk: (queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked) & not(running$0 = running)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & semaphore: semaphores_busy & queue_receiving(semaphore) = {} & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & n_runable: FIN(TASK) & suspended\/{running}: FIN(TASK) & running: tasks & n_runable/\blocked = {} & suspended\/{running}/\n_runable = {} & tasks = suspended\/{running}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})}) & first_receiving<+{semaphore|->running}: QUEUE +-> TASK & dom(first_receiving<+{semaphore|->running}) = dom(queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})}) & !q1.(q1: queues & q1: dom(first_receiving<+{semaphore|->running}) & not((queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})})(q1) = {}) => (first_receiving<+{semaphore|->running})(q1): (queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})})(q1) => not(tk: (queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})})(q2))) & (active = TRUE => not(running$0: suspended) & not(running$0 = running)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ((queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})})(que): POW(blocked\/(suspended\/{running})));
  ("`Local hypotheses'" & semaphore: semaphores_busy & not(queue_receiving(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & n_runable: FIN(TASK) & suspended\/{running}: FIN(TASK) & running: tasks & n_runable/\blocked = {} & suspended\/{running}/\n_runable = {} & tasks = suspended\/{running}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})}) & dom(first_receiving) = dom(queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})}) & !q1.(q1: queues & q1: dom(first_receiving) & not((queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})})(q1) = {}) => first_receiving(q1): (queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})})(q1) => not(tk: (queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})})(q2))) & (active = TRUE => not(running$0: suspended) & not(running$0 = running)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`giveSemaphore preconditions in this component'" & semaphore: semaphores & xTicksToWait: TICK & not(running = idle) & active = TRUE & not(running = TASK_NULL));
  ("`Local hypotheses'" & not(semaphore: semaphores_full) & not(queue_receiving(semaphore) = {}));
  (first_receiving(semaphore): TASK);
  (first_receiving(semaphore): blocked\/suspended);
  ("`Local hypotheses'" & not(semaphore: semaphores_full) & not(queue_receiving(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(semaphore)} & running$0: n_runable & first_receiving(semaphore): suspended & first_receiving(semaphore): blocked & first_receiving(semaphore): unblocked & n_receiving: POW(TASK) & n_receiving = queue_receiving(semaphore)-{first_receiving(semaphore)} & n_first: TASK & n_first: n_receiving & semaphore: semaphores_busy & blocked-{first_receiving(semaphore)}: FIN(TASK) & blocked-{first_receiving(semaphore)}: POW(tasks) & unblocked-{first_receiving(semaphore)}: FIN(TASK) & unblocked-{first_receiving(semaphore)}: POW(blocked-{first_receiving(semaphore)}) & n_runable: FIN(TASK) & suspended-{first_receiving(semaphore)}: FIN(TASK) & suspended-{first_receiving(semaphore)}: POW(tasks) & n_runable/\blocked-{first_receiving(semaphore)} = {} & blocked-{first_receiving(semaphore)}/\suspended-{first_receiving(semaphore)} = {} & suspended-{first_receiving(semaphore)}/\n_runable = {} & tasks = suspended-{first_receiving(semaphore)}\/blocked-{first_receiving(semaphore)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{semaphore|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{semaphore|->n_receiving}) & first_receiving<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{semaphore|->n_first}) = dom(queue_receiving<+{semaphore|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{semaphore|->n_first}) & not((queue_receiving<+{semaphore|->n_receiving})(q1) = {}) => (first_receiving<+{semaphore|->n_first})(q1): (queue_receiving<+{semaphore|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{semaphore|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{semaphore|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{semaphore|->n_receiving})(q1) => not(tk: (queue_receiving<+{semaphore|->n_receiving})(q2))) & semaphores_busy-{semaphore}: POW(semaphores) & semaphores_busy-{semaphore}/\semaphores_full = {} & (active = TRUE => not(running$0: suspended & not(running$0 = first_receiving(semaphore)))) & (active = TRUE => not(running$0: blocked & not(running$0 = first_receiving(semaphore)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(semaphore)))) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  (queue_sending(que): POW(blocked-{first_receiving(semaphore)}\/suspended-{first_receiving(semaphore)}));
  ((queue_receiving<+{semaphore|->n_receiving})(que): POW(blocked-{first_receiving(semaphore)}\/suspended-{first_receiving(semaphore)}));
  ("`Local hypotheses'" & not(semaphore: semaphores_full) & not(queue_receiving(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(semaphore)} & running$0: n_runable & first_receiving(semaphore): suspended & first_receiving(semaphore): blocked & first_receiving(semaphore): unblocked & n_receiving: POW(TASK) & n_receiving = queue_receiving(semaphore)-{first_receiving(semaphore)} & n_first: TASK & n_first: n_receiving & not(semaphore: semaphores_busy) & blocked-{first_receiving(semaphore)}: FIN(TASK) & blocked-{first_receiving(semaphore)}: POW(tasks) & unblocked-{first_receiving(semaphore)}: FIN(TASK) & unblocked-{first_receiving(semaphore)}: POW(blocked-{first_receiving(semaphore)}) & n_runable: FIN(TASK) & suspended-{first_receiving(semaphore)}: FIN(TASK) & suspended-{first_receiving(semaphore)}: POW(tasks) & n_runable/\blocked-{first_receiving(semaphore)} = {} & blocked-{first_receiving(semaphore)}/\suspended-{first_receiving(semaphore)} = {} & suspended-{first_receiving(semaphore)}/\n_runable = {} & tasks = suspended-{first_receiving(semaphore)}\/blocked-{first_receiving(semaphore)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{semaphore|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{semaphore|->n_receiving}) & first_receiving<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{semaphore|->n_first}) = dom(queue_receiving<+{semaphore|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{semaphore|->n_first}) & not((queue_receiving<+{semaphore|->n_receiving})(q1) = {}) => (first_receiving<+{semaphore|->n_first})(q1): (queue_receiving<+{semaphore|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{semaphore|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{semaphore|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{semaphore|->n_receiving})(q1) => not(tk: (queue_receiving<+{semaphore|->n_receiving})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = first_receiving(semaphore)))) & (active = TRUE => not(running$0: blocked & not(running$0 = first_receiving(semaphore)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(semaphore)))) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_full) & not(queue_receiving(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(semaphore)} & running$0: n_runable & first_receiving(semaphore): suspended & first_receiving(semaphore): blocked & not(first_receiving(semaphore): unblocked) & n_receiving: POW(TASK) & n_receiving = queue_receiving(semaphore)-{first_receiving(semaphore)} & n_first: TASK & n_first: n_receiving & semaphore: semaphores_busy & blocked-{first_receiving(semaphore)}: FIN(TASK) & blocked-{first_receiving(semaphore)}: POW(tasks) & unblocked: POW(blocked-{first_receiving(semaphore)}) & n_runable: FIN(TASK) & suspended-{first_receiving(semaphore)}: FIN(TASK) & suspended-{first_receiving(semaphore)}: POW(tasks) & n_runable/\blocked-{first_receiving(semaphore)} = {} & blocked-{first_receiving(semaphore)}/\suspended-{first_receiving(semaphore)} = {} & suspended-{first_receiving(semaphore)}/\n_runable = {} & tasks = suspended-{first_receiving(semaphore)}\/blocked-{first_receiving(semaphore)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{semaphore|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{semaphore|->n_receiving}) & first_receiving<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{semaphore|->n_first}) = dom(queue_receiving<+{semaphore|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{semaphore|->n_first}) & not((queue_receiving<+{semaphore|->n_receiving})(q1) = {}) => (first_receiving<+{semaphore|->n_first})(q1): (queue_receiving<+{semaphore|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{semaphore|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{semaphore|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{semaphore|->n_receiving})(q1) => not(tk: (queue_receiving<+{semaphore|->n_receiving})(q2))) & semaphores_busy-{semaphore}: POW(semaphores) & semaphores_busy-{semaphore}/\semaphores_full = {} & (active = TRUE => not(running$0: suspended & not(running$0 = first_receiving(semaphore)))) & (active = TRUE => not(running$0: blocked & not(running$0 = first_receiving(semaphore)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(semaphore)))) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_full) & not(queue_receiving(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(semaphore)} & running$0: n_runable & first_receiving(semaphore): suspended & first_receiving(semaphore): blocked & not(first_receiving(semaphore): unblocked) & n_receiving: POW(TASK) & n_receiving = queue_receiving(semaphore)-{first_receiving(semaphore)} & n_first: TASK & n_first: n_receiving & not(semaphore: semaphores_busy) & blocked-{first_receiving(semaphore)}: FIN(TASK) & blocked-{first_receiving(semaphore)}: POW(tasks) & unblocked: POW(blocked-{first_receiving(semaphore)}) & n_runable: FIN(TASK) & suspended-{first_receiving(semaphore)}: FIN(TASK) & suspended-{first_receiving(semaphore)}: POW(tasks) & n_runable/\blocked-{first_receiving(semaphore)} = {} & blocked-{first_receiving(semaphore)}/\suspended-{first_receiving(semaphore)} = {} & suspended-{first_receiving(semaphore)}/\n_runable = {} & tasks = suspended-{first_receiving(semaphore)}\/blocked-{first_receiving(semaphore)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{semaphore|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{semaphore|->n_receiving}) & first_receiving<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{semaphore|->n_first}) = dom(queue_receiving<+{semaphore|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{semaphore|->n_first}) & not((queue_receiving<+{semaphore|->n_receiving})(q1) = {}) => (first_receiving<+{semaphore|->n_first})(q1): (queue_receiving<+{semaphore|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{semaphore|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{semaphore|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{semaphore|->n_receiving})(q1) => not(tk: (queue_receiving<+{semaphore|->n_receiving})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = first_receiving(semaphore)))) & (active = TRUE => not(running$0: blocked & not(running$0 = first_receiving(semaphore)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(semaphore)))) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_full) & not(queue_receiving(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(semaphore)} & running$0: n_runable & first_receiving(semaphore): suspended & not(first_receiving(semaphore): blocked) & n_receiving: POW(TASK) & n_receiving = queue_receiving(semaphore)-{first_receiving(semaphore)} & n_first: TASK & n_first: n_receiving & semaphore: semaphores_busy & n_runable: FIN(TASK) & suspended-{first_receiving(semaphore)}: FIN(TASK) & suspended-{first_receiving(semaphore)}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{first_receiving(semaphore)} = {} & suspended-{first_receiving(semaphore)}/\n_runable = {} & tasks = suspended-{first_receiving(semaphore)}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{semaphore|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{semaphore|->n_receiving}) & first_receiving<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{semaphore|->n_first}) = dom(queue_receiving<+{semaphore|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{semaphore|->n_first}) & not((queue_receiving<+{semaphore|->n_receiving})(q1) = {}) => (first_receiving<+{semaphore|->n_first})(q1): (queue_receiving<+{semaphore|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{semaphore|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{semaphore|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{semaphore|->n_receiving})(q1) => not(tk: (queue_receiving<+{semaphore|->n_receiving})(q2))) & semaphores_busy-{semaphore}: POW(semaphores) & semaphores_busy-{semaphore}/\semaphores_full = {} & (active = TRUE => not(running$0: suspended & not(running$0 = first_receiving(semaphore)))) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  (queue_sending(que): POW(blocked\/suspended-{first_receiving(semaphore)}));
  ((queue_receiving<+{semaphore|->n_receiving})(que): POW(blocked\/suspended-{first_receiving(semaphore)}));
  ("`Local hypotheses'" & not(semaphore: semaphores_full) & not(queue_receiving(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(semaphore)} & running$0: n_runable & first_receiving(semaphore): suspended & not(first_receiving(semaphore): blocked) & n_receiving: POW(TASK) & n_receiving = queue_receiving(semaphore)-{first_receiving(semaphore)} & n_first: TASK & n_first: n_receiving & not(semaphore: semaphores_busy) & n_runable: FIN(TASK) & suspended-{first_receiving(semaphore)}: FIN(TASK) & suspended-{first_receiving(semaphore)}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{first_receiving(semaphore)} = {} & suspended-{first_receiving(semaphore)}/\n_runable = {} & tasks = suspended-{first_receiving(semaphore)}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{semaphore|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{semaphore|->n_receiving}) & first_receiving<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{semaphore|->n_first}) = dom(queue_receiving<+{semaphore|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{semaphore|->n_first}) & not((queue_receiving<+{semaphore|->n_receiving})(q1) = {}) => (first_receiving<+{semaphore|->n_first})(q1): (queue_receiving<+{semaphore|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{semaphore|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{semaphore|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{semaphore|->n_receiving})(q1) => not(tk: (queue_receiving<+{semaphore|->n_receiving})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = first_receiving(semaphore)))) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_full) & not(queue_receiving(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(semaphore)} & running$0: n_runable & not(first_receiving(semaphore): suspended) & first_receiving(semaphore): blocked & first_receiving(semaphore): unblocked & n_receiving: POW(TASK) & n_receiving = queue_receiving(semaphore)-{first_receiving(semaphore)} & n_first: TASK & n_first: n_receiving & semaphore: semaphores_busy & blocked-{first_receiving(semaphore)}: FIN(TASK) & blocked-{first_receiving(semaphore)}: POW(tasks) & unblocked-{first_receiving(semaphore)}: FIN(TASK) & unblocked-{first_receiving(semaphore)}: POW(blocked-{first_receiving(semaphore)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_receiving(semaphore)} = {} & blocked-{first_receiving(semaphore)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_receiving(semaphore)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{semaphore|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{semaphore|->n_receiving}) & first_receiving<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{semaphore|->n_first}) = dom(queue_receiving<+{semaphore|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{semaphore|->n_first}) & not((queue_receiving<+{semaphore|->n_receiving})(q1) = {}) => (first_receiving<+{semaphore|->n_first})(q1): (queue_receiving<+{semaphore|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{semaphore|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{semaphore|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{semaphore|->n_receiving})(q1) => not(tk: (queue_receiving<+{semaphore|->n_receiving})(q2))) & semaphores_busy-{semaphore}: POW(semaphores) & semaphores_busy-{semaphore}/\semaphores_full = {} & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = first_receiving(semaphore)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  (queue_sending(que): POW(blocked-{first_receiving(semaphore)}\/suspended));
  ((queue_receiving<+{semaphore|->n_receiving})(que): POW(blocked-{first_receiving(semaphore)}\/suspended));
  ("`Local hypotheses'" & not(semaphore: semaphores_full) & not(queue_receiving(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(semaphore)} & running$0: n_runable & not(first_receiving(semaphore): suspended) & first_receiving(semaphore): blocked & first_receiving(semaphore): unblocked & n_receiving: POW(TASK) & n_receiving = queue_receiving(semaphore)-{first_receiving(semaphore)} & n_first: TASK & n_first: n_receiving & not(semaphore: semaphores_busy) & blocked-{first_receiving(semaphore)}: FIN(TASK) & blocked-{first_receiving(semaphore)}: POW(tasks) & unblocked-{first_receiving(semaphore)}: FIN(TASK) & unblocked-{first_receiving(semaphore)}: POW(blocked-{first_receiving(semaphore)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_receiving(semaphore)} = {} & blocked-{first_receiving(semaphore)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_receiving(semaphore)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{semaphore|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{semaphore|->n_receiving}) & first_receiving<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{semaphore|->n_first}) = dom(queue_receiving<+{semaphore|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{semaphore|->n_first}) & not((queue_receiving<+{semaphore|->n_receiving})(q1) = {}) => (first_receiving<+{semaphore|->n_first})(q1): (queue_receiving<+{semaphore|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{semaphore|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{semaphore|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{semaphore|->n_receiving})(q1) => not(tk: (queue_receiving<+{semaphore|->n_receiving})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = first_receiving(semaphore)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_full) & not(queue_receiving(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(semaphore)} & running$0: n_runable & not(first_receiving(semaphore): suspended) & first_receiving(semaphore): blocked & not(first_receiving(semaphore): unblocked) & n_receiving: POW(TASK) & n_receiving = queue_receiving(semaphore)-{first_receiving(semaphore)} & n_first: TASK & n_first: n_receiving & semaphore: semaphores_busy & blocked-{first_receiving(semaphore)}: FIN(TASK) & blocked-{first_receiving(semaphore)}: POW(tasks) & unblocked: POW(blocked-{first_receiving(semaphore)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_receiving(semaphore)} = {} & blocked-{first_receiving(semaphore)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_receiving(semaphore)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{semaphore|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{semaphore|->n_receiving}) & first_receiving<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{semaphore|->n_first}) = dom(queue_receiving<+{semaphore|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{semaphore|->n_first}) & not((queue_receiving<+{semaphore|->n_receiving})(q1) = {}) => (first_receiving<+{semaphore|->n_first})(q1): (queue_receiving<+{semaphore|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{semaphore|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{semaphore|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{semaphore|->n_receiving})(q1) => not(tk: (queue_receiving<+{semaphore|->n_receiving})(q2))) & semaphores_busy-{semaphore}: POW(semaphores) & semaphores_busy-{semaphore}/\semaphores_full = {} & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = first_receiving(semaphore)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_full) & not(queue_receiving(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(semaphore)} & running$0: n_runable & not(first_receiving(semaphore): suspended) & first_receiving(semaphore): blocked & not(first_receiving(semaphore): unblocked) & n_receiving: POW(TASK) & n_receiving = queue_receiving(semaphore)-{first_receiving(semaphore)} & n_first: TASK & n_first: n_receiving & not(semaphore: semaphores_busy) & blocked-{first_receiving(semaphore)}: FIN(TASK) & blocked-{first_receiving(semaphore)}: POW(tasks) & unblocked: POW(blocked-{first_receiving(semaphore)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_receiving(semaphore)} = {} & blocked-{first_receiving(semaphore)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_receiving(semaphore)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{semaphore|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{semaphore|->n_receiving}) & first_receiving<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{semaphore|->n_first}) = dom(queue_receiving<+{semaphore|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{semaphore|->n_first}) & not((queue_receiving<+{semaphore|->n_receiving})(q1) = {}) => (first_receiving<+{semaphore|->n_first})(q1): (queue_receiving<+{semaphore|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{semaphore|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{semaphore|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{semaphore|->n_receiving})(q1) => not(tk: (queue_receiving<+{semaphore|->n_receiving})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = first_receiving(semaphore)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_full) & not(queue_receiving(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(semaphore)} & running$0: n_runable & not(first_receiving(semaphore): suspended) & not(first_receiving(semaphore): blocked) & n_receiving: POW(TASK) & n_receiving = queue_receiving(semaphore)-{first_receiving(semaphore)} & n_first: TASK & n_first: n_receiving & semaphore: semaphores_busy & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{semaphore|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{semaphore|->n_receiving}) & first_receiving<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{semaphore|->n_first}) = dom(queue_receiving<+{semaphore|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{semaphore|->n_first}) & not((queue_receiving<+{semaphore|->n_receiving})(q1) = {}) => (first_receiving<+{semaphore|->n_first})(q1): (queue_receiving<+{semaphore|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{semaphore|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{semaphore|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{semaphore|->n_receiving})(q1) => not(tk: (queue_receiving<+{semaphore|->n_receiving})(q2))) & semaphores_busy-{semaphore}: POW(semaphores) & semaphores_busy-{semaphore}/\semaphores_full = {} & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ((queue_receiving<+{semaphore|->n_receiving})(que): POW(blocked\/suspended));
  ("`Local hypotheses'" & not(semaphore: semaphores_full) & not(queue_receiving(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(semaphore)} & running$0: n_runable & not(first_receiving(semaphore): suspended) & not(first_receiving(semaphore): blocked) & n_receiving: POW(TASK) & n_receiving = queue_receiving(semaphore)-{first_receiving(semaphore)} & n_first: TASK & n_first: n_receiving & not(semaphore: semaphores_busy) & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{semaphore|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{semaphore|->n_receiving}) & first_receiving<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{semaphore|->n_first}) = dom(queue_receiving<+{semaphore|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{semaphore|->n_first}) & not((queue_receiving<+{semaphore|->n_receiving})(q1) = {}) => (first_receiving<+{semaphore|->n_first})(q1): (queue_receiving<+{semaphore|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{semaphore|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{semaphore|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{semaphore|->n_receiving})(q1) => not(tk: (queue_receiving<+{semaphore|->n_receiving})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_full) & not(queue_receiving(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(semaphore)} & first_receiving(semaphore): suspended & first_receiving(semaphore): blocked & first_receiving(semaphore): unblocked & n_receiving: POW(TASK) & n_receiving = queue_receiving(semaphore)-{first_receiving(semaphore)} & n_first: TASK & n_first: n_receiving & semaphore: semaphores_busy & blocked-{first_receiving(semaphore)}: FIN(TASK) & blocked-{first_receiving(semaphore)}: POW(tasks) & unblocked-{first_receiving(semaphore)}: FIN(TASK) & unblocked-{first_receiving(semaphore)}: POW(blocked-{first_receiving(semaphore)}) & n_runable: FIN(TASK) & suspended-{first_receiving(semaphore)}: FIN(TASK) & suspended-{first_receiving(semaphore)}: POW(tasks) & n_runable/\blocked-{first_receiving(semaphore)} = {} & blocked-{first_receiving(semaphore)}/\suspended-{first_receiving(semaphore)} = {} & suspended-{first_receiving(semaphore)}/\n_runable = {} & tasks = suspended-{first_receiving(semaphore)}\/blocked-{first_receiving(semaphore)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{semaphore|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{semaphore|->n_receiving}) & first_receiving<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{semaphore|->n_first}) = dom(queue_receiving<+{semaphore|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{semaphore|->n_first}) & not((queue_receiving<+{semaphore|->n_receiving})(q1) = {}) => (first_receiving<+{semaphore|->n_first})(q1): (queue_receiving<+{semaphore|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{semaphore|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{semaphore|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{semaphore|->n_receiving})(q1) => not(tk: (queue_receiving<+{semaphore|->n_receiving})(q2))) & semaphores_busy-{semaphore}: POW(semaphores) & semaphores_busy-{semaphore}/\semaphores_full = {} & (active = TRUE => not(running: suspended & not(running = first_receiving(semaphore)))) & (active = TRUE => not(running: blocked & not(running = first_receiving(semaphore)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(semaphore)))) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_full) & not(queue_receiving(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(semaphore)} & first_receiving(semaphore): suspended & first_receiving(semaphore): blocked & first_receiving(semaphore): unblocked & n_receiving: POW(TASK) & n_receiving = queue_receiving(semaphore)-{first_receiving(semaphore)} & n_first: TASK & n_first: n_receiving & not(semaphore: semaphores_busy) & blocked-{first_receiving(semaphore)}: FIN(TASK) & blocked-{first_receiving(semaphore)}: POW(tasks) & unblocked-{first_receiving(semaphore)}: FIN(TASK) & unblocked-{first_receiving(semaphore)}: POW(blocked-{first_receiving(semaphore)}) & n_runable: FIN(TASK) & suspended-{first_receiving(semaphore)}: FIN(TASK) & suspended-{first_receiving(semaphore)}: POW(tasks) & n_runable/\blocked-{first_receiving(semaphore)} = {} & blocked-{first_receiving(semaphore)}/\suspended-{first_receiving(semaphore)} = {} & suspended-{first_receiving(semaphore)}/\n_runable = {} & tasks = suspended-{first_receiving(semaphore)}\/blocked-{first_receiving(semaphore)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{semaphore|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{semaphore|->n_receiving}) & first_receiving<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{semaphore|->n_first}) = dom(queue_receiving<+{semaphore|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{semaphore|->n_first}) & not((queue_receiving<+{semaphore|->n_receiving})(q1) = {}) => (first_receiving<+{semaphore|->n_first})(q1): (queue_receiving<+{semaphore|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{semaphore|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{semaphore|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{semaphore|->n_receiving})(q1) => not(tk: (queue_receiving<+{semaphore|->n_receiving})(q2))) & (active = TRUE => not(running: suspended & not(running = first_receiving(semaphore)))) & (active = TRUE => not(running: blocked & not(running = first_receiving(semaphore)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(semaphore)))) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_full) & not(queue_receiving(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(semaphore)} & first_receiving(semaphore): suspended & first_receiving(semaphore): blocked & not(first_receiving(semaphore): unblocked) & n_receiving: POW(TASK) & n_receiving = queue_receiving(semaphore)-{first_receiving(semaphore)} & n_first: TASK & n_first: n_receiving & semaphore: semaphores_busy & blocked-{first_receiving(semaphore)}: FIN(TASK) & blocked-{first_receiving(semaphore)}: POW(tasks) & unblocked: POW(blocked-{first_receiving(semaphore)}) & n_runable: FIN(TASK) & suspended-{first_receiving(semaphore)}: FIN(TASK) & suspended-{first_receiving(semaphore)}: POW(tasks) & n_runable/\blocked-{first_receiving(semaphore)} = {} & blocked-{first_receiving(semaphore)}/\suspended-{first_receiving(semaphore)} = {} & suspended-{first_receiving(semaphore)}/\n_runable = {} & tasks = suspended-{first_receiving(semaphore)}\/blocked-{first_receiving(semaphore)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{semaphore|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{semaphore|->n_receiving}) & first_receiving<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{semaphore|->n_first}) = dom(queue_receiving<+{semaphore|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{semaphore|->n_first}) & not((queue_receiving<+{semaphore|->n_receiving})(q1) = {}) => (first_receiving<+{semaphore|->n_first})(q1): (queue_receiving<+{semaphore|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{semaphore|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{semaphore|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{semaphore|->n_receiving})(q1) => not(tk: (queue_receiving<+{semaphore|->n_receiving})(q2))) & semaphores_busy-{semaphore}: POW(semaphores) & semaphores_busy-{semaphore}/\semaphores_full = {} & (active = TRUE => not(running: suspended & not(running = first_receiving(semaphore)))) & (active = TRUE => not(running: blocked & not(running = first_receiving(semaphore)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(semaphore)))) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_full) & not(queue_receiving(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(semaphore)} & first_receiving(semaphore): suspended & first_receiving(semaphore): blocked & not(first_receiving(semaphore): unblocked) & n_receiving: POW(TASK) & n_receiving = queue_receiving(semaphore)-{first_receiving(semaphore)} & n_first: TASK & n_first: n_receiving & not(semaphore: semaphores_busy) & blocked-{first_receiving(semaphore)}: FIN(TASK) & blocked-{first_receiving(semaphore)}: POW(tasks) & unblocked: POW(blocked-{first_receiving(semaphore)}) & n_runable: FIN(TASK) & suspended-{first_receiving(semaphore)}: FIN(TASK) & suspended-{first_receiving(semaphore)}: POW(tasks) & n_runable/\blocked-{first_receiving(semaphore)} = {} & blocked-{first_receiving(semaphore)}/\suspended-{first_receiving(semaphore)} = {} & suspended-{first_receiving(semaphore)}/\n_runable = {} & tasks = suspended-{first_receiving(semaphore)}\/blocked-{first_receiving(semaphore)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{semaphore|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{semaphore|->n_receiving}) & first_receiving<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{semaphore|->n_first}) = dom(queue_receiving<+{semaphore|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{semaphore|->n_first}) & not((queue_receiving<+{semaphore|->n_receiving})(q1) = {}) => (first_receiving<+{semaphore|->n_first})(q1): (queue_receiving<+{semaphore|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{semaphore|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{semaphore|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{semaphore|->n_receiving})(q1) => not(tk: (queue_receiving<+{semaphore|->n_receiving})(q2))) & (active = TRUE => not(running: suspended & not(running = first_receiving(semaphore)))) & (active = TRUE => not(running: blocked & not(running = first_receiving(semaphore)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(semaphore)))) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_full) & not(queue_receiving(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(semaphore)} & first_receiving(semaphore): suspended & not(first_receiving(semaphore): blocked) & n_receiving: POW(TASK) & n_receiving = queue_receiving(semaphore)-{first_receiving(semaphore)} & n_first: TASK & n_first: n_receiving & semaphore: semaphores_busy & n_runable: FIN(TASK) & suspended-{first_receiving(semaphore)}: FIN(TASK) & suspended-{first_receiving(semaphore)}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{first_receiving(semaphore)} = {} & suspended-{first_receiving(semaphore)}/\n_runable = {} & tasks = suspended-{first_receiving(semaphore)}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{semaphore|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{semaphore|->n_receiving}) & first_receiving<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{semaphore|->n_first}) = dom(queue_receiving<+{semaphore|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{semaphore|->n_first}) & not((queue_receiving<+{semaphore|->n_receiving})(q1) = {}) => (first_receiving<+{semaphore|->n_first})(q1): (queue_receiving<+{semaphore|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{semaphore|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{semaphore|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{semaphore|->n_receiving})(q1) => not(tk: (queue_receiving<+{semaphore|->n_receiving})(q2))) & semaphores_busy-{semaphore}: POW(semaphores) & semaphores_busy-{semaphore}/\semaphores_full = {} & (active = TRUE => not(running: suspended & not(running = first_receiving(semaphore)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_full) & not(queue_receiving(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(semaphore)} & first_receiving(semaphore): suspended & not(first_receiving(semaphore): blocked) & n_receiving: POW(TASK) & n_receiving = queue_receiving(semaphore)-{first_receiving(semaphore)} & n_first: TASK & n_first: n_receiving & not(semaphore: semaphores_busy) & n_runable: FIN(TASK) & suspended-{first_receiving(semaphore)}: FIN(TASK) & suspended-{first_receiving(semaphore)}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{first_receiving(semaphore)} = {} & suspended-{first_receiving(semaphore)}/\n_runable = {} & tasks = suspended-{first_receiving(semaphore)}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{semaphore|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{semaphore|->n_receiving}) & first_receiving<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{semaphore|->n_first}) = dom(queue_receiving<+{semaphore|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{semaphore|->n_first}) & not((queue_receiving<+{semaphore|->n_receiving})(q1) = {}) => (first_receiving<+{semaphore|->n_first})(q1): (queue_receiving<+{semaphore|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{semaphore|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{semaphore|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{semaphore|->n_receiving})(q1) => not(tk: (queue_receiving<+{semaphore|->n_receiving})(q2))) & (active = TRUE => not(running: suspended & not(running = first_receiving(semaphore)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_full) & not(queue_receiving(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(semaphore)} & not(first_receiving(semaphore): suspended) & first_receiving(semaphore): blocked & first_receiving(semaphore): unblocked & n_receiving: POW(TASK) & n_receiving = queue_receiving(semaphore)-{first_receiving(semaphore)} & n_first: TASK & n_first: n_receiving & semaphore: semaphores_busy & blocked-{first_receiving(semaphore)}: FIN(TASK) & blocked-{first_receiving(semaphore)}: POW(tasks) & unblocked-{first_receiving(semaphore)}: FIN(TASK) & unblocked-{first_receiving(semaphore)}: POW(blocked-{first_receiving(semaphore)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_receiving(semaphore)} = {} & blocked-{first_receiving(semaphore)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_receiving(semaphore)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{semaphore|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{semaphore|->n_receiving}) & first_receiving<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{semaphore|->n_first}) = dom(queue_receiving<+{semaphore|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{semaphore|->n_first}) & not((queue_receiving<+{semaphore|->n_receiving})(q1) = {}) => (first_receiving<+{semaphore|->n_first})(q1): (queue_receiving<+{semaphore|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{semaphore|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{semaphore|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{semaphore|->n_receiving})(q1) => not(tk: (queue_receiving<+{semaphore|->n_receiving})(q2))) & semaphores_busy-{semaphore}: POW(semaphores) & semaphores_busy-{semaphore}/\semaphores_full = {} & (active = TRUE => not(running: blocked & not(running = first_receiving(semaphore)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_full) & not(queue_receiving(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(semaphore)} & not(first_receiving(semaphore): suspended) & first_receiving(semaphore): blocked & first_receiving(semaphore): unblocked & n_receiving: POW(TASK) & n_receiving = queue_receiving(semaphore)-{first_receiving(semaphore)} & n_first: TASK & n_first: n_receiving & not(semaphore: semaphores_busy) & blocked-{first_receiving(semaphore)}: FIN(TASK) & blocked-{first_receiving(semaphore)}: POW(tasks) & unblocked-{first_receiving(semaphore)}: FIN(TASK) & unblocked-{first_receiving(semaphore)}: POW(blocked-{first_receiving(semaphore)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_receiving(semaphore)} = {} & blocked-{first_receiving(semaphore)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_receiving(semaphore)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{semaphore|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{semaphore|->n_receiving}) & first_receiving<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{semaphore|->n_first}) = dom(queue_receiving<+{semaphore|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{semaphore|->n_first}) & not((queue_receiving<+{semaphore|->n_receiving})(q1) = {}) => (first_receiving<+{semaphore|->n_first})(q1): (queue_receiving<+{semaphore|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{semaphore|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{semaphore|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{semaphore|->n_receiving})(q1) => not(tk: (queue_receiving<+{semaphore|->n_receiving})(q2))) & (active = TRUE => not(running: blocked & not(running = first_receiving(semaphore)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_full) & not(queue_receiving(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(semaphore)} & not(first_receiving(semaphore): suspended) & first_receiving(semaphore): blocked & not(first_receiving(semaphore): unblocked) & n_receiving: POW(TASK) & n_receiving = queue_receiving(semaphore)-{first_receiving(semaphore)} & n_first: TASK & n_first: n_receiving & semaphore: semaphores_busy & blocked-{first_receiving(semaphore)}: FIN(TASK) & blocked-{first_receiving(semaphore)}: POW(tasks) & unblocked: POW(blocked-{first_receiving(semaphore)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_receiving(semaphore)} = {} & blocked-{first_receiving(semaphore)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_receiving(semaphore)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{semaphore|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{semaphore|->n_receiving}) & first_receiving<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{semaphore|->n_first}) = dom(queue_receiving<+{semaphore|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{semaphore|->n_first}) & not((queue_receiving<+{semaphore|->n_receiving})(q1) = {}) => (first_receiving<+{semaphore|->n_first})(q1): (queue_receiving<+{semaphore|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{semaphore|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{semaphore|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{semaphore|->n_receiving})(q1) => not(tk: (queue_receiving<+{semaphore|->n_receiving})(q2))) & semaphores_busy-{semaphore}: POW(semaphores) & semaphores_busy-{semaphore}/\semaphores_full = {} & (active = TRUE => not(running: blocked & not(running = first_receiving(semaphore)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_full) & not(queue_receiving(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(semaphore)} & not(first_receiving(semaphore): suspended) & first_receiving(semaphore): blocked & not(first_receiving(semaphore): unblocked) & n_receiving: POW(TASK) & n_receiving = queue_receiving(semaphore)-{first_receiving(semaphore)} & n_first: TASK & n_first: n_receiving & not(semaphore: semaphores_busy) & blocked-{first_receiving(semaphore)}: FIN(TASK) & blocked-{first_receiving(semaphore)}: POW(tasks) & unblocked: POW(blocked-{first_receiving(semaphore)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_receiving(semaphore)} = {} & blocked-{first_receiving(semaphore)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_receiving(semaphore)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{semaphore|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{semaphore|->n_receiving}) & first_receiving<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{semaphore|->n_first}) = dom(queue_receiving<+{semaphore|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{semaphore|->n_first}) & not((queue_receiving<+{semaphore|->n_receiving})(q1) = {}) => (first_receiving<+{semaphore|->n_first})(q1): (queue_receiving<+{semaphore|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{semaphore|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{semaphore|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{semaphore|->n_receiving})(q1) => not(tk: (queue_receiving<+{semaphore|->n_receiving})(q2))) & (active = TRUE => not(running: blocked & not(running = first_receiving(semaphore)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(semaphore)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_full) & not(queue_receiving(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(semaphore)} & not(first_receiving(semaphore): suspended) & not(first_receiving(semaphore): blocked) & n_receiving: POW(TASK) & n_receiving = queue_receiving(semaphore)-{first_receiving(semaphore)} & n_first: TASK & n_first: n_receiving & semaphore: semaphores_busy & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{semaphore|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{semaphore|->n_receiving}) & first_receiving<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{semaphore|->n_first}) = dom(queue_receiving<+{semaphore|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{semaphore|->n_first}) & not((queue_receiving<+{semaphore|->n_receiving})(q1) = {}) => (first_receiving<+{semaphore|->n_first})(q1): (queue_receiving<+{semaphore|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{semaphore|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{semaphore|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{semaphore|->n_receiving})(q1) => not(tk: (queue_receiving<+{semaphore|->n_receiving})(q2))) & semaphores_busy-{semaphore}: POW(semaphores) & semaphores_busy-{semaphore}/\semaphores_full = {} & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_full) & not(queue_receiving(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(semaphore)} & not(first_receiving(semaphore): suspended) & not(first_receiving(semaphore): blocked) & n_receiving: POW(TASK) & n_receiving = queue_receiving(semaphore)-{first_receiving(semaphore)} & n_first: TASK & n_first: n_receiving & not(semaphore: semaphores_busy) & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{semaphore|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{semaphore|->n_receiving}) & first_receiving<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{semaphore|->n_first}) = dom(queue_receiving<+{semaphore|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{semaphore|->n_first}) & not((queue_receiving<+{semaphore|->n_receiving})(q1) = {}) => (first_receiving<+{semaphore|->n_first})(q1): (queue_receiving<+{semaphore|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{semaphore|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{semaphore|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{semaphore|->n_receiving})(q1) => not(tk: (queue_receiving<+{semaphore|->n_receiving})(q2))) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_full) & queue_receiving(semaphore) = {} & n_receiving: POW(TASK) & n_receiving = queue_receiving(semaphore)-{first_receiving(semaphore)} & n_first: TASK & n_first: n_receiving & semaphore: semaphores_busy & queue_receiving<+{semaphore|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{semaphore|->n_receiving}) & first_receiving<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{semaphore|->n_first}) = dom(queue_receiving<+{semaphore|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{semaphore|->n_first}) & not((queue_receiving<+{semaphore|->n_receiving})(q1) = {}) => (first_receiving<+{semaphore|->n_first})(q1): (queue_receiving<+{semaphore|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{semaphore|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{semaphore|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{semaphore|->n_receiving})(q1) => not(tk: (queue_receiving<+{semaphore|->n_receiving})(q2))) & semaphores_busy-{semaphore}: POW(semaphores) & semaphores_busy-{semaphore}/\semaphores_full = {} & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_full) & queue_receiving(semaphore) = {} & n_receiving: POW(TASK) & n_receiving = queue_receiving(semaphore)-{first_receiving(semaphore)} & n_first: TASK & n_first: n_receiving & not(semaphore: semaphores_busy) & queue_receiving<+{semaphore|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{semaphore|->n_receiving}) & first_receiving<+{semaphore|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{semaphore|->n_first}) = dom(queue_receiving<+{semaphore|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{semaphore|->n_first}) & not((queue_receiving<+{semaphore|->n_receiving})(q1) = {}) => (first_receiving<+{semaphore|->n_first})(q1): (queue_receiving<+{semaphore|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{semaphore|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{semaphore|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{semaphore|->n_receiving})(q1) => not(tk: (queue_receiving<+{semaphore|->n_receiving})(q2))) & que: queues);
  ("`Local hypotheses'" & semaphore: semaphores_full);
  ("`Local hypotheses'" & semaphore: semaphores_full & q1: queues);
  ("`Local hypotheses'" & semaphore: semaphores_full & queue_sending(semaphore) = {} & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & blocked\/{running}: FIN(TASK) & running: tasks & unblocked: POW(blocked\/{running}) & n_runable: FIN(TASK) & not(running: n_runable) & n_runable/\blocked = {} & blocked\/{running}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/(blocked\/{running})\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})}) & first_sending<+{semaphore|->running}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->running}) = dom(queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->running}) & not((queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q1) = {}) => (first_sending<+{semaphore|->running})(q1): (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q1) => not(tk: (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked) & not(running$0 = running)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ((queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(que): POW(blocked\/{running}\/suspended));
  ("`Local hypotheses'" & semaphore: semaphores_full & queue_sending(semaphore) = {} & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & blocked\/{running}: FIN(TASK) & running: tasks & unblocked: POW(blocked\/{running}) & n_runable: FIN(TASK) & not(running: n_runable) & n_runable/\blocked = {} & blocked\/{running}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/(blocked\/{running})\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})}) & first_sending<+{semaphore|->running}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->running}) = dom(queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->running}) & not((queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q1) = {}) => (first_sending<+{semaphore|->running})(q1): (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q1) => not(tk: (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked) & not(running$0 = running)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ((queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(mt) = {});
  ("`Local hypotheses'" & semaphore: semaphores_full & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & blocked\/{running}: FIN(TASK) & running: tasks & unblocked: POW(blocked\/{running}) & n_runable: FIN(TASK) & not(running: n_runable) & n_runable/\blocked = {} & blocked\/{running}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/(blocked\/{running})\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})}) & dom(first_sending) = dom(queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})}) & !q1.(q1: queues & q1: dom(first_sending) & not((queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q1) = {}) => first_sending(q1): (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q1) => not(tk: (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked) & not(running$0 = running)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & semaphore: semaphores_full & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & blocked\/{running}: FIN(TASK) & running: tasks & unblocked: POW(blocked\/{running}) & n_runable: FIN(TASK) & not(running: n_runable) & n_runable/\blocked = {} & blocked\/{running}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/(blocked\/{running})\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})}) & dom(first_sending) = dom(queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})}) & !q1.(q1: queues & q1: dom(first_sending) & not((queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q1) = {}) => first_sending(q1): (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q1) => not(tk: (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked) & not(running$0 = running)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & semaphore: semaphores_full & queue_sending(semaphore) = {} & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & n_runable: FIN(TASK) & suspended\/{running}: FIN(TASK) & running: tasks & n_runable/\blocked = {} & suspended\/{running}/\n_runable = {} & tasks = suspended\/{running}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})}) & first_sending<+{semaphore|->running}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->running}) = dom(queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->running}) & not((queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q1) = {}) => (first_sending<+{semaphore|->running})(q1): (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q1) => not(tk: (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q2))) & (active = TRUE => not(running$0: suspended) & not(running$0 = running)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ((queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(que): POW(blocked\/(suspended\/{running})));
  ("`Local hypotheses'" & semaphore: semaphores_full & queue_sending(semaphore) = {} & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & n_runable: FIN(TASK) & suspended\/{running}: FIN(TASK) & running: tasks & n_runable/\blocked = {} & suspended\/{running}/\n_runable = {} & tasks = suspended\/{running}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})}) & first_sending<+{semaphore|->running}: QUEUE +-> TASK & dom(first_sending<+{semaphore|->running}) = dom(queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})}) & !q1.(q1: queues & q1: dom(first_sending<+{semaphore|->running}) & not((queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q1) = {}) => (first_sending<+{semaphore|->running})(q1): (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q1) => not(tk: (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q2))) & (active = TRUE => not(running$0: suspended) & not(running$0 = running)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & semaphore: semaphores_full & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & n_runable: FIN(TASK) & suspended\/{running}: FIN(TASK) & running: tasks & n_runable/\blocked = {} & suspended\/{running}/\n_runable = {} & tasks = suspended\/{running}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})}) & dom(first_sending) = dom(queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})}) & !q1.(q1: queues & q1: dom(first_sending) & not((queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q1) = {}) => first_sending(q1): (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q1) => not(tk: (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q2))) & (active = TRUE => not(running$0: suspended) & not(running$0 = running)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & semaphore: semaphores_full & not(queue_sending(semaphore) = {}) & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & n_runable: FIN(TASK) & suspended\/{running}: FIN(TASK) & running: tasks & n_runable/\blocked = {} & suspended\/{running}/\n_runable = {} & tasks = suspended\/{running}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})}) & dom(first_sending) = dom(queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})}) & !q1.(q1: queues & q1: dom(first_sending) & not((queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q1) = {}) => first_sending(q1): (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q1) => not(tk: (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q2))) & (active = TRUE => not(running$0: suspended) & not(running$0 = running)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & mutex$0: QUEUE & not(mutex$0: queues) & queue_receiving\/{mutex$0|->{}}: QUEUE +-> POW(TASK) & queue_sending\/{mutex$0|->{}}: QUEUE +-> POW(TASK) & queues\/{mutex$0} = dom(queue_receiving\/{mutex$0|->{}}) & queues\/{mutex$0} = dom(queue_sending\/{mutex$0|->{}}) & first_receiving\/{mutex$0|->TASK_NULL}: QUEUE +-> TASK & first_sending\/{mutex$0|->TASK_NULL}: QUEUE +-> TASK & dom(first_receiving\/{mutex$0|->TASK_NULL}) = dom(queue_receiving\/{mutex$0|->{}}) & dom(first_sending\/{mutex$0|->TASK_NULL}) = dom(queue_sending\/{mutex$0|->{}}) & !q1.(q1: queues\/{mutex$0} & q1: dom(first_receiving\/{mutex$0|->TASK_NULL}) & not((queue_receiving\/{mutex$0|->{}})(q1) = {}) => (first_receiving\/{mutex$0|->TASK_NULL})(q1): (queue_receiving\/{mutex$0|->{}})(q1)) & !q1.(q1: queues\/{mutex$0} & q1: dom(first_sending\/{mutex$0|->TASK_NULL}) & not((queue_sending\/{mutex$0|->{}})(q1) = {}) => (first_sending\/{mutex$0|->TASK_NULL})(q1): (queue_sending\/{mutex$0|->{}})(q1)) & queues_msg: POW(queues\/{mutex$0}) & !(q1,q2,tk).(q1: queues\/{mutex$0} & q2: queues\/{mutex$0} & tk: TASK & tk: (queue_receiving\/{mutex$0|->{}})(q1) => not(tk: (queue_sending\/{mutex$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{mutex$0} & q2: queues\/{mutex$0} & tk: TASK & tk: (queue_sending\/{mutex$0|->{}})(q2) => not(tk: (queue_receiving\/{mutex$0|->{}})(q1))) & !(q1,q2,tk).(q1: queues\/{mutex$0} & q2: queues\/{mutex$0} & not(q1 = q2) & tk: TASK & tk: (queue_receiving\/{mutex$0|->{}})(q1) => not(tk: (queue_receiving\/{mutex$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{mutex$0} & q2: queues\/{mutex$0} & not(q1 = q2) & tk: TASK & tk: (queue_sending\/{mutex$0|->{}})(q1) => not(tk: (queue_sending\/{mutex$0|->{}})(q2))) & semaphores: POW(queues\/{mutex$0}) & mutex$0: queues\/{mutex$0} & mutexes: POW(queues\/{mutex$0}) & mutex_holder\/{mutex$0|->TASK_NULL}: QUEUE +-> TASK & mutexes\/{mutex$0} = dom(mutex_holder\/{mutex$0|->TASK_NULL}) & mutexes_busy: POW(mutexes\/{mutex$0}) & !mt.(mt: mutexes_busy => not((mutex_holder\/{mutex$0|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes\/{mutex$0} & not(mt: mutexes_busy) => (mutex_holder\/{mutex$0|->TASK_NULL})(mt) = TASK_NULL) & not(mutex$0: queues_msg) & mutexes\/{mutex$0}/\semaphores = {} & !que.(que: QUEUE & (not(que: queues) & not(que = mutex$0)) => not(que: mutexes) & not(que = mutex$0)) & !que.(que: QUEUE & (not(que: queues) & not(que = mutex$0)) => not(que: semaphores)) & que: queues\/{mutex$0});
  ((queue_sending\/{mutex$0|->{}})(que): POW(blocked\/suspended));
  ((queue_receiving\/{mutex$0|->{}})(que): POW(blocked\/suspended));
  ("`Local hypotheses'" & mutex$0: QUEUE & not(mutex$0: queues) & queue_receiving\/{mutex$0|->{}}: QUEUE +-> POW(TASK) & queue_sending\/{mutex$0|->{}}: QUEUE +-> POW(TASK) & queues\/{mutex$0} = dom(queue_receiving\/{mutex$0|->{}}) & queues\/{mutex$0} = dom(queue_sending\/{mutex$0|->{}}) & first_receiving\/{mutex$0|->TASK_NULL}: QUEUE +-> TASK & first_sending\/{mutex$0|->TASK_NULL}: QUEUE +-> TASK & dom(first_receiving\/{mutex$0|->TASK_NULL}) = dom(queue_receiving\/{mutex$0|->{}}) & dom(first_sending\/{mutex$0|->TASK_NULL}) = dom(queue_sending\/{mutex$0|->{}}) & !q1.(q1: queues\/{mutex$0} & q1: dom(first_receiving\/{mutex$0|->TASK_NULL}) & not((queue_receiving\/{mutex$0|->{}})(q1) = {}) => (first_receiving\/{mutex$0|->TASK_NULL})(q1): (queue_receiving\/{mutex$0|->{}})(q1)) & !q1.(q1: queues\/{mutex$0} & q1: dom(first_sending\/{mutex$0|->TASK_NULL}) & not((queue_sending\/{mutex$0|->{}})(q1) = {}) => (first_sending\/{mutex$0|->TASK_NULL})(q1): (queue_sending\/{mutex$0|->{}})(q1)) & queues_msg: POW(queues\/{mutex$0}) & !(q1,q2,tk).(q1: queues\/{mutex$0} & q2: queues\/{mutex$0} & tk: TASK & tk: (queue_receiving\/{mutex$0|->{}})(q1) => not(tk: (queue_sending\/{mutex$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{mutex$0} & q2: queues\/{mutex$0} & tk: TASK & tk: (queue_sending\/{mutex$0|->{}})(q2) => not(tk: (queue_receiving\/{mutex$0|->{}})(q1))) & !(q1,q2,tk).(q1: queues\/{mutex$0} & q2: queues\/{mutex$0} & not(q1 = q2) & tk: TASK & tk: (queue_receiving\/{mutex$0|->{}})(q1) => not(tk: (queue_receiving\/{mutex$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{mutex$0} & q2: queues\/{mutex$0} & not(q1 = q2) & tk: TASK & tk: (queue_sending\/{mutex$0|->{}})(q1) => not(tk: (queue_sending\/{mutex$0|->{}})(q2))) & semaphores: POW(queues\/{mutex$0}) & mutex$0: queues\/{mutex$0} & mutexes: POW(queues\/{mutex$0}) & mutex_holder\/{mutex$0|->TASK_NULL}: QUEUE +-> TASK & mutexes\/{mutex$0} = dom(mutex_holder\/{mutex$0|->TASK_NULL}) & mutexes_busy: POW(mutexes\/{mutex$0}) & !mt.(mt: mutexes_busy => not((mutex_holder\/{mutex$0|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes\/{mutex$0} & not(mt: mutexes_busy) => (mutex_holder\/{mutex$0|->TASK_NULL})(mt) = TASK_NULL) & not(mutex$0: queues_msg) & mutexes\/{mutex$0}/\semaphores = {} & !que.(que: QUEUE & (not(que: queues) & not(que = mutex$0)) => not(que: mutexes) & not(que = mutex$0)) & !que.(que: QUEUE & (not(que: queues) & not(que = mutex$0)) => not(que: semaphores)));
  (ran(mutex_holder\/{mutex$0|->TASK_NULL}): POW(tasks\/{TASK_NULL}));
  ("`Local hypotheses'" & mutex$0: QUEUE & not(mutex$0: queues) & queue_receiving\/{mutex$0|->{}}: QUEUE +-> POW(TASK) & queue_sending\/{mutex$0|->{}}: QUEUE +-> POW(TASK) & queues\/{mutex$0} = dom(queue_receiving\/{mutex$0|->{}}) & queues\/{mutex$0} = dom(queue_sending\/{mutex$0|->{}}) & first_receiving\/{mutex$0|->TASK_NULL}: QUEUE +-> TASK & first_sending\/{mutex$0|->TASK_NULL}: QUEUE +-> TASK & dom(first_receiving\/{mutex$0|->TASK_NULL}) = dom(queue_receiving\/{mutex$0|->{}}) & dom(first_sending\/{mutex$0|->TASK_NULL}) = dom(queue_sending\/{mutex$0|->{}}) & !q1.(q1: queues\/{mutex$0} & q1: dom(first_receiving\/{mutex$0|->TASK_NULL}) & not((queue_receiving\/{mutex$0|->{}})(q1) = {}) => (first_receiving\/{mutex$0|->TASK_NULL})(q1): (queue_receiving\/{mutex$0|->{}})(q1)) & !q1.(q1: queues\/{mutex$0} & q1: dom(first_sending\/{mutex$0|->TASK_NULL}) & not((queue_sending\/{mutex$0|->{}})(q1) = {}) => (first_sending\/{mutex$0|->TASK_NULL})(q1): (queue_sending\/{mutex$0|->{}})(q1)) & queues_msg: POW(queues\/{mutex$0}) & !(q1,q2,tk).(q1: queues\/{mutex$0} & q2: queues\/{mutex$0} & tk: TASK & tk: (queue_receiving\/{mutex$0|->{}})(q1) => not(tk: (queue_sending\/{mutex$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{mutex$0} & q2: queues\/{mutex$0} & tk: TASK & tk: (queue_sending\/{mutex$0|->{}})(q2) => not(tk: (queue_receiving\/{mutex$0|->{}})(q1))) & !(q1,q2,tk).(q1: queues\/{mutex$0} & q2: queues\/{mutex$0} & not(q1 = q2) & tk: TASK & tk: (queue_receiving\/{mutex$0|->{}})(q1) => not(tk: (queue_receiving\/{mutex$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{mutex$0} & q2: queues\/{mutex$0} & not(q1 = q2) & tk: TASK & tk: (queue_sending\/{mutex$0|->{}})(q1) => not(tk: (queue_sending\/{mutex$0|->{}})(q2))) & semaphores: POW(queues\/{mutex$0}) & mutex$0: queues\/{mutex$0} & mutexes: POW(queues\/{mutex$0}) & mutex_holder\/{mutex$0|->TASK_NULL}: QUEUE +-> TASK & mutexes\/{mutex$0} = dom(mutex_holder\/{mutex$0|->TASK_NULL}) & mutexes_busy: POW(mutexes\/{mutex$0}) & !mt.(mt: mutexes_busy => not((mutex_holder\/{mutex$0|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes\/{mutex$0} & not(mt: mutexes_busy) => (mutex_holder\/{mutex$0|->TASK_NULL})(mt) = TASK_NULL) & not(mutex$0: queues_msg) & mutexes\/{mutex$0}/\semaphores = {} & !que.(que: QUEUE & (not(que: queues) & not(que = mutex$0)) => not(que: mutexes) & not(que = mutex$0)) & !que.(que: QUEUE & (not(que: queues) & not(que = mutex$0)) => not(que: semaphores)) & mt: mutexes\/{mutex$0});
  ((queue_sending\/{mutex$0|->{}})(mt) = {});
  ("`Local hypotheses'" & mutex$0: QUEUE & not(mutex$0: queues) & queue_receiving\/{mutex$0|->{}}: QUEUE +-> POW(TASK) & queue_sending\/{mutex$0|->{}}: QUEUE +-> POW(TASK) & queues\/{mutex$0} = dom(queue_receiving\/{mutex$0|->{}}) & queues\/{mutex$0} = dom(queue_sending\/{mutex$0|->{}}) & first_receiving\/{mutex$0|->TASK_NULL}: QUEUE +-> TASK & first_sending\/{mutex$0|->TASK_NULL}: QUEUE +-> TASK & dom(first_receiving\/{mutex$0|->TASK_NULL}) = dom(queue_receiving\/{mutex$0|->{}}) & dom(first_sending\/{mutex$0|->TASK_NULL}) = dom(queue_sending\/{mutex$0|->{}}) & !q1.(q1: queues\/{mutex$0} & q1: dom(first_receiving\/{mutex$0|->TASK_NULL}) & not((queue_receiving\/{mutex$0|->{}})(q1) = {}) => (first_receiving\/{mutex$0|->TASK_NULL})(q1): (queue_receiving\/{mutex$0|->{}})(q1)) & !q1.(q1: queues\/{mutex$0} & q1: dom(first_sending\/{mutex$0|->TASK_NULL}) & not((queue_sending\/{mutex$0|->{}})(q1) = {}) => (first_sending\/{mutex$0|->TASK_NULL})(q1): (queue_sending\/{mutex$0|->{}})(q1)) & queues_msg: POW(queues\/{mutex$0}) & !(q1,q2,tk).(q1: queues\/{mutex$0} & q2: queues\/{mutex$0} & tk: TASK & tk: (queue_receiving\/{mutex$0|->{}})(q1) => not(tk: (queue_sending\/{mutex$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{mutex$0} & q2: queues\/{mutex$0} & tk: TASK & tk: (queue_sending\/{mutex$0|->{}})(q2) => not(tk: (queue_receiving\/{mutex$0|->{}})(q1))) & !(q1,q2,tk).(q1: queues\/{mutex$0} & q2: queues\/{mutex$0} & not(q1 = q2) & tk: TASK & tk: (queue_receiving\/{mutex$0|->{}})(q1) => not(tk: (queue_receiving\/{mutex$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{mutex$0} & q2: queues\/{mutex$0} & not(q1 = q2) & tk: TASK & tk: (queue_sending\/{mutex$0|->{}})(q1) => not(tk: (queue_sending\/{mutex$0|->{}})(q2))) & semaphores: POW(queues\/{mutex$0}) & mutex$0: queues\/{mutex$0} & mutexes: POW(queues\/{mutex$0}) & mutex_holder\/{mutex$0|->TASK_NULL}: QUEUE +-> TASK & mutexes\/{mutex$0} = dom(mutex_holder\/{mutex$0|->TASK_NULL}) & mutexes_busy: POW(mutexes\/{mutex$0}) & !mt.(mt: mutexes_busy => not((mutex_holder\/{mutex$0|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes\/{mutex$0} & not(mt: mutexes_busy) => (mutex_holder\/{mutex$0|->TASK_NULL})(mt) = TASK_NULL) & not(mutex$0: queues_msg) & mutexes\/{mutex$0}/\semaphores = {} & !que.(que: QUEUE & (not(que: queues) & not(que = mutex$0)) => not(que: mutexes) & not(que = mutex$0)) & !que.(que: QUEUE & (not(que: queues) & not(que = mutex$0)) => not(que: semaphores)) & active = TRUE);
  (not(idle: ran(mutex_holder\/{mutex$0|->TASK_NULL})));
  ("`Local hypotheses'" & mutex$0: QUEUE & not(mutex$0: queues) & queue_receiving\/{mutex$0|->{}}: QUEUE +-> POW(TASK) & queue_sending\/{mutex$0|->{}}: QUEUE +-> POW(TASK) & queues\/{mutex$0} = dom(queue_receiving\/{mutex$0|->{}}) & queues\/{mutex$0} = dom(queue_sending\/{mutex$0|->{}}) & first_receiving\/{mutex$0|->TASK_NULL}: QUEUE +-> TASK & first_sending\/{mutex$0|->TASK_NULL}: QUEUE +-> TASK & dom(first_receiving\/{mutex$0|->TASK_NULL}) = dom(queue_receiving\/{mutex$0|->{}}) & dom(first_sending\/{mutex$0|->TASK_NULL}) = dom(queue_sending\/{mutex$0|->{}}) & !q1.(q1: queues\/{mutex$0} & q1: dom(first_receiving\/{mutex$0|->TASK_NULL}) & not((queue_receiving\/{mutex$0|->{}})(q1) = {}) => (first_receiving\/{mutex$0|->TASK_NULL})(q1): (queue_receiving\/{mutex$0|->{}})(q1)) & !q1.(q1: queues\/{mutex$0} & q1: dom(first_sending\/{mutex$0|->TASK_NULL}) & not((queue_sending\/{mutex$0|->{}})(q1) = {}) => (first_sending\/{mutex$0|->TASK_NULL})(q1): (queue_sending\/{mutex$0|->{}})(q1)) & queues_msg: POW(queues\/{mutex$0}) & !(q1,q2,tk).(q1: queues\/{mutex$0} & q2: queues\/{mutex$0} & tk: TASK & tk: (queue_receiving\/{mutex$0|->{}})(q1) => not(tk: (queue_sending\/{mutex$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{mutex$0} & q2: queues\/{mutex$0} & tk: TASK & tk: (queue_sending\/{mutex$0|->{}})(q2) => not(tk: (queue_receiving\/{mutex$0|->{}})(q1))) & !(q1,q2,tk).(q1: queues\/{mutex$0} & q2: queues\/{mutex$0} & not(q1 = q2) & tk: TASK & tk: (queue_receiving\/{mutex$0|->{}})(q1) => not(tk: (queue_receiving\/{mutex$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{mutex$0} & q2: queues\/{mutex$0} & not(q1 = q2) & tk: TASK & tk: (queue_sending\/{mutex$0|->{}})(q1) => not(tk: (queue_sending\/{mutex$0|->{}})(q2))) & semaphores: POW(queues\/{mutex$0}) & mutex$0: queues\/{mutex$0} & mutexes: POW(queues\/{mutex$0}) & mutex_holder\/{mutex$0|->TASK_NULL}: QUEUE +-> TASK & mutexes\/{mutex$0} = dom(mutex_holder\/{mutex$0|->TASK_NULL}) & mutexes_busy: POW(mutexes\/{mutex$0}) & !mt.(mt: mutexes_busy => not((mutex_holder\/{mutex$0|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes\/{mutex$0} & not(mt: mutexes_busy) => (mutex_holder\/{mutex$0|->TASK_NULL})(mt) = TASK_NULL) & not(mutex$0: queues_msg) & mutexes\/{mutex$0}/\semaphores = {} & !que.(que: QUEUE & (not(que: queues) & not(que = mutex$0)) => not(que: mutexes) & not(que = mutex$0)) & !que.(que: QUEUE & (not(que: queues) & not(que = mutex$0)) => not(que: semaphores)) & active = TRUE & mt: mutexes_busy);
  ((mutex_holder\/{mutex$0|->TASK_NULL})(mt): tasks);
  ("`Local hypotheses'" & mutex$0: QUEUE & not(mutex$0: queues) & queue_receiving\/{mutex$0|->{}}: QUEUE +-> POW(TASK) & queue_sending\/{mutex$0|->{}}: QUEUE +-> POW(TASK) & queues\/{mutex$0} = dom(queue_receiving\/{mutex$0|->{}}) & queues\/{mutex$0} = dom(queue_sending\/{mutex$0|->{}}) & first_receiving\/{mutex$0|->TASK_NULL}: QUEUE +-> TASK & first_sending\/{mutex$0|->TASK_NULL}: QUEUE +-> TASK & dom(first_receiving\/{mutex$0|->TASK_NULL}) = dom(queue_receiving\/{mutex$0|->{}}) & dom(first_sending\/{mutex$0|->TASK_NULL}) = dom(queue_sending\/{mutex$0|->{}}) & !q1.(q1: queues\/{mutex$0} & q1: dom(first_receiving\/{mutex$0|->TASK_NULL}) & not((queue_receiving\/{mutex$0|->{}})(q1) = {}) => (first_receiving\/{mutex$0|->TASK_NULL})(q1): (queue_receiving\/{mutex$0|->{}})(q1)) & !q1.(q1: queues\/{mutex$0} & q1: dom(first_sending\/{mutex$0|->TASK_NULL}) & not((queue_sending\/{mutex$0|->{}})(q1) = {}) => (first_sending\/{mutex$0|->TASK_NULL})(q1): (queue_sending\/{mutex$0|->{}})(q1)) & queues_msg: POW(queues\/{mutex$0}) & !(q1,q2,tk).(q1: queues\/{mutex$0} & q2: queues\/{mutex$0} & tk: TASK & tk: (queue_receiving\/{mutex$0|->{}})(q1) => not(tk: (queue_sending\/{mutex$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{mutex$0} & q2: queues\/{mutex$0} & tk: TASK & tk: (queue_sending\/{mutex$0|->{}})(q2) => not(tk: (queue_receiving\/{mutex$0|->{}})(q1))) & !(q1,q2,tk).(q1: queues\/{mutex$0} & q2: queues\/{mutex$0} & not(q1 = q2) & tk: TASK & tk: (queue_receiving\/{mutex$0|->{}})(q1) => not(tk: (queue_receiving\/{mutex$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{mutex$0} & q2: queues\/{mutex$0} & not(q1 = q2) & tk: TASK & tk: (queue_sending\/{mutex$0|->{}})(q1) => not(tk: (queue_sending\/{mutex$0|->{}})(q2))) & semaphores: POW(queues\/{mutex$0}) & mutex$0: queues\/{mutex$0} & mutexes: POW(queues\/{mutex$0}) & mutex_holder\/{mutex$0|->TASK_NULL}: QUEUE +-> TASK & mutexes\/{mutex$0} = dom(mutex_holder\/{mutex$0|->TASK_NULL}) & mutexes_busy: POW(mutexes\/{mutex$0}) & !mt.(mt: mutexes_busy => not((mutex_holder\/{mutex$0|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes\/{mutex$0} & not(mt: mutexes_busy) => (mutex_holder\/{mutex$0|->TASK_NULL})(mt) = TASK_NULL) & not(mutex$0: queues_msg) & mutexes\/{mutex$0}/\semaphores = {} & !que.(que: QUEUE & (not(que: queues) & not(que = mutex$0)) => not(que: mutexes) & not(que = mutex$0)) & !que.(que: QUEUE & (not(que: queues) & not(que = mutex$0)) => not(que: semaphores)) & active = TRUE & mt: mutexes\/{mutex$0} & not(mt: mutexes_busy));
  (not((mutex_holder\/{mutex$0|->TASK_NULL})(mt): tasks));
  ("`takeMutex preconditions in this component'" & mutex: mutexes & xTicksToWait: TICK & active = TRUE & not(running = idle));
  ("`Local hypotheses'" & mutex: mutexes_busy);
  (mutex_holder(mutex): tasks);
  (not(mutex_holder(mutex) = idle));
  (mutex: queues);
  ("`Local hypotheses'" & mutex: mutexes_busy & q1: queues);
  ("`Local hypotheses'" & mutex: mutexes_busy & queue_receiving(mutex) = {} & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & blocked\/{running}: FIN(TASK) & running: tasks & unblocked: POW(blocked\/{running}) & n_runable: FIN(TASK) & not(running: n_runable) & n_runable/\blocked = {} & blocked\/{running}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/(blocked\/{running})\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->(queue_receiving(mutex)\/{running})}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->(queue_receiving(mutex)\/{running})}) & first_receiving<+{mutex|->running}: QUEUE +-> TASK & dom(first_receiving<+{mutex|->running}) = dom(queue_receiving<+{mutex|->(queue_receiving(mutex)\/{running})}) & !q1.(q1: queues & q1: dom(first_receiving<+{mutex|->running}) & not((queue_receiving<+{mutex|->(queue_receiving(mutex)\/{running})})(q1) = {}) => (first_receiving<+{mutex|->running})(q1): (queue_receiving<+{mutex|->(queue_receiving(mutex)\/{running})})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->(queue_receiving(mutex)\/{running})})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->(queue_receiving(mutex)\/{running})})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->(queue_receiving(mutex)\/{running})})(q1) => not(tk: (queue_receiving<+{mutex|->(queue_receiving(mutex)\/{running})})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked) & not(running$0 = running)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ((queue_receiving<+{mutex|->(queue_receiving(mutex)\/{running})})(que): POW(blocked\/{running}\/suspended));
  ("`Local hypotheses'" & mutex: mutexes_busy & not(queue_receiving(mutex) = {}) & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & blocked\/{running}: FIN(TASK) & running: tasks & unblocked: POW(blocked\/{running}) & n_runable: FIN(TASK) & not(running: n_runable) & n_runable/\blocked = {} & blocked\/{running}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/(blocked\/{running})\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->(queue_receiving(mutex)\/{running})}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->(queue_receiving(mutex)\/{running})}) & dom(first_receiving) = dom(queue_receiving<+{mutex|->(queue_receiving(mutex)\/{running})}) & !q1.(q1: queues & q1: dom(first_receiving) & not((queue_receiving<+{mutex|->(queue_receiving(mutex)\/{running})})(q1) = {}) => first_receiving(q1): (queue_receiving<+{mutex|->(queue_receiving(mutex)\/{running})})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->(queue_receiving(mutex)\/{running})})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->(queue_receiving(mutex)\/{running})})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->(queue_receiving(mutex)\/{running})})(q1) => not(tk: (queue_receiving<+{mutex|->(queue_receiving(mutex)\/{running})})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked) & not(running$0 = running)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(mutex: mutexes_busy));
  (not(running = TASK_NULL));
  ("`Local hypotheses'" & not(mutex: mutexes_busy) & mutex_holder<+{mutex|->running}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->running}) & !mt.(mt: mutexes_busy\/{mutex} => not((mutex_holder<+{mutex|->running})(mt) = TASK_NULL)) & !mt.(mt: mutexes & (not(mt: mutexes_busy) & not(mt = mutex)) => (mutex_holder<+{mutex|->running})(mt) = TASK_NULL));
  (ran(mutex_holder<+{mutex|->running}): POW(tasks\/{TASK_NULL}));
  (not(idle: ran(mutex_holder<+{mutex|->running})));
  ("`Local hypotheses'" & not(mutex: mutexes_busy) & mutex_holder<+{mutex|->running}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->running}) & !mt.(mt: mutexes_busy\/{mutex} => not((mutex_holder<+{mutex|->running})(mt) = TASK_NULL)) & !mt.(mt: mutexes & (not(mt: mutexes_busy) & not(mt = mutex)) => (mutex_holder<+{mutex|->running})(mt) = TASK_NULL) & mt: mutexes_busy\/{mutex});
  ((mutex_holder<+{mutex|->running})(mt): tasks);
  ("`Local hypotheses'" & not(mutex: mutexes_busy) & mutex_holder<+{mutex|->running}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->running}) & !mt.(mt: mutexes_busy\/{mutex} => not((mutex_holder<+{mutex|->running})(mt) = TASK_NULL)) & !mt.(mt: mutexes & (not(mt: mutexes_busy) & not(mt = mutex)) => (mutex_holder<+{mutex|->running})(mt) = TASK_NULL) & mt: mutexes & not(mt: mutexes_busy) & not(mt = mutex));
  (not((mutex_holder<+{mutex|->running})(mt): tasks));
  ("`giveMutex preconditions in this component'" & mutex: mutexes & mutex: mutexes_busy & mutex_holder(mutex) = running & xTicksToWait: TICK & active = TRUE);
  ("`Local hypotheses'" & n_receiving: POW(TASK) & n_receiving = queue_receiving(mutex)-{first_receiving(mutex)} & n_first: TASK & n_first: n_receiving & not(queue_receiving(mutex) = {}));
  (first_receiving(mutex): TASK);
  (first_receiving(mutex): tasks);
  (first_receiving(mutex): blocked\/suspended);
  (not(running = idle));
  ("`Local hypotheses'" & n_receiving: POW(TASK) & n_receiving = queue_receiving(mutex)-{first_receiving(mutex)} & n_first: TASK & n_first: n_receiving & not(queue_receiving(mutex) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(mutex)} & running$0: n_runable & first_receiving(mutex): suspended & first_receiving(mutex): blocked & first_receiving(mutex): unblocked & blocked-{first_receiving(mutex)}: FIN(TASK) & blocked-{first_receiving(mutex)}: POW(tasks) & unblocked-{first_receiving(mutex)}: FIN(TASK) & unblocked-{first_receiving(mutex)}: POW(blocked-{first_receiving(mutex)}) & n_runable: FIN(TASK) & suspended-{first_receiving(mutex)}: FIN(TASK) & suspended-{first_receiving(mutex)}: POW(tasks) & n_runable/\blocked-{first_receiving(mutex)} = {} & blocked-{first_receiving(mutex)}/\suspended-{first_receiving(mutex)} = {} & suspended-{first_receiving(mutex)}/\n_runable = {} & tasks = suspended-{first_receiving(mutex)}\/blocked-{first_receiving(mutex)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->n_receiving}) & first_receiving<+{mutex|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{mutex|->n_first}) = dom(queue_receiving<+{mutex|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{mutex|->n_first}) & not((queue_receiving<+{mutex|->n_receiving})(q1) = {}) => (first_receiving<+{mutex|->n_first})(q1): (queue_receiving<+{mutex|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running$0: suspended & not(running$0 = first_receiving(mutex)))) & (active = TRUE => not(running$0: blocked & not(running$0 = first_receiving(mutex)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(mutex)))) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(mutex)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  (queue_sending(que): POW(blocked-{first_receiving(mutex)}\/suspended-{first_receiving(mutex)}));
  ((queue_receiving<+{mutex|->n_receiving})(que): POW(blocked-{first_receiving(mutex)}\/suspended-{first_receiving(mutex)}));
  ("`Local hypotheses'" & n_receiving: POW(TASK) & n_receiving = queue_receiving(mutex)-{first_receiving(mutex)} & n_first: TASK & n_first: n_receiving & not(queue_receiving(mutex) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(mutex)} & running$0: n_runable & first_receiving(mutex): suspended & first_receiving(mutex): blocked & first_receiving(mutex): unblocked & blocked-{first_receiving(mutex)}: FIN(TASK) & blocked-{first_receiving(mutex)}: POW(tasks) & unblocked-{first_receiving(mutex)}: FIN(TASK) & unblocked-{first_receiving(mutex)}: POW(blocked-{first_receiving(mutex)}) & n_runable: FIN(TASK) & suspended-{first_receiving(mutex)}: FIN(TASK) & suspended-{first_receiving(mutex)}: POW(tasks) & n_runable/\blocked-{first_receiving(mutex)} = {} & blocked-{first_receiving(mutex)}/\suspended-{first_receiving(mutex)} = {} & suspended-{first_receiving(mutex)}/\n_runable = {} & tasks = suspended-{first_receiving(mutex)}\/blocked-{first_receiving(mutex)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->n_receiving}) & first_receiving<+{mutex|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{mutex|->n_first}) = dom(queue_receiving<+{mutex|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{mutex|->n_first}) & not((queue_receiving<+{mutex|->n_receiving})(q1) = {}) => (first_receiving<+{mutex|->n_first})(q1): (queue_receiving<+{mutex|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running$0: suspended & not(running$0 = first_receiving(mutex)))) & (active = TRUE => not(running$0: blocked & not(running$0 = first_receiving(mutex)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(mutex)))) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(mutex)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  (ran(mutex_holder<+{mutex|->TASK_NULL}): POW(tasks\/{TASK_NULL}));
  (not(idle: ran(mutex_holder<+{mutex|->TASK_NULL})));
  ("`Local hypotheses'" & n_receiving: POW(TASK) & n_receiving = queue_receiving(mutex)-{first_receiving(mutex)} & n_first: TASK & n_first: n_receiving & not(queue_receiving(mutex) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(mutex)} & running$0: n_runable & first_receiving(mutex): suspended & first_receiving(mutex): blocked & first_receiving(mutex): unblocked & blocked-{first_receiving(mutex)}: FIN(TASK) & blocked-{first_receiving(mutex)}: POW(tasks) & unblocked-{first_receiving(mutex)}: FIN(TASK) & unblocked-{first_receiving(mutex)}: POW(blocked-{first_receiving(mutex)}) & n_runable: FIN(TASK) & suspended-{first_receiving(mutex)}: FIN(TASK) & suspended-{first_receiving(mutex)}: POW(tasks) & n_runable/\blocked-{first_receiving(mutex)} = {} & blocked-{first_receiving(mutex)}/\suspended-{first_receiving(mutex)} = {} & suspended-{first_receiving(mutex)}/\n_runable = {} & tasks = suspended-{first_receiving(mutex)}\/blocked-{first_receiving(mutex)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->n_receiving}) & first_receiving<+{mutex|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{mutex|->n_first}) = dom(queue_receiving<+{mutex|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{mutex|->n_first}) & not((queue_receiving<+{mutex|->n_receiving})(q1) = {}) => (first_receiving<+{mutex|->n_first})(q1): (queue_receiving<+{mutex|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running$0: suspended & not(running$0 = first_receiving(mutex)))) & (active = TRUE => not(running$0: blocked & not(running$0 = first_receiving(mutex)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(mutex)))) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(mutex)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes_busy & not(mt = mutex));
  ((mutex_holder<+{mutex|->TASK_NULL})(mt): tasks);
  ("`Local hypotheses'" & n_receiving: POW(TASK) & n_receiving = queue_receiving(mutex)-{first_receiving(mutex)} & n_first: TASK & n_first: n_receiving & not(queue_receiving(mutex) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(mutex)} & running$0: n_runable & first_receiving(mutex): suspended & first_receiving(mutex): blocked & first_receiving(mutex): unblocked & blocked-{first_receiving(mutex)}: FIN(TASK) & blocked-{first_receiving(mutex)}: POW(tasks) & unblocked-{first_receiving(mutex)}: FIN(TASK) & unblocked-{first_receiving(mutex)}: POW(blocked-{first_receiving(mutex)}) & n_runable: FIN(TASK) & suspended-{first_receiving(mutex)}: FIN(TASK) & suspended-{first_receiving(mutex)}: POW(tasks) & n_runable/\blocked-{first_receiving(mutex)} = {} & blocked-{first_receiving(mutex)}/\suspended-{first_receiving(mutex)} = {} & suspended-{first_receiving(mutex)}/\n_runable = {} & tasks = suspended-{first_receiving(mutex)}\/blocked-{first_receiving(mutex)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->n_receiving}) & first_receiving<+{mutex|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{mutex|->n_first}) = dom(queue_receiving<+{mutex|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{mutex|->n_first}) & not((queue_receiving<+{mutex|->n_receiving})(q1) = {}) => (first_receiving<+{mutex|->n_first})(q1): (queue_receiving<+{mutex|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running$0: suspended & not(running$0 = first_receiving(mutex)))) & (active = TRUE => not(running$0: blocked & not(running$0 = first_receiving(mutex)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(mutex)))) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(mutex)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)));
  (not((mutex_holder<+{mutex|->TASK_NULL})(mt): tasks));
  ("`Local hypotheses'" & n_receiving: POW(TASK) & n_receiving = queue_receiving(mutex)-{first_receiving(mutex)} & n_first: TASK & n_first: n_receiving & not(queue_receiving(mutex) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(mutex)} & running$0: n_runable & first_receiving(mutex): suspended & first_receiving(mutex): blocked & not(first_receiving(mutex): unblocked) & blocked-{first_receiving(mutex)}: FIN(TASK) & blocked-{first_receiving(mutex)}: POW(tasks) & unblocked: POW(blocked-{first_receiving(mutex)}) & n_runable: FIN(TASK) & suspended-{first_receiving(mutex)}: FIN(TASK) & suspended-{first_receiving(mutex)}: POW(tasks) & n_runable/\blocked-{first_receiving(mutex)} = {} & blocked-{first_receiving(mutex)}/\suspended-{first_receiving(mutex)} = {} & suspended-{first_receiving(mutex)}/\n_runable = {} & tasks = suspended-{first_receiving(mutex)}\/blocked-{first_receiving(mutex)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->n_receiving}) & first_receiving<+{mutex|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{mutex|->n_first}) = dom(queue_receiving<+{mutex|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{mutex|->n_first}) & not((queue_receiving<+{mutex|->n_receiving})(q1) = {}) => (first_receiving<+{mutex|->n_first})(q1): (queue_receiving<+{mutex|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running$0: suspended & not(running$0 = first_receiving(mutex)))) & (active = TRUE => not(running$0: blocked & not(running$0 = first_receiving(mutex)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(mutex)))) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(mutex)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & n_receiving: POW(TASK) & n_receiving = queue_receiving(mutex)-{first_receiving(mutex)} & n_first: TASK & n_first: n_receiving & not(queue_receiving(mutex) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(mutex)} & running$0: n_runable & first_receiving(mutex): suspended & first_receiving(mutex): blocked & not(first_receiving(mutex): unblocked) & blocked-{first_receiving(mutex)}: FIN(TASK) & blocked-{first_receiving(mutex)}: POW(tasks) & unblocked: POW(blocked-{first_receiving(mutex)}) & n_runable: FIN(TASK) & suspended-{first_receiving(mutex)}: FIN(TASK) & suspended-{first_receiving(mutex)}: POW(tasks) & n_runable/\blocked-{first_receiving(mutex)} = {} & blocked-{first_receiving(mutex)}/\suspended-{first_receiving(mutex)} = {} & suspended-{first_receiving(mutex)}/\n_runable = {} & tasks = suspended-{first_receiving(mutex)}\/blocked-{first_receiving(mutex)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->n_receiving}) & first_receiving<+{mutex|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{mutex|->n_first}) = dom(queue_receiving<+{mutex|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{mutex|->n_first}) & not((queue_receiving<+{mutex|->n_receiving})(q1) = {}) => (first_receiving<+{mutex|->n_first})(q1): (queue_receiving<+{mutex|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running$0: suspended & not(running$0 = first_receiving(mutex)))) & (active = TRUE => not(running$0: blocked & not(running$0 = first_receiving(mutex)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(mutex)))) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(mutex)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & n_receiving: POW(TASK) & n_receiving = queue_receiving(mutex)-{first_receiving(mutex)} & n_first: TASK & n_first: n_receiving & not(queue_receiving(mutex) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(mutex)} & running$0: n_runable & first_receiving(mutex): suspended & first_receiving(mutex): blocked & not(first_receiving(mutex): unblocked) & blocked-{first_receiving(mutex)}: FIN(TASK) & blocked-{first_receiving(mutex)}: POW(tasks) & unblocked: POW(blocked-{first_receiving(mutex)}) & n_runable: FIN(TASK) & suspended-{first_receiving(mutex)}: FIN(TASK) & suspended-{first_receiving(mutex)}: POW(tasks) & n_runable/\blocked-{first_receiving(mutex)} = {} & blocked-{first_receiving(mutex)}/\suspended-{first_receiving(mutex)} = {} & suspended-{first_receiving(mutex)}/\n_runable = {} & tasks = suspended-{first_receiving(mutex)}\/blocked-{first_receiving(mutex)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->n_receiving}) & first_receiving<+{mutex|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{mutex|->n_first}) = dom(queue_receiving<+{mutex|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{mutex|->n_first}) & not((queue_receiving<+{mutex|->n_receiving})(q1) = {}) => (first_receiving<+{mutex|->n_first})(q1): (queue_receiving<+{mutex|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running$0: suspended & not(running$0 = first_receiving(mutex)))) & (active = TRUE => not(running$0: blocked & not(running$0 = first_receiving(mutex)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(mutex)))) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(mutex)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes_busy & not(mt = mutex));
  ("`Local hypotheses'" & n_receiving: POW(TASK) & n_receiving = queue_receiving(mutex)-{first_receiving(mutex)} & n_first: TASK & n_first: n_receiving & not(queue_receiving(mutex) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(mutex)} & running$0: n_runable & first_receiving(mutex): suspended & first_receiving(mutex): blocked & not(first_receiving(mutex): unblocked) & blocked-{first_receiving(mutex)}: FIN(TASK) & blocked-{first_receiving(mutex)}: POW(tasks) & unblocked: POW(blocked-{first_receiving(mutex)}) & n_runable: FIN(TASK) & suspended-{first_receiving(mutex)}: FIN(TASK) & suspended-{first_receiving(mutex)}: POW(tasks) & n_runable/\blocked-{first_receiving(mutex)} = {} & blocked-{first_receiving(mutex)}/\suspended-{first_receiving(mutex)} = {} & suspended-{first_receiving(mutex)}/\n_runable = {} & tasks = suspended-{first_receiving(mutex)}\/blocked-{first_receiving(mutex)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->n_receiving}) & first_receiving<+{mutex|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{mutex|->n_first}) = dom(queue_receiving<+{mutex|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{mutex|->n_first}) & not((queue_receiving<+{mutex|->n_receiving})(q1) = {}) => (first_receiving<+{mutex|->n_first})(q1): (queue_receiving<+{mutex|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running$0: suspended & not(running$0 = first_receiving(mutex)))) & (active = TRUE => not(running$0: blocked & not(running$0 = first_receiving(mutex)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(mutex)))) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(mutex)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)));
  ("`Local hypotheses'" & n_receiving: POW(TASK) & n_receiving = queue_receiving(mutex)-{first_receiving(mutex)} & n_first: TASK & n_first: n_receiving & not(queue_receiving(mutex) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(mutex)} & running$0: n_runable & first_receiving(mutex): suspended & not(first_receiving(mutex): blocked) & n_runable: FIN(TASK) & suspended-{first_receiving(mutex)}: FIN(TASK) & suspended-{first_receiving(mutex)}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{first_receiving(mutex)} = {} & suspended-{first_receiving(mutex)}/\n_runable = {} & tasks = suspended-{first_receiving(mutex)}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->n_receiving}) & first_receiving<+{mutex|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{mutex|->n_first}) = dom(queue_receiving<+{mutex|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{mutex|->n_first}) & not((queue_receiving<+{mutex|->n_receiving})(q1) = {}) => (first_receiving<+{mutex|->n_first})(q1): (queue_receiving<+{mutex|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running$0: suspended & not(running$0 = first_receiving(mutex)))) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(mutex)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  (queue_sending(que): POW(blocked\/suspended-{first_receiving(mutex)}));
  ((queue_receiving<+{mutex|->n_receiving})(que): POW(blocked\/suspended-{first_receiving(mutex)}));
  ("`Local hypotheses'" & n_receiving: POW(TASK) & n_receiving = queue_receiving(mutex)-{first_receiving(mutex)} & n_first: TASK & n_first: n_receiving & not(queue_receiving(mutex) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(mutex)} & running$0: n_runable & first_receiving(mutex): suspended & not(first_receiving(mutex): blocked) & n_runable: FIN(TASK) & suspended-{first_receiving(mutex)}: FIN(TASK) & suspended-{first_receiving(mutex)}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{first_receiving(mutex)} = {} & suspended-{first_receiving(mutex)}/\n_runable = {} & tasks = suspended-{first_receiving(mutex)}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->n_receiving}) & first_receiving<+{mutex|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{mutex|->n_first}) = dom(queue_receiving<+{mutex|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{mutex|->n_first}) & not((queue_receiving<+{mutex|->n_receiving})(q1) = {}) => (first_receiving<+{mutex|->n_first})(q1): (queue_receiving<+{mutex|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running$0: suspended & not(running$0 = first_receiving(mutex)))) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(mutex)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & n_receiving: POW(TASK) & n_receiving = queue_receiving(mutex)-{first_receiving(mutex)} & n_first: TASK & n_first: n_receiving & not(queue_receiving(mutex) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(mutex)} & running$0: n_runable & first_receiving(mutex): suspended & not(first_receiving(mutex): blocked) & n_runable: FIN(TASK) & suspended-{first_receiving(mutex)}: FIN(TASK) & suspended-{first_receiving(mutex)}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{first_receiving(mutex)} = {} & suspended-{first_receiving(mutex)}/\n_runable = {} & tasks = suspended-{first_receiving(mutex)}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->n_receiving}) & first_receiving<+{mutex|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{mutex|->n_first}) = dom(queue_receiving<+{mutex|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{mutex|->n_first}) & not((queue_receiving<+{mutex|->n_receiving})(q1) = {}) => (first_receiving<+{mutex|->n_first})(q1): (queue_receiving<+{mutex|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running$0: suspended & not(running$0 = first_receiving(mutex)))) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(mutex)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes_busy & not(mt = mutex));
  ("`Local hypotheses'" & n_receiving: POW(TASK) & n_receiving = queue_receiving(mutex)-{first_receiving(mutex)} & n_first: TASK & n_first: n_receiving & not(queue_receiving(mutex) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(mutex)} & running$0: n_runable & first_receiving(mutex): suspended & not(first_receiving(mutex): blocked) & n_runable: FIN(TASK) & suspended-{first_receiving(mutex)}: FIN(TASK) & suspended-{first_receiving(mutex)}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{first_receiving(mutex)} = {} & suspended-{first_receiving(mutex)}/\n_runable = {} & tasks = suspended-{first_receiving(mutex)}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->n_receiving}) & first_receiving<+{mutex|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{mutex|->n_first}) = dom(queue_receiving<+{mutex|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{mutex|->n_first}) & not((queue_receiving<+{mutex|->n_receiving})(q1) = {}) => (first_receiving<+{mutex|->n_first})(q1): (queue_receiving<+{mutex|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running$0: suspended & not(running$0 = first_receiving(mutex)))) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(mutex)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)));
  ("`Local hypotheses'" & n_receiving: POW(TASK) & n_receiving = queue_receiving(mutex)-{first_receiving(mutex)} & n_first: TASK & n_first: n_receiving & not(queue_receiving(mutex) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(mutex)} & running$0: n_runable & not(first_receiving(mutex): suspended) & first_receiving(mutex): blocked & first_receiving(mutex): unblocked & blocked-{first_receiving(mutex)}: FIN(TASK) & blocked-{first_receiving(mutex)}: POW(tasks) & unblocked-{first_receiving(mutex)}: FIN(TASK) & unblocked-{first_receiving(mutex)}: POW(blocked-{first_receiving(mutex)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_receiving(mutex)} = {} & blocked-{first_receiving(mutex)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_receiving(mutex)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->n_receiving}) & first_receiving<+{mutex|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{mutex|->n_first}) = dom(queue_receiving<+{mutex|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{mutex|->n_first}) & not((queue_receiving<+{mutex|->n_receiving})(q1) = {}) => (first_receiving<+{mutex|->n_first})(q1): (queue_receiving<+{mutex|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = first_receiving(mutex)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(mutex)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  (queue_sending(que): POW(blocked-{first_receiving(mutex)}\/suspended));
  ((queue_receiving<+{mutex|->n_receiving})(que): POW(blocked-{first_receiving(mutex)}\/suspended));
  ("`Local hypotheses'" & n_receiving: POW(TASK) & n_receiving = queue_receiving(mutex)-{first_receiving(mutex)} & n_first: TASK & n_first: n_receiving & not(queue_receiving(mutex) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(mutex)} & running$0: n_runable & not(first_receiving(mutex): suspended) & first_receiving(mutex): blocked & first_receiving(mutex): unblocked & blocked-{first_receiving(mutex)}: FIN(TASK) & blocked-{first_receiving(mutex)}: POW(tasks) & unblocked-{first_receiving(mutex)}: FIN(TASK) & unblocked-{first_receiving(mutex)}: POW(blocked-{first_receiving(mutex)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_receiving(mutex)} = {} & blocked-{first_receiving(mutex)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_receiving(mutex)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->n_receiving}) & first_receiving<+{mutex|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{mutex|->n_first}) = dom(queue_receiving<+{mutex|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{mutex|->n_first}) & not((queue_receiving<+{mutex|->n_receiving})(q1) = {}) => (first_receiving<+{mutex|->n_first})(q1): (queue_receiving<+{mutex|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = first_receiving(mutex)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(mutex)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & n_receiving: POW(TASK) & n_receiving = queue_receiving(mutex)-{first_receiving(mutex)} & n_first: TASK & n_first: n_receiving & not(queue_receiving(mutex) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(mutex)} & running$0: n_runable & not(first_receiving(mutex): suspended) & first_receiving(mutex): blocked & first_receiving(mutex): unblocked & blocked-{first_receiving(mutex)}: FIN(TASK) & blocked-{first_receiving(mutex)}: POW(tasks) & unblocked-{first_receiving(mutex)}: FIN(TASK) & unblocked-{first_receiving(mutex)}: POW(blocked-{first_receiving(mutex)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_receiving(mutex)} = {} & blocked-{first_receiving(mutex)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_receiving(mutex)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->n_receiving}) & first_receiving<+{mutex|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{mutex|->n_first}) = dom(queue_receiving<+{mutex|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{mutex|->n_first}) & not((queue_receiving<+{mutex|->n_receiving})(q1) = {}) => (first_receiving<+{mutex|->n_first})(q1): (queue_receiving<+{mutex|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = first_receiving(mutex)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(mutex)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes_busy & not(mt = mutex));
  ("`Local hypotheses'" & n_receiving: POW(TASK) & n_receiving = queue_receiving(mutex)-{first_receiving(mutex)} & n_first: TASK & n_first: n_receiving & not(queue_receiving(mutex) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(mutex)} & running$0: n_runable & not(first_receiving(mutex): suspended) & first_receiving(mutex): blocked & first_receiving(mutex): unblocked & blocked-{first_receiving(mutex)}: FIN(TASK) & blocked-{first_receiving(mutex)}: POW(tasks) & unblocked-{first_receiving(mutex)}: FIN(TASK) & unblocked-{first_receiving(mutex)}: POW(blocked-{first_receiving(mutex)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_receiving(mutex)} = {} & blocked-{first_receiving(mutex)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_receiving(mutex)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->n_receiving}) & first_receiving<+{mutex|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{mutex|->n_first}) = dom(queue_receiving<+{mutex|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{mutex|->n_first}) & not((queue_receiving<+{mutex|->n_receiving})(q1) = {}) => (first_receiving<+{mutex|->n_first})(q1): (queue_receiving<+{mutex|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = first_receiving(mutex)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(mutex)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)));
  ("`Local hypotheses'" & n_receiving: POW(TASK) & n_receiving = queue_receiving(mutex)-{first_receiving(mutex)} & n_first: TASK & n_first: n_receiving & not(queue_receiving(mutex) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(mutex)} & running$0: n_runable & not(first_receiving(mutex): suspended) & first_receiving(mutex): blocked & not(first_receiving(mutex): unblocked) & blocked-{first_receiving(mutex)}: FIN(TASK) & blocked-{first_receiving(mutex)}: POW(tasks) & unblocked: POW(blocked-{first_receiving(mutex)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_receiving(mutex)} = {} & blocked-{first_receiving(mutex)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_receiving(mutex)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->n_receiving}) & first_receiving<+{mutex|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{mutex|->n_first}) = dom(queue_receiving<+{mutex|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{mutex|->n_first}) & not((queue_receiving<+{mutex|->n_receiving})(q1) = {}) => (first_receiving<+{mutex|->n_first})(q1): (queue_receiving<+{mutex|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = first_receiving(mutex)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(mutex)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & n_receiving: POW(TASK) & n_receiving = queue_receiving(mutex)-{first_receiving(mutex)} & n_first: TASK & n_first: n_receiving & not(queue_receiving(mutex) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(mutex)} & running$0: n_runable & not(first_receiving(mutex): suspended) & first_receiving(mutex): blocked & not(first_receiving(mutex): unblocked) & blocked-{first_receiving(mutex)}: FIN(TASK) & blocked-{first_receiving(mutex)}: POW(tasks) & unblocked: POW(blocked-{first_receiving(mutex)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_receiving(mutex)} = {} & blocked-{first_receiving(mutex)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_receiving(mutex)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->n_receiving}) & first_receiving<+{mutex|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{mutex|->n_first}) = dom(queue_receiving<+{mutex|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{mutex|->n_first}) & not((queue_receiving<+{mutex|->n_receiving})(q1) = {}) => (first_receiving<+{mutex|->n_first})(q1): (queue_receiving<+{mutex|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = first_receiving(mutex)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(mutex)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & n_receiving: POW(TASK) & n_receiving = queue_receiving(mutex)-{first_receiving(mutex)} & n_first: TASK & n_first: n_receiving & not(queue_receiving(mutex) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(mutex)} & running$0: n_runable & not(first_receiving(mutex): suspended) & first_receiving(mutex): blocked & not(first_receiving(mutex): unblocked) & blocked-{first_receiving(mutex)}: FIN(TASK) & blocked-{first_receiving(mutex)}: POW(tasks) & unblocked: POW(blocked-{first_receiving(mutex)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_receiving(mutex)} = {} & blocked-{first_receiving(mutex)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_receiving(mutex)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->n_receiving}) & first_receiving<+{mutex|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{mutex|->n_first}) = dom(queue_receiving<+{mutex|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{mutex|->n_first}) & not((queue_receiving<+{mutex|->n_receiving})(q1) = {}) => (first_receiving<+{mutex|->n_first})(q1): (queue_receiving<+{mutex|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = first_receiving(mutex)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(mutex)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes_busy & not(mt = mutex));
  ("`Local hypotheses'" & n_receiving: POW(TASK) & n_receiving = queue_receiving(mutex)-{first_receiving(mutex)} & n_first: TASK & n_first: n_receiving & not(queue_receiving(mutex) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(mutex)} & running$0: n_runable & not(first_receiving(mutex): suspended) & first_receiving(mutex): blocked & not(first_receiving(mutex): unblocked) & blocked-{first_receiving(mutex)}: FIN(TASK) & blocked-{first_receiving(mutex)}: POW(tasks) & unblocked: POW(blocked-{first_receiving(mutex)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_receiving(mutex)} = {} & blocked-{first_receiving(mutex)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_receiving(mutex)}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->n_receiving}) & first_receiving<+{mutex|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{mutex|->n_first}) = dom(queue_receiving<+{mutex|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{mutex|->n_first}) & not((queue_receiving<+{mutex|->n_receiving})(q1) = {}) => (first_receiving<+{mutex|->n_first})(q1): (queue_receiving<+{mutex|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = first_receiving(mutex)))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(mutex)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)));
  ("`Local hypotheses'" & n_receiving: POW(TASK) & n_receiving = queue_receiving(mutex)-{first_receiving(mutex)} & n_first: TASK & n_first: n_receiving & not(queue_receiving(mutex) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(mutex)} & running$0: n_runable & not(first_receiving(mutex): suspended) & not(first_receiving(mutex): blocked) & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->n_receiving}) & first_receiving<+{mutex|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{mutex|->n_first}) = dom(queue_receiving<+{mutex|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{mutex|->n_first}) & not((queue_receiving<+{mutex|->n_receiving})(q1) = {}) => (first_receiving<+{mutex|->n_first})(q1): (queue_receiving<+{mutex|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ((queue_receiving<+{mutex|->n_receiving})(que): POW(blocked\/suspended));
  ("`Local hypotheses'" & n_receiving: POW(TASK) & n_receiving = queue_receiving(mutex)-{first_receiving(mutex)} & n_first: TASK & n_first: n_receiving & not(queue_receiving(mutex) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(mutex)} & running$0: n_runable & not(first_receiving(mutex): suspended) & not(first_receiving(mutex): blocked) & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->n_receiving}) & first_receiving<+{mutex|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{mutex|->n_first}) = dom(queue_receiving<+{mutex|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{mutex|->n_first}) & not((queue_receiving<+{mutex|->n_receiving})(q1) = {}) => (first_receiving<+{mutex|->n_first})(q1): (queue_receiving<+{mutex|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & n_receiving: POW(TASK) & n_receiving = queue_receiving(mutex)-{first_receiving(mutex)} & n_first: TASK & n_first: n_receiving & not(queue_receiving(mutex) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(mutex)} & running$0: n_runable & not(first_receiving(mutex): suspended) & not(first_receiving(mutex): blocked) & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->n_receiving}) & first_receiving<+{mutex|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{mutex|->n_first}) = dom(queue_receiving<+{mutex|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{mutex|->n_first}) & not((queue_receiving<+{mutex|->n_receiving})(q1) = {}) => (first_receiving<+{mutex|->n_first})(q1): (queue_receiving<+{mutex|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes_busy & not(mt = mutex));
  ("`Local hypotheses'" & n_receiving: POW(TASK) & n_receiving = queue_receiving(mutex)-{first_receiving(mutex)} & n_first: TASK & n_first: n_receiving & not(queue_receiving(mutex) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(mutex)} & running$0: n_runable & not(first_receiving(mutex): suspended) & not(first_receiving(mutex): blocked) & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->n_receiving}) & first_receiving<+{mutex|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{mutex|->n_first}) = dom(queue_receiving<+{mutex|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{mutex|->n_first}) & not((queue_receiving<+{mutex|->n_receiving})(q1) = {}) => (first_receiving<+{mutex|->n_first})(q1): (queue_receiving<+{mutex|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)));
  ("`Local hypotheses'" & n_receiving: POW(TASK) & n_receiving = queue_receiving(mutex)-{first_receiving(mutex)} & n_first: TASK & n_first: n_receiving & not(queue_receiving(mutex) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(mutex)} & first_receiving(mutex): suspended & first_receiving(mutex): blocked & first_receiving(mutex): unblocked & blocked-{first_receiving(mutex)}: FIN(TASK) & blocked-{first_receiving(mutex)}: POW(tasks) & unblocked-{first_receiving(mutex)}: FIN(TASK) & unblocked-{first_receiving(mutex)}: POW(blocked-{first_receiving(mutex)}) & n_runable: FIN(TASK) & suspended-{first_receiving(mutex)}: FIN(TASK) & suspended-{first_receiving(mutex)}: POW(tasks) & n_runable/\blocked-{first_receiving(mutex)} = {} & blocked-{first_receiving(mutex)}/\suspended-{first_receiving(mutex)} = {} & suspended-{first_receiving(mutex)}/\n_runable = {} & tasks = suspended-{first_receiving(mutex)}\/blocked-{first_receiving(mutex)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->n_receiving}) & first_receiving<+{mutex|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{mutex|->n_first}) = dom(queue_receiving<+{mutex|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{mutex|->n_first}) & not((queue_receiving<+{mutex|->n_receiving})(q1) = {}) => (first_receiving<+{mutex|->n_first})(q1): (queue_receiving<+{mutex|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running: suspended & not(running = first_receiving(mutex)))) & (active = TRUE => not(running: blocked & not(running = first_receiving(mutex)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(mutex)))) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(mutex)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & n_receiving: POW(TASK) & n_receiving = queue_receiving(mutex)-{first_receiving(mutex)} & n_first: TASK & n_first: n_receiving & not(queue_receiving(mutex) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(mutex)} & first_receiving(mutex): suspended & first_receiving(mutex): blocked & first_receiving(mutex): unblocked & blocked-{first_receiving(mutex)}: FIN(TASK) & blocked-{first_receiving(mutex)}: POW(tasks) & unblocked-{first_receiving(mutex)}: FIN(TASK) & unblocked-{first_receiving(mutex)}: POW(blocked-{first_receiving(mutex)}) & n_runable: FIN(TASK) & suspended-{first_receiving(mutex)}: FIN(TASK) & suspended-{first_receiving(mutex)}: POW(tasks) & n_runable/\blocked-{first_receiving(mutex)} = {} & blocked-{first_receiving(mutex)}/\suspended-{first_receiving(mutex)} = {} & suspended-{first_receiving(mutex)}/\n_runable = {} & tasks = suspended-{first_receiving(mutex)}\/blocked-{first_receiving(mutex)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->n_receiving}) & first_receiving<+{mutex|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{mutex|->n_first}) = dom(queue_receiving<+{mutex|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{mutex|->n_first}) & not((queue_receiving<+{mutex|->n_receiving})(q1) = {}) => (first_receiving<+{mutex|->n_first})(q1): (queue_receiving<+{mutex|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running: suspended & not(running = first_receiving(mutex)))) & (active = TRUE => not(running: blocked & not(running = first_receiving(mutex)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(mutex)))) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(mutex)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & n_receiving: POW(TASK) & n_receiving = queue_receiving(mutex)-{first_receiving(mutex)} & n_first: TASK & n_first: n_receiving & not(queue_receiving(mutex) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(mutex)} & first_receiving(mutex): suspended & first_receiving(mutex): blocked & first_receiving(mutex): unblocked & blocked-{first_receiving(mutex)}: FIN(TASK) & blocked-{first_receiving(mutex)}: POW(tasks) & unblocked-{first_receiving(mutex)}: FIN(TASK) & unblocked-{first_receiving(mutex)}: POW(blocked-{first_receiving(mutex)}) & n_runable: FIN(TASK) & suspended-{first_receiving(mutex)}: FIN(TASK) & suspended-{first_receiving(mutex)}: POW(tasks) & n_runable/\blocked-{first_receiving(mutex)} = {} & blocked-{first_receiving(mutex)}/\suspended-{first_receiving(mutex)} = {} & suspended-{first_receiving(mutex)}/\n_runable = {} & tasks = suspended-{first_receiving(mutex)}\/blocked-{first_receiving(mutex)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->n_receiving}) & first_receiving<+{mutex|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{mutex|->n_first}) = dom(queue_receiving<+{mutex|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{mutex|->n_first}) & not((queue_receiving<+{mutex|->n_receiving})(q1) = {}) => (first_receiving<+{mutex|->n_first})(q1): (queue_receiving<+{mutex|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running: suspended & not(running = first_receiving(mutex)))) & (active = TRUE => not(running: blocked & not(running = first_receiving(mutex)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(mutex)))) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(mutex)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes_busy & not(mt = mutex));
  ("`Local hypotheses'" & n_receiving: POW(TASK) & n_receiving = queue_receiving(mutex)-{first_receiving(mutex)} & n_first: TASK & n_first: n_receiving & not(queue_receiving(mutex) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(mutex)} & first_receiving(mutex): suspended & first_receiving(mutex): blocked & first_receiving(mutex): unblocked & blocked-{first_receiving(mutex)}: FIN(TASK) & blocked-{first_receiving(mutex)}: POW(tasks) & unblocked-{first_receiving(mutex)}: FIN(TASK) & unblocked-{first_receiving(mutex)}: POW(blocked-{first_receiving(mutex)}) & n_runable: FIN(TASK) & suspended-{first_receiving(mutex)}: FIN(TASK) & suspended-{first_receiving(mutex)}: POW(tasks) & n_runable/\blocked-{first_receiving(mutex)} = {} & blocked-{first_receiving(mutex)}/\suspended-{first_receiving(mutex)} = {} & suspended-{first_receiving(mutex)}/\n_runable = {} & tasks = suspended-{first_receiving(mutex)}\/blocked-{first_receiving(mutex)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->n_receiving}) & first_receiving<+{mutex|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{mutex|->n_first}) = dom(queue_receiving<+{mutex|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{mutex|->n_first}) & not((queue_receiving<+{mutex|->n_receiving})(q1) = {}) => (first_receiving<+{mutex|->n_first})(q1): (queue_receiving<+{mutex|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running: suspended & not(running = first_receiving(mutex)))) & (active = TRUE => not(running: blocked & not(running = first_receiving(mutex)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(mutex)))) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(mutex)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)));
  ("`Local hypotheses'" & n_receiving: POW(TASK) & n_receiving = queue_receiving(mutex)-{first_receiving(mutex)} & n_first: TASK & n_first: n_receiving & not(queue_receiving(mutex) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(mutex)} & first_receiving(mutex): suspended & first_receiving(mutex): blocked & not(first_receiving(mutex): unblocked) & blocked-{first_receiving(mutex)}: FIN(TASK) & blocked-{first_receiving(mutex)}: POW(tasks) & unblocked: POW(blocked-{first_receiving(mutex)}) & n_runable: FIN(TASK) & suspended-{first_receiving(mutex)}: FIN(TASK) & suspended-{first_receiving(mutex)}: POW(tasks) & n_runable/\blocked-{first_receiving(mutex)} = {} & blocked-{first_receiving(mutex)}/\suspended-{first_receiving(mutex)} = {} & suspended-{first_receiving(mutex)}/\n_runable = {} & tasks = suspended-{first_receiving(mutex)}\/blocked-{first_receiving(mutex)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->n_receiving}) & first_receiving<+{mutex|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{mutex|->n_first}) = dom(queue_receiving<+{mutex|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{mutex|->n_first}) & not((queue_receiving<+{mutex|->n_receiving})(q1) = {}) => (first_receiving<+{mutex|->n_first})(q1): (queue_receiving<+{mutex|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running: suspended & not(running = first_receiving(mutex)))) & (active = TRUE => not(running: blocked & not(running = first_receiving(mutex)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(mutex)))) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(mutex)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & n_receiving: POW(TASK) & n_receiving = queue_receiving(mutex)-{first_receiving(mutex)} & n_first: TASK & n_first: n_receiving & not(queue_receiving(mutex) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(mutex)} & first_receiving(mutex): suspended & first_receiving(mutex): blocked & not(first_receiving(mutex): unblocked) & blocked-{first_receiving(mutex)}: FIN(TASK) & blocked-{first_receiving(mutex)}: POW(tasks) & unblocked: POW(blocked-{first_receiving(mutex)}) & n_runable: FIN(TASK) & suspended-{first_receiving(mutex)}: FIN(TASK) & suspended-{first_receiving(mutex)}: POW(tasks) & n_runable/\blocked-{first_receiving(mutex)} = {} & blocked-{first_receiving(mutex)}/\suspended-{first_receiving(mutex)} = {} & suspended-{first_receiving(mutex)}/\n_runable = {} & tasks = suspended-{first_receiving(mutex)}\/blocked-{first_receiving(mutex)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->n_receiving}) & first_receiving<+{mutex|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{mutex|->n_first}) = dom(queue_receiving<+{mutex|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{mutex|->n_first}) & not((queue_receiving<+{mutex|->n_receiving})(q1) = {}) => (first_receiving<+{mutex|->n_first})(q1): (queue_receiving<+{mutex|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running: suspended & not(running = first_receiving(mutex)))) & (active = TRUE => not(running: blocked & not(running = first_receiving(mutex)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(mutex)))) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(mutex)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & n_receiving: POW(TASK) & n_receiving = queue_receiving(mutex)-{first_receiving(mutex)} & n_first: TASK & n_first: n_receiving & not(queue_receiving(mutex) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(mutex)} & first_receiving(mutex): suspended & first_receiving(mutex): blocked & not(first_receiving(mutex): unblocked) & blocked-{first_receiving(mutex)}: FIN(TASK) & blocked-{first_receiving(mutex)}: POW(tasks) & unblocked: POW(blocked-{first_receiving(mutex)}) & n_runable: FIN(TASK) & suspended-{first_receiving(mutex)}: FIN(TASK) & suspended-{first_receiving(mutex)}: POW(tasks) & n_runable/\blocked-{first_receiving(mutex)} = {} & blocked-{first_receiving(mutex)}/\suspended-{first_receiving(mutex)} = {} & suspended-{first_receiving(mutex)}/\n_runable = {} & tasks = suspended-{first_receiving(mutex)}\/blocked-{first_receiving(mutex)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->n_receiving}) & first_receiving<+{mutex|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{mutex|->n_first}) = dom(queue_receiving<+{mutex|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{mutex|->n_first}) & not((queue_receiving<+{mutex|->n_receiving})(q1) = {}) => (first_receiving<+{mutex|->n_first})(q1): (queue_receiving<+{mutex|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running: suspended & not(running = first_receiving(mutex)))) & (active = TRUE => not(running: blocked & not(running = first_receiving(mutex)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(mutex)))) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(mutex)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes_busy & not(mt = mutex));
  ("`Local hypotheses'" & n_receiving: POW(TASK) & n_receiving = queue_receiving(mutex)-{first_receiving(mutex)} & n_first: TASK & n_first: n_receiving & not(queue_receiving(mutex) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(mutex)} & first_receiving(mutex): suspended & first_receiving(mutex): blocked & not(first_receiving(mutex): unblocked) & blocked-{first_receiving(mutex)}: FIN(TASK) & blocked-{first_receiving(mutex)}: POW(tasks) & unblocked: POW(blocked-{first_receiving(mutex)}) & n_runable: FIN(TASK) & suspended-{first_receiving(mutex)}: FIN(TASK) & suspended-{first_receiving(mutex)}: POW(tasks) & n_runable/\blocked-{first_receiving(mutex)} = {} & blocked-{first_receiving(mutex)}/\suspended-{first_receiving(mutex)} = {} & suspended-{first_receiving(mutex)}/\n_runable = {} & tasks = suspended-{first_receiving(mutex)}\/blocked-{first_receiving(mutex)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->n_receiving}) & first_receiving<+{mutex|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{mutex|->n_first}) = dom(queue_receiving<+{mutex|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{mutex|->n_first}) & not((queue_receiving<+{mutex|->n_receiving})(q1) = {}) => (first_receiving<+{mutex|->n_first})(q1): (queue_receiving<+{mutex|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running: suspended & not(running = first_receiving(mutex)))) & (active = TRUE => not(running: blocked & not(running = first_receiving(mutex)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(mutex)))) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(mutex)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)));
  ("`Local hypotheses'" & n_receiving: POW(TASK) & n_receiving = queue_receiving(mutex)-{first_receiving(mutex)} & n_first: TASK & n_first: n_receiving & not(queue_receiving(mutex) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(mutex)} & first_receiving(mutex): suspended & not(first_receiving(mutex): blocked) & n_runable: FIN(TASK) & suspended-{first_receiving(mutex)}: FIN(TASK) & suspended-{first_receiving(mutex)}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{first_receiving(mutex)} = {} & suspended-{first_receiving(mutex)}/\n_runable = {} & tasks = suspended-{first_receiving(mutex)}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->n_receiving}) & first_receiving<+{mutex|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{mutex|->n_first}) = dom(queue_receiving<+{mutex|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{mutex|->n_first}) & not((queue_receiving<+{mutex|->n_receiving})(q1) = {}) => (first_receiving<+{mutex|->n_first})(q1): (queue_receiving<+{mutex|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running: suspended & not(running = first_receiving(mutex)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(mutex)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & n_receiving: POW(TASK) & n_receiving = queue_receiving(mutex)-{first_receiving(mutex)} & n_first: TASK & n_first: n_receiving & not(queue_receiving(mutex) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(mutex)} & first_receiving(mutex): suspended & not(first_receiving(mutex): blocked) & n_runable: FIN(TASK) & suspended-{first_receiving(mutex)}: FIN(TASK) & suspended-{first_receiving(mutex)}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{first_receiving(mutex)} = {} & suspended-{first_receiving(mutex)}/\n_runable = {} & tasks = suspended-{first_receiving(mutex)}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->n_receiving}) & first_receiving<+{mutex|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{mutex|->n_first}) = dom(queue_receiving<+{mutex|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{mutex|->n_first}) & not((queue_receiving<+{mutex|->n_receiving})(q1) = {}) => (first_receiving<+{mutex|->n_first})(q1): (queue_receiving<+{mutex|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running: suspended & not(running = first_receiving(mutex)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(mutex)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & n_receiving: POW(TASK) & n_receiving = queue_receiving(mutex)-{first_receiving(mutex)} & n_first: TASK & n_first: n_receiving & not(queue_receiving(mutex) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(mutex)} & first_receiving(mutex): suspended & not(first_receiving(mutex): blocked) & n_runable: FIN(TASK) & suspended-{first_receiving(mutex)}: FIN(TASK) & suspended-{first_receiving(mutex)}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{first_receiving(mutex)} = {} & suspended-{first_receiving(mutex)}/\n_runable = {} & tasks = suspended-{first_receiving(mutex)}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->n_receiving}) & first_receiving<+{mutex|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{mutex|->n_first}) = dom(queue_receiving<+{mutex|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{mutex|->n_first}) & not((queue_receiving<+{mutex|->n_receiving})(q1) = {}) => (first_receiving<+{mutex|->n_first})(q1): (queue_receiving<+{mutex|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running: suspended & not(running = first_receiving(mutex)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(mutex)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes_busy & not(mt = mutex));
  ("`Local hypotheses'" & n_receiving: POW(TASK) & n_receiving = queue_receiving(mutex)-{first_receiving(mutex)} & n_first: TASK & n_first: n_receiving & not(queue_receiving(mutex) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(mutex)} & first_receiving(mutex): suspended & not(first_receiving(mutex): blocked) & n_runable: FIN(TASK) & suspended-{first_receiving(mutex)}: FIN(TASK) & suspended-{first_receiving(mutex)}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{first_receiving(mutex)} = {} & suspended-{first_receiving(mutex)}/\n_runable = {} & tasks = suspended-{first_receiving(mutex)}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->n_receiving}) & first_receiving<+{mutex|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{mutex|->n_first}) = dom(queue_receiving<+{mutex|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{mutex|->n_first}) & not((queue_receiving<+{mutex|->n_receiving})(q1) = {}) => (first_receiving<+{mutex|->n_first})(q1): (queue_receiving<+{mutex|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running: suspended & not(running = first_receiving(mutex)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = first_receiving(mutex)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)));
  ("`Local hypotheses'" & n_receiving: POW(TASK) & n_receiving = queue_receiving(mutex)-{first_receiving(mutex)} & n_first: TASK & n_first: n_receiving & not(queue_receiving(mutex) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(mutex)} & not(first_receiving(mutex): suspended) & first_receiving(mutex): blocked & first_receiving(mutex): unblocked & blocked-{first_receiving(mutex)}: FIN(TASK) & blocked-{first_receiving(mutex)}: POW(tasks) & unblocked-{first_receiving(mutex)}: FIN(TASK) & unblocked-{first_receiving(mutex)}: POW(blocked-{first_receiving(mutex)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_receiving(mutex)} = {} & blocked-{first_receiving(mutex)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_receiving(mutex)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->n_receiving}) & first_receiving<+{mutex|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{mutex|->n_first}) = dom(queue_receiving<+{mutex|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{mutex|->n_first}) & not((queue_receiving<+{mutex|->n_receiving})(q1) = {}) => (first_receiving<+{mutex|->n_first})(q1): (queue_receiving<+{mutex|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running: blocked & not(running = first_receiving(mutex)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(mutex)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & n_receiving: POW(TASK) & n_receiving = queue_receiving(mutex)-{first_receiving(mutex)} & n_first: TASK & n_first: n_receiving & not(queue_receiving(mutex) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(mutex)} & not(first_receiving(mutex): suspended) & first_receiving(mutex): blocked & first_receiving(mutex): unblocked & blocked-{first_receiving(mutex)}: FIN(TASK) & blocked-{first_receiving(mutex)}: POW(tasks) & unblocked-{first_receiving(mutex)}: FIN(TASK) & unblocked-{first_receiving(mutex)}: POW(blocked-{first_receiving(mutex)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_receiving(mutex)} = {} & blocked-{first_receiving(mutex)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_receiving(mutex)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->n_receiving}) & first_receiving<+{mutex|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{mutex|->n_first}) = dom(queue_receiving<+{mutex|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{mutex|->n_first}) & not((queue_receiving<+{mutex|->n_receiving})(q1) = {}) => (first_receiving<+{mutex|->n_first})(q1): (queue_receiving<+{mutex|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running: blocked & not(running = first_receiving(mutex)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(mutex)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & n_receiving: POW(TASK) & n_receiving = queue_receiving(mutex)-{first_receiving(mutex)} & n_first: TASK & n_first: n_receiving & not(queue_receiving(mutex) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(mutex)} & not(first_receiving(mutex): suspended) & first_receiving(mutex): blocked & first_receiving(mutex): unblocked & blocked-{first_receiving(mutex)}: FIN(TASK) & blocked-{first_receiving(mutex)}: POW(tasks) & unblocked-{first_receiving(mutex)}: FIN(TASK) & unblocked-{first_receiving(mutex)}: POW(blocked-{first_receiving(mutex)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_receiving(mutex)} = {} & blocked-{first_receiving(mutex)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_receiving(mutex)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->n_receiving}) & first_receiving<+{mutex|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{mutex|->n_first}) = dom(queue_receiving<+{mutex|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{mutex|->n_first}) & not((queue_receiving<+{mutex|->n_receiving})(q1) = {}) => (first_receiving<+{mutex|->n_first})(q1): (queue_receiving<+{mutex|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running: blocked & not(running = first_receiving(mutex)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(mutex)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes_busy & not(mt = mutex));
  ("`Local hypotheses'" & n_receiving: POW(TASK) & n_receiving = queue_receiving(mutex)-{first_receiving(mutex)} & n_first: TASK & n_first: n_receiving & not(queue_receiving(mutex) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(mutex)} & not(first_receiving(mutex): suspended) & first_receiving(mutex): blocked & first_receiving(mutex): unblocked & blocked-{first_receiving(mutex)}: FIN(TASK) & blocked-{first_receiving(mutex)}: POW(tasks) & unblocked-{first_receiving(mutex)}: FIN(TASK) & unblocked-{first_receiving(mutex)}: POW(blocked-{first_receiving(mutex)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_receiving(mutex)} = {} & blocked-{first_receiving(mutex)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_receiving(mutex)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->n_receiving}) & first_receiving<+{mutex|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{mutex|->n_first}) = dom(queue_receiving<+{mutex|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{mutex|->n_first}) & not((queue_receiving<+{mutex|->n_receiving})(q1) = {}) => (first_receiving<+{mutex|->n_first})(q1): (queue_receiving<+{mutex|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running: blocked & not(running = first_receiving(mutex)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(mutex)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)));
  ("`Local hypotheses'" & n_receiving: POW(TASK) & n_receiving = queue_receiving(mutex)-{first_receiving(mutex)} & n_first: TASK & n_first: n_receiving & not(queue_receiving(mutex) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(mutex)} & not(first_receiving(mutex): suspended) & first_receiving(mutex): blocked & not(first_receiving(mutex): unblocked) & blocked-{first_receiving(mutex)}: FIN(TASK) & blocked-{first_receiving(mutex)}: POW(tasks) & unblocked: POW(blocked-{first_receiving(mutex)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_receiving(mutex)} = {} & blocked-{first_receiving(mutex)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_receiving(mutex)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->n_receiving}) & first_receiving<+{mutex|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{mutex|->n_first}) = dom(queue_receiving<+{mutex|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{mutex|->n_first}) & not((queue_receiving<+{mutex|->n_receiving})(q1) = {}) => (first_receiving<+{mutex|->n_first})(q1): (queue_receiving<+{mutex|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running: blocked & not(running = first_receiving(mutex)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(mutex)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & n_receiving: POW(TASK) & n_receiving = queue_receiving(mutex)-{first_receiving(mutex)} & n_first: TASK & n_first: n_receiving & not(queue_receiving(mutex) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(mutex)} & not(first_receiving(mutex): suspended) & first_receiving(mutex): blocked & not(first_receiving(mutex): unblocked) & blocked-{first_receiving(mutex)}: FIN(TASK) & blocked-{first_receiving(mutex)}: POW(tasks) & unblocked: POW(blocked-{first_receiving(mutex)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_receiving(mutex)} = {} & blocked-{first_receiving(mutex)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_receiving(mutex)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->n_receiving}) & first_receiving<+{mutex|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{mutex|->n_first}) = dom(queue_receiving<+{mutex|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{mutex|->n_first}) & not((queue_receiving<+{mutex|->n_receiving})(q1) = {}) => (first_receiving<+{mutex|->n_first})(q1): (queue_receiving<+{mutex|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running: blocked & not(running = first_receiving(mutex)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(mutex)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & n_receiving: POW(TASK) & n_receiving = queue_receiving(mutex)-{first_receiving(mutex)} & n_first: TASK & n_first: n_receiving & not(queue_receiving(mutex) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(mutex)} & not(first_receiving(mutex): suspended) & first_receiving(mutex): blocked & not(first_receiving(mutex): unblocked) & blocked-{first_receiving(mutex)}: FIN(TASK) & blocked-{first_receiving(mutex)}: POW(tasks) & unblocked: POW(blocked-{first_receiving(mutex)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_receiving(mutex)} = {} & blocked-{first_receiving(mutex)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_receiving(mutex)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->n_receiving}) & first_receiving<+{mutex|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{mutex|->n_first}) = dom(queue_receiving<+{mutex|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{mutex|->n_first}) & not((queue_receiving<+{mutex|->n_receiving})(q1) = {}) => (first_receiving<+{mutex|->n_first})(q1): (queue_receiving<+{mutex|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running: blocked & not(running = first_receiving(mutex)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(mutex)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes_busy & not(mt = mutex));
  ("`Local hypotheses'" & n_receiving: POW(TASK) & n_receiving = queue_receiving(mutex)-{first_receiving(mutex)} & n_first: TASK & n_first: n_receiving & not(queue_receiving(mutex) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(mutex)} & not(first_receiving(mutex): suspended) & first_receiving(mutex): blocked & not(first_receiving(mutex): unblocked) & blocked-{first_receiving(mutex)}: FIN(TASK) & blocked-{first_receiving(mutex)}: POW(tasks) & unblocked: POW(blocked-{first_receiving(mutex)}) & n_runable: FIN(TASK) & n_runable/\blocked-{first_receiving(mutex)} = {} & blocked-{first_receiving(mutex)}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{first_receiving(mutex)}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->n_receiving}) & first_receiving<+{mutex|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{mutex|->n_first}) = dom(queue_receiving<+{mutex|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{mutex|->n_first}) & not((queue_receiving<+{mutex|->n_receiving})(q1) = {}) => (first_receiving<+{mutex|->n_first})(q1): (queue_receiving<+{mutex|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running: blocked & not(running = first_receiving(mutex)))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = first_receiving(mutex)))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)));
  ("`Local hypotheses'" & n_receiving: POW(TASK) & n_receiving = queue_receiving(mutex)-{first_receiving(mutex)} & n_first: TASK & n_first: n_receiving & not(queue_receiving(mutex) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(mutex)} & not(first_receiving(mutex): suspended) & not(first_receiving(mutex): blocked) & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->n_receiving}) & first_receiving<+{mutex|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{mutex|->n_first}) = dom(queue_receiving<+{mutex|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{mutex|->n_first}) & not((queue_receiving<+{mutex|->n_receiving})(q1) = {}) => (first_receiving<+{mutex|->n_first})(q1): (queue_receiving<+{mutex|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & n_receiving: POW(TASK) & n_receiving = queue_receiving(mutex)-{first_receiving(mutex)} & n_first: TASK & n_first: n_receiving & not(queue_receiving(mutex) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(mutex)} & not(first_receiving(mutex): suspended) & not(first_receiving(mutex): blocked) & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->n_receiving}) & first_receiving<+{mutex|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{mutex|->n_first}) = dom(queue_receiving<+{mutex|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{mutex|->n_first}) & not((queue_receiving<+{mutex|->n_receiving})(q1) = {}) => (first_receiving<+{mutex|->n_first})(q1): (queue_receiving<+{mutex|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & n_receiving: POW(TASK) & n_receiving = queue_receiving(mutex)-{first_receiving(mutex)} & n_first: TASK & n_first: n_receiving & not(queue_receiving(mutex) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(mutex)} & not(first_receiving(mutex): suspended) & not(first_receiving(mutex): blocked) & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->n_receiving}) & first_receiving<+{mutex|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{mutex|->n_first}) = dom(queue_receiving<+{mutex|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{mutex|->n_first}) & not((queue_receiving<+{mutex|->n_receiving})(q1) = {}) => (first_receiving<+{mutex|->n_first})(q1): (queue_receiving<+{mutex|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes_busy & not(mt = mutex));
  ("`Local hypotheses'" & n_receiving: POW(TASK) & n_receiving = queue_receiving(mutex)-{first_receiving(mutex)} & n_first: TASK & n_first: n_receiving & not(queue_receiving(mutex) = {}) & n_runable: POW(tasks) & n_runable = runable\/{first_receiving(mutex)} & not(first_receiving(mutex): suspended) & not(first_receiving(mutex): blocked) & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->n_receiving}) & first_receiving<+{mutex|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{mutex|->n_first}) = dom(queue_receiving<+{mutex|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{mutex|->n_first}) & not((queue_receiving<+{mutex|->n_receiving})(q1) = {}) => (first_receiving<+{mutex|->n_first})(q1): (queue_receiving<+{mutex|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)));
  ("`Local hypotheses'" & n_receiving: POW(TASK) & n_receiving = queue_receiving(mutex)-{first_receiving(mutex)} & n_first: TASK & n_first: n_receiving & queue_receiving(mutex) = {} & queue_receiving<+{mutex|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->n_receiving}) & first_receiving<+{mutex|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{mutex|->n_first}) = dom(queue_receiving<+{mutex|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{mutex|->n_first}) & not((queue_receiving<+{mutex|->n_receiving})(q1) = {}) => (first_receiving<+{mutex|->n_first})(q1): (queue_receiving<+{mutex|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & que: queues);
  ("`Local hypotheses'" & n_receiving: POW(TASK) & n_receiving = queue_receiving(mutex)-{first_receiving(mutex)} & n_first: TASK & n_first: n_receiving & queue_receiving(mutex) = {} & queue_receiving<+{mutex|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->n_receiving}) & first_receiving<+{mutex|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{mutex|->n_first}) = dom(queue_receiving<+{mutex|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{mutex|->n_first}) & not((queue_receiving<+{mutex|->n_receiving})(q1) = {}) => (first_receiving<+{mutex|->n_first})(q1): (queue_receiving<+{mutex|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL));
  ("`Local hypotheses'" & n_receiving: POW(TASK) & n_receiving = queue_receiving(mutex)-{first_receiving(mutex)} & n_first: TASK & n_first: n_receiving & queue_receiving(mutex) = {} & queue_receiving<+{mutex|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->n_receiving}) & first_receiving<+{mutex|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{mutex|->n_first}) = dom(queue_receiving<+{mutex|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{mutex|->n_first}) & not((queue_receiving<+{mutex|->n_receiving})(q1) = {}) => (first_receiving<+{mutex|->n_first})(q1): (queue_receiving<+{mutex|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & mt: mutexes_busy & not(mt = mutex));
  ("`Local hypotheses'" & n_receiving: POW(TASK) & n_receiving = queue_receiving(mutex)-{first_receiving(mutex)} & n_first: TASK & n_first: n_receiving & queue_receiving(mutex) = {} & queue_receiving<+{mutex|->n_receiving}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->n_receiving}) & first_receiving<+{mutex|->n_first}: QUEUE +-> TASK & dom(first_receiving<+{mutex|->n_first}) = dom(queue_receiving<+{mutex|->n_receiving}) & !q1.(q1: queues & q1: dom(first_receiving<+{mutex|->n_first}) & not((queue_receiving<+{mutex|->n_receiving})(q1) = {}) => (first_receiving<+{mutex|->n_first})(q1): (queue_receiving<+{mutex|->n_receiving})(q1)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->n_receiving})(q1) => not(tk: (queue_receiving<+{mutex|->n_receiving})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)));
  ("`afterIncrementTick preconditions in this component'" & active = TRUE)
END
&
THEORY EnumerateX IS
  SCHEDULER_STATE == {taskSCHEDULER_NOT_STARTED,taskSCHEDULER_RUNNING,taskSCHEDULER_SUSPENDED};
  COPY_POSITION == {queueSEND_TO_BACK,queueSEND_TO_FRONT};
  QUEUE_TYPE == {TQUE,TSEMAPH,TMUT};
  ERROR_DEFINITION == {errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY,errNO_TASK_TO_RUN,errQUEUE_BLOCKED,errQUEUE_YIELD,errQUEUE_EMPTY,errQUEUE_FULL,pdPASS,pdFAIL,pdTRUE,pdFALSE}
END
&
THEORY Version IS
  POVersion(V3.8.3)(CLT == "V3.7.6")(genOPO == KO, genDivergencePO == KO, local_op == OK)
END
