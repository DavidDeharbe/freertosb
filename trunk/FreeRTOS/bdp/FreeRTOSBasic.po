THEORY ProofList IS
  _f(1) & _f(2) & _f(8) & _f(14) & xSemaphoreCreateRecursiveMutex.5,(_f(306) & _f(30) => _f(44));
  _f(1) & _f(2) & _f(8) & _f(14) & xSemaphoreCreateRecursiveMutex.4,(_f(305) & _f(27) => _f(44));
  _f(1) & _f(2) & _f(8) & _f(14) & xSemaphoreCreateRecursiveMutex.3,(_f(302) & _f(20) => _f(304));
  _f(1) & _f(2) & _f(8) & _f(14) & xSemaphoreCreateRecursiveMutex.2,(_f(302) & _f(20) => _f(303));
  _f(1) & _f(2) & _f(8) & _f(14) & xSemaphoreCreateRecursiveMutex.1,(_f(300) & _f(17) => _f(301));
  _f(1) & _f(2) & _f(8) & _f(14) & xQueueCreateMutex.5,(_f(306) & _f(30) => _f(44));
  _f(1) & _f(2) & _f(8) & _f(14) & xQueueCreateMutex.4,(_f(305) & _f(27) => _f(44));
  _f(1) & _f(2) & _f(8) & _f(14) & xQueueCreateMutex.3,(_f(302) & _f(20) => _f(304));
  _f(1) & _f(2) & _f(8) & _f(14) & xQueueCreateMutex.2,(_f(302) & _f(20) => _f(303));
  _f(1) & _f(2) & _f(8) & _f(14) & xQueueCreateMutex.1,(_f(300) & _f(17) => _f(301));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(295) & xSemaphoreCreateCounting.5,(_f(299) & _f(30) => _f(44));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(295) & xSemaphoreCreateCounting.4,(_f(298) & _f(27) => _f(44));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(295) & xSemaphoreCreateCounting.3,(_f(297) & _f(20) => _f(22));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(295) & xSemaphoreCreateCounting.2,(_f(297) & _f(20) => _f(41));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(295) & xSemaphoreCreateCounting.1,(_f(33) => _f(296));
  _f(1) & _f(2) & _f(8) & _f(14) & vSemaphoreCreateBinary.4,(_f(294) & _f(30) => _f(44));
  _f(1) & _f(2) & _f(8) & _f(14) & vSemaphoreCreateBinary.3,(_f(293) & _f(27) => _f(44));
  _f(1) & _f(2) & _f(8) & _f(14) & vSemaphoreCreateBinary.2,(_f(292) & _f(20) => _f(22));
  _f(1) & _f(2) & _f(8) & _f(14) & vSemaphoreCreateBinary.1,(_f(292) & _f(20) => _f(41));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(258) & incrementTick.33,(_f(291) & _f(125) => _f(260));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(258) & incrementTick.32,(_f(290) & _f(30) => _f(128));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(258) & incrementTick.31,(_f(289) & _f(27) => _f(128));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(258) & incrementTick.30,(_f(288) & _f(125) => _f(260));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(258) & incrementTick.29,(_f(287) & _f(30) => _f(128));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(258) & incrementTick.28,(_f(286) & _f(27) => _f(128));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(258) & incrementTick.27,(_f(285) & _f(125) => _f(260));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(258) & incrementTick.26,(_f(284) & _f(30) => _f(44));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(258) & incrementTick.25,(_f(283) & _f(125) => _f(260));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(258) & incrementTick.24,(_f(282) & _f(30) => _f(128));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(258) & incrementTick.23,(_f(281) & _f(27) => _f(128));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(258) & incrementTick.22,(_f(280) & _f(125) => _f(260));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(258) & incrementTick.21,(_f(279) & _f(30) => _f(128));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(258) & incrementTick.20,(_f(278) & _f(27) => _f(128));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(258) & incrementTick.19,(_f(277) & _f(125) => _f(260));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(258) & incrementTick.18,(_f(276) & _f(27) => _f(44));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(258) & incrementTick.17,(_f(275) & _f(125) => _f(260));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(258) & incrementTick.16,(_f(274) & _f(30) => _f(128));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(258) & incrementTick.15,(_f(273) & _f(27) => _f(128));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(258) & incrementTick.14,(_f(272) & _f(125) => _f(260));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(258) & incrementTick.13,(_f(271) & _f(30) => _f(128));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(258) & incrementTick.12,(_f(270) & _f(27) => _f(128));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(258) & incrementTick.11,(_f(269) & _f(125) => _f(260));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(258) & incrementTick.10,(_f(268) & _f(30) => _f(44));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(258) & incrementTick.9,(_f(267) & _f(27) => _f(44));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(258) & incrementTick.8,(_f(266) & _f(125) => _f(260));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(258) & incrementTick.7,(_f(265) & _f(30) => _f(128));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(258) & incrementTick.6,(_f(264) & _f(27) => _f(128));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(258) & incrementTick.5,(_f(263) & _f(125) => _f(260));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(258) & incrementTick.4,(_f(262) & _f(30) => _f(128));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(258) & incrementTick.3,(_f(261) & _f(27) => _f(128));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(258) & incrementTick.2,(_f(259) & _f(125) => _f(260));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(258) & incrementTick.1,(_f(122) & _f(33) => _f(123));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.64,(_f(257) & _f(30) => _f(96));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.63,(_f(256) & _f(27) => _f(96));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.62,(_f(255) & _f(30) => _f(96));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.61,(_f(254) & _f(27) => _f(96));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.60,(_f(253) & _f(20) => _f(85));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.59,(_f(253) & _f(20) => _f(84));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.58,(_f(252) & _f(17) => _f(82));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.57,(_f(251) & _f(30) => _f(96));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.56,(_f(250) & _f(27) => _f(96));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.55,(_f(249) & _f(20) => _f(219));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.54,(_f(249) & _f(20) => _f(218));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.53,(_f(248) & _f(17) => _f(216));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.52,(_f(247) & _f(30) => _f(87));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.51,(_f(246) & _f(27) => _f(87));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.50,(_f(245) & _f(30) => _f(87));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.49,(_f(244) & _f(27) => _f(87));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.48,(_f(243) & _f(20) => _f(85));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.47,(_f(243) & _f(20) => _f(84));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.46,(_f(242) & _f(17) => _f(82));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.45,(_f(241) & _f(30) => _f(87));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.44,(_f(240) & _f(27) => _f(87));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.43,(_f(239) & _f(20) => _f(219));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.42,(_f(239) & _f(20) => _f(218));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.41,(_f(238) & _f(17) => _f(216));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.40,(_f(237) & _f(30) => _f(96));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.39,(_f(236) & _f(27) => _f(96));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.38,(_f(235) & _f(30) => _f(96));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.37,(_f(234) & _f(27) => _f(96));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.36,(_f(233) & _f(20) => _f(85));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.35,(_f(233) & _f(20) => _f(84));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.34,(_f(232) & _f(17) => _f(82));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.33,(_f(231) & _f(30) => _f(96));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.32,(_f(230) & _f(27) => _f(96));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.31,(_f(229) & _f(20) => _f(219));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.30,(_f(229) & _f(20) => _f(218));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.29,(_f(228) & _f(17) => _f(216));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.28,(_f(227) & _f(30) => _f(87));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.27,(_f(226) & _f(27) => _f(87));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.26,(_f(225) & _f(30) => _f(87));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.25,(_f(224) & _f(27) => _f(87));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.24,(_f(223) & _f(20) => _f(85));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.23,(_f(223) & _f(20) => _f(84));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.22,(_f(222) & _f(17) => _f(82));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.21,(_f(221) & _f(30) => _f(87));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.20,(_f(220) & _f(27) => _f(87));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.19,(_f(217) & _f(20) => _f(219));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.18,(_f(217) & _f(20) => _f(218));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.17,(_f(215) & _f(17) => _f(216));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.16,(_f(214) & _f(30) => _f(44));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.15,(_f(213) & _f(30) => _f(119));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.14,(_f(212) & _f(27) => _f(119));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.13,(_f(211) & _f(30) => _f(28));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.12,(_f(210) & _f(27) => _f(28));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.11,(_f(209) & _f(30) => _f(76));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.10,(_f(209) & _f(30) => _f(75));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.9,(_f(208) & _f(30) => _f(28));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.8,(_f(207) & _f(27) => _f(28));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.7,(_f(206) & _f(33) => _f(76));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.6,(_f(206) & _f(33) => _f(75));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.5,(_f(203) & _f(33) => _f(205));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.4,(_f(203) & _f(33) => _f(204));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.3,(_f(202) & _f(33) => _f(76));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.2,(_f(202) & _f(33) => _f(75));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(200) & xQueueGenericReceive.1,(_f(201) & _f(33) => _f(77));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(182) & vQueueDelete.18,(_f(199) & _f(30) => _f(44));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(182) & vQueueDelete.17,(_f(198) & _f(27) => _f(44));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(182) & vQueueDelete.16,(_f(197) & _f(20) => _f(22));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(182) & vQueueDelete.15,(_f(197) & _f(20) => _f(41));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(182) & vQueueDelete.14,(_f(196) & _f(30) => _f(44));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(182) & vQueueDelete.13,(_f(195) & _f(27) => _f(44));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(182) & vQueueDelete.12,(_f(194) & _f(20) => _f(187));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(182) & vQueueDelete.11,(_f(194) & _f(20) => _f(186));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(182) & vQueueDelete.10,(_f(193) & _f(17) => _f(184));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(182) & vQueueDelete.9,(_f(192) & _f(30) => _f(44));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(182) & vQueueDelete.8,(_f(191) & _f(27) => _f(44));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(182) & vQueueDelete.7,(_f(190) & _f(20) => _f(22));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(182) & vQueueDelete.6,(_f(190) & _f(20) => _f(41));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(182) & vQueueDelete.5,(_f(189) & _f(30) => _f(44));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(182) & vQueueDelete.4,(_f(188) & _f(27) => _f(44));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(182) & vQueueDelete.3,(_f(185) & _f(20) => _f(187));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(182) & vQueueDelete.2,(_f(185) & _f(20) => _f(186));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(182) & vQueueDelete.1,(_f(183) & _f(17) => _f(184));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(178) & xQueueCreate.4,(_f(181) & _f(30) => _f(44));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(178) & xQueueCreate.3,(_f(180) & _f(27) => _f(44));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(178) & xQueueCreate.2,(_f(179) & _f(20) => _f(22));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(178) & xQueueCreate.1,(_f(179) & _f(20) => _f(41));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(165) & vTaskSuspend.8,(_f(177) & _f(170) => _f(168));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(165) & vTaskSuspend.7,(_f(176) & _f(167) => _f(168));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(165) & vTaskSuspend.6,(_f(175) & _f(170) => _f(174));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(165) & vTaskSuspend.5,(_f(173) & _f(167) => _f(174));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(165) & vTaskSuspend.4,(_f(172) & _f(170) => _f(168));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(165) & vTaskSuspend.3,(_f(171) & _f(167) => _f(168));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(165) & vTaskSuspend.2,(_f(169) & _f(170) => _f(168));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(165) & vTaskSuspend.1,(_f(166) & _f(167) => _f(168));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(159) & vTaskStartScheduler.3,(_f(162) & _f(20) => _f(164));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(159) & vTaskStartScheduler.2,(_f(162) & _f(20) => _f(163));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(159) & vTaskStartScheduler.1,(_f(160) & _f(17) => _f(161));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(121) & xTaskResumeAll.33,(_f(158) & _f(125) => _f(126));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(121) & xTaskResumeAll.32,(_f(157) & _f(30) => _f(128));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(121) & xTaskResumeAll.31,(_f(156) & _f(27) => _f(128));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(121) & xTaskResumeAll.30,(_f(155) & _f(125) => _f(126));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(121) & xTaskResumeAll.29,(_f(154) & _f(30) => _f(128));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(121) & xTaskResumeAll.28,(_f(153) & _f(27) => _f(128));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(121) & xTaskResumeAll.27,(_f(152) & _f(125) => _f(126));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(121) & xTaskResumeAll.26,(_f(151) & _f(27) => _f(44));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(121) & xTaskResumeAll.25,(_f(150) & _f(125) => _f(126));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(121) & xTaskResumeAll.24,(_f(149) & _f(30) => _f(128));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(121) & xTaskResumeAll.23,(_f(148) & _f(27) => _f(128));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(121) & xTaskResumeAll.22,(_f(147) & _f(125) => _f(126));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(121) & xTaskResumeAll.21,(_f(146) & _f(30) => _f(128));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(121) & xTaskResumeAll.20,(_f(145) & _f(27) => _f(128));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(121) & xTaskResumeAll.19,(_f(144) & _f(125) => _f(126));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(121) & xTaskResumeAll.18,(_f(143) & _f(30) => _f(44));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(121) & xTaskResumeAll.17,(_f(142) & _f(125) => _f(126));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(121) & xTaskResumeAll.16,(_f(141) & _f(30) => _f(128));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(121) & xTaskResumeAll.15,(_f(140) & _f(27) => _f(128));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(121) & xTaskResumeAll.14,(_f(139) & _f(125) => _f(126));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(121) & xTaskResumeAll.13,(_f(138) & _f(30) => _f(128));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(121) & xTaskResumeAll.12,(_f(137) & _f(27) => _f(128));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(121) & xTaskResumeAll.11,(_f(136) & _f(125) => _f(126));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(121) & xTaskResumeAll.10,(_f(135) & _f(30) => _f(44));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(121) & xTaskResumeAll.9,(_f(134) & _f(27) => _f(44));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(121) & xTaskResumeAll.8,(_f(133) & _f(125) => _f(126));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(121) & xTaskResumeAll.7,(_f(132) & _f(30) => _f(128));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(121) & xTaskResumeAll.6,(_f(131) & _f(27) => _f(128));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(121) & xTaskResumeAll.5,(_f(130) & _f(125) => _f(126));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(121) & xTaskResumeAll.4,(_f(129) & _f(30) => _f(128));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(121) & xTaskResumeAll.3,(_f(127) & _f(27) => _f(128));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(121) & xTaskResumeAll.2,(_f(124) & _f(125) => _f(126));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(121) & xTaskResumeAll.1,(_f(122) & _f(33) => _f(123));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(73) & xQueueGenericSend.44,(_f(120) & _f(30) => _f(119));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(73) & xQueueGenericSend.43,(_f(118) & _f(27) => _f(119));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(73) & xQueueGenericSend.42,(_f(117) & _f(30) => _f(96));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(73) & xQueueGenericSend.41,(_f(116) & _f(27) => _f(96));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(73) & xQueueGenericSend.40,(_f(115) & _f(30) => _f(96));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(73) & xQueueGenericSend.39,(_f(114) & _f(27) => _f(96));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(73) & xQueueGenericSend.38,(_f(113) & _f(30) => _f(96));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(73) & xQueueGenericSend.37,(_f(112) & _f(27) => _f(96));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(73) & xQueueGenericSend.36,(_f(111) & _f(20) => _f(85));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(73) & xQueueGenericSend.35,(_f(111) & _f(20) => _f(84));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(73) & xQueueGenericSend.34,(_f(110) & _f(17) => _f(82));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(73) & xQueueGenericSend.33,(_f(109) & _f(30) => _f(87));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(73) & xQueueGenericSend.32,(_f(108) & _f(27) => _f(87));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(73) & xQueueGenericSend.31,(_f(107) & _f(30) => _f(87));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(73) & xQueueGenericSend.30,(_f(106) & _f(27) => _f(87));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(73) & xQueueGenericSend.29,(_f(105) & _f(30) => _f(87));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(73) & xQueueGenericSend.28,(_f(104) & _f(27) => _f(87));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(73) & xQueueGenericSend.27,(_f(103) & _f(20) => _f(85));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(73) & xQueueGenericSend.26,(_f(103) & _f(20) => _f(84));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(73) & xQueueGenericSend.25,(_f(102) & _f(17) => _f(82));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(73) & xQueueGenericSend.24,(_f(101) & _f(30) => _f(96));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(73) & xQueueGenericSend.23,(_f(100) & _f(27) => _f(96));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(73) & xQueueGenericSend.22,(_f(99) & _f(30) => _f(96));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(73) & xQueueGenericSend.21,(_f(98) & _f(27) => _f(96));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(73) & xQueueGenericSend.20,(_f(97) & _f(30) => _f(96));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(73) & xQueueGenericSend.19,(_f(95) & _f(27) => _f(96));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(73) & xQueueGenericSend.18,(_f(94) & _f(20) => _f(85));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(73) & xQueueGenericSend.17,(_f(94) & _f(20) => _f(84));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(73) & xQueueGenericSend.16,(_f(93) & _f(17) => _f(82));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(73) & xQueueGenericSend.15,(_f(92) & _f(30) => _f(87));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(73) & xQueueGenericSend.14,(_f(91) & _f(27) => _f(87));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(73) & xQueueGenericSend.13,(_f(90) & _f(30) => _f(87));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(73) & xQueueGenericSend.12,(_f(89) & _f(27) => _f(87));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(73) & xQueueGenericSend.11,(_f(88) & _f(30) => _f(87));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(73) & xQueueGenericSend.10,(_f(86) & _f(27) => _f(87));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(73) & xQueueGenericSend.9,(_f(83) & _f(20) => _f(85));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(73) & xQueueGenericSend.8,(_f(83) & _f(20) => _f(84));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(73) & xQueueGenericSend.7,(_f(81) & _f(17) => _f(82));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(73) & xQueueGenericSend.6,(_f(80) & _f(30) => _f(44));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(73) & xQueueGenericSend.5,(_f(79) & _f(30) => _f(28));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(73) & xQueueGenericSend.4,(_f(78) & _f(27) => _f(28));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(73) & xQueueGenericSend.3,(_f(33) => _f(77));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(73) & xQueueGenericSend.2,(_f(74) & _f(33) => _f(76));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(73) & xQueueGenericSend.1,(_f(74) & _f(33) => _f(75));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(67) & vTaskResume.4,(_f(72) & _f(30) => _f(69));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(67) & vTaskResume.3,(_f(71) & _f(27) => _f(69));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(67) & vTaskResume.2,(_f(70) & _f(30) => _f(69));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(67) & vTaskResume.1,(_f(68) & _f(27) => _f(69));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(64) & vTaskEndScheduler.1,(_f(65) & _f(17) => _f(66));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(37) & vTaskDelete.30,(_f(63) & _f(30) => _f(44));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(37) & vTaskDelete.29,(_f(62) & _f(27) => _f(44));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(37) & vTaskDelete.28,(_f(61) & _f(20) => _f(22));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(37) & vTaskDelete.27,(_f(61) & _f(20) => _f(42));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(37) & vTaskDelete.26,(_f(61) & _f(20) => _f(41));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(37) & vTaskDelete.25,(_f(60) & _f(17) => _f(39));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(37) & vTaskDelete.24,(_f(59) & _f(30) => _f(58));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(37) & vTaskDelete.23,(_f(57) & _f(27) => _f(58));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(37) & vTaskDelete.22,(_f(56) & _f(20) => _f(22));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(37) & vTaskDelete.21,(_f(56) & _f(20) => _f(42));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(37) & vTaskDelete.20,(_f(56) & _f(20) => _f(41));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(37) & vTaskDelete.19,(_f(55) & _f(17) => _f(39));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(37) & vTaskDelete.18,(_f(54) & _f(30) => _f(53));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(37) & vTaskDelete.17,(_f(52) & _f(27) => _f(53));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(37) & vTaskDelete.16,(_f(51) & _f(20) => _f(22));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(37) & vTaskDelete.15,(_f(51) & _f(20) => _f(42));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(37) & vTaskDelete.14,(_f(51) & _f(20) => _f(41));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(37) & vTaskDelete.13,(_f(50) & _f(17) => _f(39));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(37) & vTaskDelete.12,(_f(49) & _f(30) => _f(44));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(37) & vTaskDelete.11,(_f(48) & _f(27) => _f(44));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(37) & vTaskDelete.10,(_f(47) & _f(20) => _f(22));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(37) & vTaskDelete.9,(_f(47) & _f(20) => _f(42));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(37) & vTaskDelete.8,(_f(47) & _f(20) => _f(41));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(37) & vTaskDelete.7,(_f(46) & _f(17) => _f(39));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(37) & vTaskDelete.6,(_f(45) & _f(30) => _f(44));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(37) & vTaskDelete.5,(_f(43) & _f(27) => _f(44));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(37) & vTaskDelete.4,(_f(40) & _f(20) => _f(22));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(37) & vTaskDelete.3,(_f(40) & _f(20) => _f(42));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(37) & vTaskDelete.2,(_f(40) & _f(20) => _f(41));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(37) & vTaskDelete.1,(_f(38) & _f(17) => _f(39));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(31) & vTaskDelayUntil.3,(_f(36) & _f(30) => _f(28));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(31) & vTaskDelayUntil.2,(_f(35) & _f(27) => _f(28));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(31) & vTaskDelayUntil.1,(_f(32) & _f(33) => _f(34));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(25) & vTaskDelay.2,(_f(29) & _f(30) => _f(28));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(25) & vTaskDelay.1,(_f(26) & _f(27) => _f(28));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(15) & xTaskCreate.6,(_f(24) & _f(20) => _f(22));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(15) & xTaskCreate.5,(_f(24) & _f(20) => _f(21));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(15) & xTaskCreate.4,(_f(23) & _f(17) => _f(18));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(15) & xTaskCreate.3,(_f(19) & _f(20) => _f(22));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(15) & xTaskCreate.2,(_f(19) & _f(20) => _f(21));
  _f(1) & _f(2) & _f(8) & _f(14) & _f(15) & xTaskCreate.1,(_f(16) & _f(17) => _f(18));
  _f(1) & _f(2) & _f(8) & AssertionLemmas.2,(_f(9) & _f(12) => _f(13));
  _f(1) & _f(2) & _f(8) & AssertionLemmas.1,(_f(9) & _f(10) => _f(11));
  _f(1) & _f(2) & Initialisation.2,(_f(3) & _f(6) => _f(7));
  _f(1) & _f(2) & Initialisation.1,(_f(3) & _f(4) => _f(5))
END
&
THEORY Formulas IS
  ("`Seen and used machines properties'" & BIT = 0..1 & MAX_DELAY: 0..2147483647 & 1<=MAX_DELAY & NULL_PARAMETER: PARAMETER & PRIORITY: POW(NAT) & TICK: POW(NAT) & TICK = 0..MAX_DELAY & TICK_INCREMENT: TICK*TICK +-> TICK & dom(TICK_INCREMENT) = TICK*TICK & TICK_INCREMENT = %(tick,inc).(tick: TICK & inc: TICK | (tick+inc) mod MAX_DELAY) & QUEUE_NULL: QUEUE & ITEM_NULL: ITEM & ITEM_EMPTY: ITEM & TASK_NULL: TASK & REMOVE_EVENT: TASK*POW(QUEUE)*(QUEUE +-> POW(TASK)) +-> (QUEUE +-> POW(TASK)) & REMOVE_EVENT = %(task,queues,pending).(task: TASK & queues: POW(QUEUE) & pending: QUEUE +-> POW(TASK) | %queue.(queue: queues & queue: dom(pending) | pending(queue)-{task})) & semGIVE_BLOCK_TIME: TICK & IDLE_PRIORITY: PRIORITY & IDLE_PRIORITY = 0 & NAME: FIN(INTEGER) & not(NAME = {}) & PARAMETER: FIN(INTEGER) & not(PARAMETER = {}) & TASK: FIN(INTEGER) & not(TASK = {}) & STACK: FIN(INTEGER) & not(STACK = {}) & TASK_CODE: FIN(INTEGER) & not(TASK_CODE = {}) & ITEM: FIN(INTEGER) & not(ITEM = {}) & QUEUE: FIN(INTEGER) & not(QUEUE = {}) & (1..3)*{SCHEDULER_STATE}: FIN(NATURAL*{SCHEDULER_STATE}) & not((1..3)*{SCHEDULER_STATE} = {}) & (1..2)*{COPY_POSITION}: FIN(NATURAL*{COPY_POSITION}) & not((1..2)*{COPY_POSITION} = {}) & (1..3)*{QUEUE_TYPE}: FIN(NATURAL*{QUEUE_TYPE}) & not((1..3)*{QUEUE_TYPE} = {}) & (1..10)*{ERROR_DEFINITION}: FIN(NATURAL*{ERROR_DEFINITION}) & not((1..10)*{ERROR_DEFINITION} = {}) & configMAX_PRIORITIES: INTEGER & 0<=configMAX_PRIORITIES & configMAX_PRIORITIES<=2147483647 & 1<=configMAX_PRIORITIES & configTOTAL_HEAP_SIZE: INTEGER & 0<=configTOTAL_HEAP_SIZE & configTOTAL_HEAP_SIZE<=2147483647 & configMINIMAL_STACK_SIZE: INTEGER & 0<=configMINIMAL_STACK_SIZE & configMINIMAL_STACK_SIZE<=2147483647 & INCLUDE_uxTaskPriorityGet: BIT & INCLUDE_vTaskDelete: BIT & INCLUDE_vTaskSuspend: BIT & INCLUDE_xTaskGetSchedulerState: BIT & INCLUDE_vTaskPrioritySet: BIT & INCLUDE_xTaskGetCurrentTaskHandle: BIT & INCLUDE_vTaskDelayUntil: BIT & INCLUDE_vTaskDelay: BIT & PRIORITY = 0..configMAX_PRIORITIES-1);
  ("`Included,imported and extended machines properties'" & remove_task: (QUEUE +-> POW(TASK))*POW(TASK) +-> (QUEUE +-> POW(TASK)) & dom(remove_task) = (QUEUE +-> POW(TASK))*POW(TASK) & remove_task = %(q_task,unblocked).(q_task: QUEUE +-> POW(TASK) & unblocked: POW(TASK) | %q1.(q1: QUEUE & q1: dom(q_task) | q_task(q1)-unblocked)) & "`Included,imported and extended machines invariants'" & active: BOOL & tasks: FIN(TASK) & blocked: FIN(TASK) & blocked: POW(tasks) & runable: FIN(TASK) & runable: POW(tasks) & suspended: FIN(TASK) & suspended: POW(tasks) & runable/\blocked = {} & blocked/\suspended = {} & suspended/\runable = {} & tasks = suspended\/blocked\/runable & running: TASK & idle: TASK & (active = TRUE => not(runable = {}) & running: runable & idle: runable) & queues: POW(QUEUE) & queue_items: QUEUE +-> POW(ITEM) & queue_receiving: QUEUE +-> POW(TASK) & queue_sending: QUEUE +-> POW(TASK) & queues = dom(queue_items) & queues = dom(queue_receiving) & queues = dom(queue_sending) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: queue_receiving(q1) => not(tk: queue_receiving(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: queue_sending(q1) => not(tk: queue_sending(q2))) & semaphores: POW(QUEUE) & semaphores: POW(queues) & semaphores_busy: POW(semaphores) & mutexes: POW(QUEUE) & mutexes: POW(queues) & !mt.(mt: mutexes => queue_items(mt) = {} or queue_items(mt) = {ITEM_EMPTY}) & mutexes_busy: POW(mutexes) & !mt.(mt: mutexes_busy => queue_items(mt) = {}) & !mt.(mt: mutexes & not(mt: mutexes_busy) => queue_items(mt) = {ITEM_EMPTY}) & mutex_holder: QUEUE +-> TASK & mutexes = dom(mutex_holder) & "`Included,imported and extended machines assertions'" & (active = TRUE => not(running: suspended)) & (active = TRUE => not(running: blocked)) & (active = TRUE => running: runable) & (active = TRUE => not(idle: suspended)) & (active = TRUE => not(idle: blocked)) & (active = TRUE => idle: runable) & (active = TRUE => not(tasks = {})) & (active = TRUE => not(runable = {})) & !que.(que: QUEUE & not(que: queues) => not(que: mutexes)) & !mt.(mt: mutexes & not(queue_items(mt) = {}) => queue_items(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not(queue_items(mt) = {ITEM_EMPTY}) => queue_items(mt) = {}) & "`Seen and used machines assertions'" & BIT: POW(NATURAL) & configMAX_PRIORITIES: INTEGER & 0<=configMAX_PRIORITIES);
  ("`Local hypotheses'" & idle$0: TASK & running$0: TASK & {}: FIN(TASK) & {}: POW({}) & {}: POW(QUEUE) & {}: QUEUE +-> POW(ITEM) & {}: QUEUE +-> POW(TASK) & dom({}) = {} & {}: QUEUE +-> TASK);
  "`Check that the invariant (tickCount: TICK) is established by the initialisation - ref 3.3'";
  (0: TICK);
  "`Check that the invariant (ran(mutex_holder) <: tasks-{idle}\/{TASK_NULL}) is established by the initialisation - ref 3.3'";
  (ran({}): POW({}-{idle$0}\/{TASK_NULL}));
  ("`Component invariant'" & tickCount: TICK & tickMissed: TICK & ran(mutex_holder): POW(tasks-{idle}\/{TASK_NULL}) & !mt.(mt: queues & mt: mutexes_busy => mutex_holder(mt): tasks & not(mutex_holder(mt) = idle)) & !(que,task).(que: queues & task: TASK & task: queue_sending(que) => task: blocked\/suspended) & !(que,task).(que: queues & task: TASK & task: queue_receiving(que) => task: blocked\/suspended));
  ("`Local hypotheses'" & que: queues & task: TASK & not(task: blocked) & not(task: suspended));
  "`Check assertion (!(que,task).(que: queues & task: TASK & task/:blocked & task/:suspended => task/:queue_receiving(que))) deduction - ref 3.2, 4.2, 5.3'";
  (not(task: queue_receiving(que)));
  "`Check assertion (!(que,task).(que: queues & task: TASK & task/:blocked & task/:suspended => task/:queue_sending(que))) deduction - ref 3.2, 4.2, 5.3'";
  (not(task: queue_sending(que)));
  ("`Component assertions'" & !(que,task).(que: queues & task: TASK & not(task: blocked) & not(task: suspended) => not(task: queue_sending(que))) & !(que,task).(que: queues & task: TASK & not(task: blocked) & not(task: suspended) => not(task: queue_receiving(que))));
  ("`xTaskCreate preconditions in this component'" & pvTaskCode: TASK_CODE & pcName: NAME & usStackDepth: INTEGER & 0<=usStackDepth & usStackDepth<=2147483647 & pvParameters: POW(PARAMETER) & uxPriority: PRIORITY);
  ("`Local hypotheses'" & task: TASK & not(task: tasks) & n_runable: POW(tasks) & n_runable = runable\/{task} & tasks\/{task}: FIN(TASK) & blocked: POW(tasks\/{task}) & n_runable: FIN(TASK) & n_runable: POW(tasks\/{task}) & suspended: POW(tasks\/{task}) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks\/{task} = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  "`Check that the invariant (ran(mutex_holder) <: tasks-{idle}\/{TASK_NULL}) is preserved by the operation - ref 3.4'";
  (ran(mutex_holder): POW((tasks\/{task})-{idle}\/{TASK_NULL}));
  ("`Local hypotheses'" & task: TASK & not(task: tasks) & n_runable: POW(tasks) & n_runable = runable\/{task} & tasks\/{task}: FIN(TASK) & blocked: POW(tasks\/{task}) & n_runable: FIN(TASK) & n_runable: POW(tasks\/{task}) & suspended: POW(tasks\/{task}) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks\/{task} = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: queues & mt: mutexes_busy);
  "`Check that the invariant (!mt.(mt: queues & mt: mutexes_busy => mutex_holder(mt): tasks & mutex_holder(mt)/=idle)) is preserved by the operation - ref 3.4'";
  (mutex_holder(mt): tasks\/{task});
  (not(mutex_holder(mt) = idle));
  ("`Local hypotheses'" & task: TASK & not(task: tasks) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & tasks\/{task}: FIN(TASK) & blocked: POW(tasks\/{task}) & n_runable: FIN(TASK) & n_runable: POW(tasks\/{task}) & suspended: POW(tasks\/{task}) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks\/{task} = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & task: TASK & not(task: tasks) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & tasks\/{task}: FIN(TASK) & blocked: POW(tasks\/{task}) & n_runable: FIN(TASK) & n_runable: POW(tasks\/{task}) & suspended: POW(tasks\/{task}) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks\/{task} = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: queues & mt: mutexes_busy);
  ("`vTaskDelay preconditions in this component'" & xTicksToDelay: TICK & INCLUDE_vTaskDelay = 1 & not(running = idle) & running: runable);
  ("`Local hypotheses'" & 1<=xTicksToDelay & tickWakeup: TICK & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & blocked\/{running}: FIN(TASK) & running: tasks & n_runable: FIN(TASK) & not(running: n_runable) & n_runable/\blocked = {} & blocked\/{running}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/(blocked\/{running})\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked) & not(running$0 = running)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: queue_sending(que));
  "`Check that the invariant (!(que,task).(que: queues & task: TASK & task: queue_sending(que) => task: blocked\/suspended)) is preserved by the operation - ref 3.4'";
  (task: blocked\/{running}\/suspended);
  ("`Local hypotheses'" & 1<=xTicksToDelay & tickWakeup: TICK & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & blocked\/{running}: FIN(TASK) & running: tasks & n_runable: FIN(TASK) & not(running: n_runable) & n_runable/\blocked = {} & blocked\/{running}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/(blocked\/{running})\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked) & not(running$0 = running)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: queue_receiving(que));
  "`Check that the invariant (!(que,task).(que: queues & task: TASK & task: queue_receiving(que) => task: blocked\/suspended)) is preserved by the operation - ref 3.4'";
  ("`vTaskDelayUntil preconditions in this component'" & pxPreviousWakeTime: TICK & xTimeIncrement: TICK & not(running = idle) & INCLUDE_vTaskDelayUntil = 1 & running: runable);
  ("`Local hypotheses'" & 1<=xTimeIncrement);
  "`Check preconditions of called operation, or While loop construction, or Assert predicates'";
  (TICK_INCREMENT(pxPreviousWakeTime,xTimeIncrement): TICK);
  ("`Local hypotheses'" & 1<=xTimeIncrement & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & blocked\/{running}: FIN(TASK) & running: tasks & n_runable: FIN(TASK) & not(running: n_runable) & n_runable/\blocked = {} & blocked\/{running}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/(blocked\/{running})\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked) & not(running$0 = running)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: queue_sending(que));
  ("`Local hypotheses'" & 1<=xTimeIncrement & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & blocked\/{running}: FIN(TASK) & running: tasks & n_runable: FIN(TASK) & not(running: n_runable) & n_runable/\blocked = {} & blocked\/{running}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/(blocked\/{running})\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked) & not(running$0 = running)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: queue_receiving(que));
  ("`vTaskDelete preconditions in this component'" & INCLUDE_vTaskDelete = 1 & pxTaskToDelete: TASK & pxTaskToDelete: tasks & not(pxTaskToDelete = idle) & not(pxTaskToDelete: ran(mutex_holder)));
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToDelete: queue_sending(pxQueue$0) & pxTaskToDelete: runable & n_runable: POW(tasks) & n_runable = runable-{pxTaskToDelete} & pxTaskToDelete = running & running$0: n_runable & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & n_runable: FIN(TASK) & n_runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks-{pxTaskToDelete} = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & (active = TRUE => not(n_runable = {})));
  (ran(mutex_holder): POW(tasks-{pxTaskToDelete}-{idle}\/{TASK_NULL}));
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToDelete: queue_sending(pxQueue$0) & pxTaskToDelete: runable & n_runable: POW(tasks) & n_runable = runable-{pxTaskToDelete} & pxTaskToDelete = running & running$0: n_runable & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & n_runable: FIN(TASK) & n_runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks-{pxTaskToDelete} = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & (active = TRUE => not(n_runable = {})) & mt: queues & mt: mutexes_busy);
  (mutex_holder(mt): tasks);
  (not(mutex_holder(mt) = pxTaskToDelete));
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToDelete: queue_sending(pxQueue$0) & pxTaskToDelete: runable & n_runable: POW(tasks) & n_runable = runable-{pxTaskToDelete} & pxTaskToDelete = running & running$0: n_runable & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & n_runable: FIN(TASK) & n_runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks-{pxTaskToDelete} = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(que));
  (task: blocked\/suspended);
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToDelete: queue_sending(pxQueue$0) & pxTaskToDelete: runable & n_runable: POW(tasks) & n_runable = runable-{pxTaskToDelete} & pxTaskToDelete = running & running$0: n_runable & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & n_runable: FIN(TASK) & n_runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks-{pxTaskToDelete} = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(que));
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToDelete: queue_sending(pxQueue$0) & pxTaskToDelete: runable & n_runable: POW(tasks) & n_runable = runable-{pxTaskToDelete} & not(pxTaskToDelete = running) & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & n_runable: FIN(TASK) & n_runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks-{pxTaskToDelete} = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToDelete: queue_sending(pxQueue$0) & pxTaskToDelete: runable & n_runable: POW(tasks) & n_runable = runable-{pxTaskToDelete} & not(pxTaskToDelete = running) & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & n_runable: FIN(TASK) & n_runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks-{pxTaskToDelete} = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & (active = TRUE => not(n_runable = {})) & mt: queues & mt: mutexes_busy);
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToDelete: queue_sending(pxQueue$0) & pxTaskToDelete: runable & n_runable: POW(tasks) & n_runable = runable-{pxTaskToDelete} & not(pxTaskToDelete = running) & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & n_runable: FIN(TASK) & n_runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks-{pxTaskToDelete} = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(que));
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToDelete: queue_sending(pxQueue$0) & pxTaskToDelete: runable & n_runable: POW(tasks) & n_runable = runable-{pxTaskToDelete} & not(pxTaskToDelete = running) & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & n_runable: FIN(TASK) & n_runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks-{pxTaskToDelete} = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(que));
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToDelete: queue_sending(pxQueue$0) & not(pxTaskToDelete: runable) & pxTaskToDelete: blocked & tasks-{pxTaskToDelete}: FIN(TASK) & blocked-{pxTaskToDelete}: FIN(TASK) & blocked-{pxTaskToDelete}: POW(tasks-{pxTaskToDelete}) & runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & runable/\blocked-{pxTaskToDelete} = {} & blocked-{pxTaskToDelete}/\suspended = {} & tasks-{pxTaskToDelete} = suspended\/blocked-{pxTaskToDelete}\/runable & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & (active = TRUE => not(running: blocked & not(running = pxTaskToDelete))) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})));
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToDelete: queue_sending(pxQueue$0) & not(pxTaskToDelete: runable) & pxTaskToDelete: blocked & tasks-{pxTaskToDelete}: FIN(TASK) & blocked-{pxTaskToDelete}: FIN(TASK) & blocked-{pxTaskToDelete}: POW(tasks-{pxTaskToDelete}) & runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & runable/\blocked-{pxTaskToDelete} = {} & blocked-{pxTaskToDelete}/\suspended = {} & tasks-{pxTaskToDelete} = suspended\/blocked-{pxTaskToDelete}\/runable & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & (active = TRUE => not(running: blocked & not(running = pxTaskToDelete))) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & mt: queues & mt: mutexes_busy);
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToDelete: queue_sending(pxQueue$0) & not(pxTaskToDelete: runable) & pxTaskToDelete: blocked & tasks-{pxTaskToDelete}: FIN(TASK) & blocked-{pxTaskToDelete}: FIN(TASK) & blocked-{pxTaskToDelete}: POW(tasks-{pxTaskToDelete}) & runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & runable/\blocked-{pxTaskToDelete} = {} & blocked-{pxTaskToDelete}/\suspended = {} & tasks-{pxTaskToDelete} = suspended\/blocked-{pxTaskToDelete}\/runable & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & (active = TRUE => not(running: blocked & not(running = pxTaskToDelete))) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & que: queues & task: TASK & task: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(que));
  (task: blocked-{pxTaskToDelete}\/suspended);
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToDelete: queue_sending(pxQueue$0) & not(pxTaskToDelete: runable) & pxTaskToDelete: blocked & tasks-{pxTaskToDelete}: FIN(TASK) & blocked-{pxTaskToDelete}: FIN(TASK) & blocked-{pxTaskToDelete}: POW(tasks-{pxTaskToDelete}) & runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & runable/\blocked-{pxTaskToDelete} = {} & blocked-{pxTaskToDelete}/\suspended = {} & tasks-{pxTaskToDelete} = suspended\/blocked-{pxTaskToDelete}\/runable & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & (active = TRUE => not(running: blocked & not(running = pxTaskToDelete))) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & que: queues & task: TASK & task: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(que));
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToDelete: queue_sending(pxQueue$0) & not(pxTaskToDelete: runable) & not(pxTaskToDelete: blocked) & pxTaskToDelete: suspended & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & runable: POW(tasks-{pxTaskToDelete}) & suspended-{pxTaskToDelete}: FIN(TASK) & suspended-{pxTaskToDelete}: POW(tasks-{pxTaskToDelete}) & blocked/\suspended-{pxTaskToDelete} = {} & suspended-{pxTaskToDelete}/\runable = {} & tasks-{pxTaskToDelete} = suspended-{pxTaskToDelete}\/blocked\/runable & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & (active = TRUE => not(running: suspended & not(running = pxTaskToDelete))) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})));
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToDelete: queue_sending(pxQueue$0) & not(pxTaskToDelete: runable) & not(pxTaskToDelete: blocked) & pxTaskToDelete: suspended & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & runable: POW(tasks-{pxTaskToDelete}) & suspended-{pxTaskToDelete}: FIN(TASK) & suspended-{pxTaskToDelete}: POW(tasks-{pxTaskToDelete}) & blocked/\suspended-{pxTaskToDelete} = {} & suspended-{pxTaskToDelete}/\runable = {} & tasks-{pxTaskToDelete} = suspended-{pxTaskToDelete}\/blocked\/runable & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & (active = TRUE => not(running: suspended & not(running = pxTaskToDelete))) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & mt: queues & mt: mutexes_busy);
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToDelete: queue_sending(pxQueue$0) & not(pxTaskToDelete: runable) & not(pxTaskToDelete: blocked) & pxTaskToDelete: suspended & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & runable: POW(tasks-{pxTaskToDelete}) & suspended-{pxTaskToDelete}: FIN(TASK) & suspended-{pxTaskToDelete}: POW(tasks-{pxTaskToDelete}) & blocked/\suspended-{pxTaskToDelete} = {} & suspended-{pxTaskToDelete}/\runable = {} & tasks-{pxTaskToDelete} = suspended-{pxTaskToDelete}\/blocked\/runable & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & (active = TRUE => not(running: suspended & not(running = pxTaskToDelete))) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & que: queues & task: TASK & task: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(que));
  (task: blocked\/suspended-{pxTaskToDelete});
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToDelete: queue_sending(pxQueue$0) & not(pxTaskToDelete: runable) & not(pxTaskToDelete: blocked) & pxTaskToDelete: suspended & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & runable: POW(tasks-{pxTaskToDelete}) & suspended-{pxTaskToDelete}: FIN(TASK) & suspended-{pxTaskToDelete}: POW(tasks-{pxTaskToDelete}) & blocked/\suspended-{pxTaskToDelete} = {} & suspended-{pxTaskToDelete}/\runable = {} & tasks-{pxTaskToDelete} = suspended-{pxTaskToDelete}\/blocked\/runable & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & (active = TRUE => not(running: suspended & not(running = pxTaskToDelete))) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & que: queues & task: TASK & task: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(que));
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToDelete: queue_sending(pxQueue$0) & not(pxTaskToDelete: runable) & not(pxTaskToDelete: blocked) & not(pxTaskToDelete: suspended) & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & tasks-{pxTaskToDelete} = suspended\/blocked\/runable & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})));
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToDelete: queue_sending(pxQueue$0) & not(pxTaskToDelete: runable) & not(pxTaskToDelete: blocked) & not(pxTaskToDelete: suspended) & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & tasks-{pxTaskToDelete} = suspended\/blocked\/runable & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & mt: queues & mt: mutexes_busy);
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToDelete: queue_sending(pxQueue$0) & not(pxTaskToDelete: runable) & not(pxTaskToDelete: blocked) & not(pxTaskToDelete: suspended) & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & tasks-{pxTaskToDelete} = suspended\/blocked\/runable & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & que: queues & task: TASK & task: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(que));
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToDelete: queue_sending(pxQueue$0) & not(pxTaskToDelete: runable) & not(pxTaskToDelete: blocked) & not(pxTaskToDelete: suspended) & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & tasks-{pxTaskToDelete} = suspended\/blocked\/runable & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & que: queues & task: TASK & task: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(que));
  ("`vTaskEndScheduler preconditions in this component'" & active = TRUE);
  ("`Local hypotheses'" & {}: FIN(TASK) & {}: POW({}) & {}: POW(QUEUE) & {}: QUEUE +-> POW(ITEM) & {}: QUEUE +-> POW(TASK) & dom({}) = {} & {}: QUEUE +-> TASK);
  (ran({}): POW({}-{idle}\/{TASK_NULL}));
  ("`vTaskResume preconditions in this component'" & INCLUDE_vTaskSuspend = 1 & not(suspended = {}) & pxTaskToResume: TASK & pxTaskToResume: suspended);
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToResume: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToResume: queue_sending(pxQueue$0) & n_runable: POW(tasks) & n_runable = runable\/{pxTaskToResume} & running$0: n_runable & n_runable: FIN(TASK) & suspended-{pxTaskToResume}: FIN(TASK) & suspended-{pxTaskToResume}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{pxTaskToResume} = {} & suspended-{pxTaskToResume}/\n_runable = {} & tasks = suspended-{pxTaskToResume}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToResume}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToResume}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToResume}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToResume}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToResume}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToResume}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToResume}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToResume}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToResume}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToResume}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToResume}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToResume}})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = pxTaskToResume))) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = pxTaskToResume))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToResume}})(que));
  (task: blocked\/suspended-{pxTaskToResume});
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToResume: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToResume: queue_sending(pxQueue$0) & n_runable: POW(tasks) & n_runable = runable\/{pxTaskToResume} & running$0: n_runable & n_runable: FIN(TASK) & suspended-{pxTaskToResume}: FIN(TASK) & suspended-{pxTaskToResume}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{pxTaskToResume} = {} & suspended-{pxTaskToResume}/\n_runable = {} & tasks = suspended-{pxTaskToResume}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToResume}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToResume}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToResume}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToResume}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToResume}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToResume}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToResume}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToResume}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToResume}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToResume}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToResume}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToResume}})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = pxTaskToResume))) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = pxTaskToResume))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToResume}})(que));
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToResume: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToResume: queue_sending(pxQueue$0) & n_runable: POW(tasks) & n_runable = runable\/{pxTaskToResume} & n_runable: FIN(TASK) & suspended-{pxTaskToResume}: FIN(TASK) & suspended-{pxTaskToResume}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{pxTaskToResume} = {} & suspended-{pxTaskToResume}/\n_runable = {} & tasks = suspended-{pxTaskToResume}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToResume}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToResume}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToResume}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToResume}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToResume}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToResume}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToResume}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToResume}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToResume}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToResume}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToResume}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToResume}})(q2))) & (active = TRUE => not(running: suspended & not(running = pxTaskToResume))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = pxTaskToResume))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToResume}})(que));
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToResume: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToResume: queue_sending(pxQueue$0) & n_runable: POW(tasks) & n_runable = runable\/{pxTaskToResume} & n_runable: FIN(TASK) & suspended-{pxTaskToResume}: FIN(TASK) & suspended-{pxTaskToResume}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{pxTaskToResume} = {} & suspended-{pxTaskToResume}/\n_runable = {} & tasks = suspended-{pxTaskToResume}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToResume}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToResume}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToResume}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToResume}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToResume}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToResume}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToResume}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToResume}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToResume}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToResume}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToResume}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToResume}})(q2))) & (active = TRUE => not(running: suspended & not(running = pxTaskToResume))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = pxTaskToResume))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToResume}})(que));
  ("`xQueueGenericSend preconditions in this component'" & pxQueue: queues & pvItemToQueue: ITEM & xTicksToWait: TICK & copy_position: (1..2)*{COPY_POSITION} & not(running = idle) & running: runable);
  ("`Local hypotheses'" & q1: queues);
  (not(running: queue_sending(q1)));
  (not(running: queue_receiving(q1)));
  (running: tasks);
  ("`Local hypotheses'" & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & blocked\/{running}: FIN(TASK) & running: tasks & n_runable: FIN(TASK) & not(running: n_runable) & n_runable/\blocked = {} & blocked\/{running}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/(blocked\/{running})\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q1) => not(tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked) & not(running$0 = running)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(que));
  ("`Local hypotheses'" & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & blocked\/{running}: FIN(TASK) & running: tasks & n_runable: FIN(TASK) & not(running: n_runable) & n_runable/\blocked = {} & blocked\/{running}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/(blocked\/{running})\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q1) => not(tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked) & not(running$0 = running)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: queue_receiving(que));
  ("`Local hypotheses'" & task: TASK & task: blocked & task: queue_receiving(pxQueue) & not(task: queue_sending(pxQueue)));
  ("`Local hypotheses'" & task: TASK & task: blocked & task: queue_receiving(pxQueue) & not(task: queue_sending(pxQueue)) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & task: suspended & pxQueue: mutexes & pxQueue: mutexes_busy & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})}: QUEUE +-> POW(ITEM) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})}) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & !mt.(mt: mutexes => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {} or (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) & mutexes_busy-{pxQueue}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = pxQueue) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {}) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = pxQueue)) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) & mutex_holder<+{pxQueue|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{pxQueue|->TASK_NULL}) & (active = TRUE => not(running$0: suspended & not(running$0 = task))) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {}) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {}));
  (ran(mutex_holder<+{pxQueue|->TASK_NULL}): POW(tasks-{idle}\/{TASK_NULL}));
  ("`Local hypotheses'" & task: TASK & task: blocked & task: queue_receiving(pxQueue) & not(task: queue_sending(pxQueue)) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & task: suspended & pxQueue: mutexes & pxQueue: mutexes_busy & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})}: QUEUE +-> POW(ITEM) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})}) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & !mt.(mt: mutexes => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {} or (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) & mutexes_busy-{pxQueue}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = pxQueue) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {}) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = pxQueue)) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) & mutex_holder<+{pxQueue|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{pxQueue|->TASK_NULL}) & (active = TRUE => not(running$0: suspended & not(running$0 = task))) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {}) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {}) & mt: queues & mt: mutexes_busy & not(mt = pxQueue));
  ((mutex_holder<+{pxQueue|->TASK_NULL})(mt): tasks);
  (not((mutex_holder<+{pxQueue|->TASK_NULL})(mt) = idle));
  ("`Local hypotheses'" & task: TASK & task: blocked & task: queue_receiving(pxQueue) & not(task: queue_sending(pxQueue)) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & task: suspended & pxQueue: mutexes & pxQueue: mutexes_busy & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})}: QUEUE +-> POW(ITEM) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})}) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & !mt.(mt: mutexes => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {} or (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) & mutexes_busy-{pxQueue}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = pxQueue) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {}) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = pxQueue)) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) & mutex_holder<+{pxQueue|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{pxQueue|->TASK_NULL}) & (active = TRUE => not(running$0: suspended & not(running$0 = task))) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {}) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {}) & que$0: queues & task$0: TASK & task$0: queue_sending(que$0));
  (task$0: blocked-{task}\/suspended-{task});
  ("`Local hypotheses'" & task: TASK & task: blocked & task: queue_receiving(pxQueue) & not(task: queue_sending(pxQueue)) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & task: suspended & pxQueue: mutexes & pxQueue: mutexes_busy & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})}: QUEUE +-> POW(ITEM) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})}) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & !mt.(mt: mutexes => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {} or (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) & mutexes_busy-{pxQueue}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = pxQueue) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {}) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = pxQueue)) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) & mutex_holder<+{pxQueue|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{pxQueue|->TASK_NULL}) & (active = TRUE => not(running$0: suspended & not(running$0 = task))) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {}) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {}) & que$0: queues & task$0: TASK & task$0: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que$0));
  ("`Local hypotheses'" & task: TASK & task: blocked & task: queue_receiving(pxQueue) & not(task: queue_sending(pxQueue)) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & task: suspended & pxQueue: mutexes & not(pxQueue: mutexes_busy) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = task))) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que$0: queues & task$0: TASK & task$0: queue_sending(que$0));
  ("`Local hypotheses'" & task: TASK & task: blocked & task: queue_receiving(pxQueue) & not(task: queue_sending(pxQueue)) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & task: suspended & pxQueue: mutexes & not(pxQueue: mutexes_busy) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = task))) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que$0: queues & task$0: TASK & task$0: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que$0));
  ("`Local hypotheses'" & task: TASK & task: blocked & task: queue_receiving(pxQueue) & not(task: queue_sending(pxQueue)) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & task: suspended & not(pxQueue: mutexes) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & !mt.(mt: mutexes => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {} or (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes_busy => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {}) & !mt.(mt: mutexes & not(mt: mutexes_busy) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {ITEM_EMPTY}) & (active = TRUE => not(running$0: suspended & not(running$0 = task))) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {}) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {ITEM_EMPTY}) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {}) & que$0: queues & task$0: TASK & task$0: queue_sending(que$0));
  ("`Local hypotheses'" & task: TASK & task: blocked & task: queue_receiving(pxQueue) & not(task: queue_sending(pxQueue)) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & task: suspended & not(pxQueue: mutexes) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & !mt.(mt: mutexes => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {} or (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes_busy => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {}) & !mt.(mt: mutexes & not(mt: mutexes_busy) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {ITEM_EMPTY}) & (active = TRUE => not(running$0: suspended & not(running$0 = task))) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {}) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {ITEM_EMPTY}) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {}) & que$0: queues & task$0: TASK & task$0: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que$0));
  ("`Local hypotheses'" & task: TASK & task: blocked & task: queue_receiving(pxQueue) & not(task: queue_sending(pxQueue)) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & not(task: suspended) & pxQueue: mutexes & pxQueue: mutexes_busy & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})}: QUEUE +-> POW(ITEM) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})}) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & !mt.(mt: mutexes => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {} or (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) & mutexes_busy-{pxQueue}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = pxQueue) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {}) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = pxQueue)) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) & mutex_holder<+{pxQueue|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{pxQueue|->TASK_NULL}) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {}) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {}));
  ("`Local hypotheses'" & task: TASK & task: blocked & task: queue_receiving(pxQueue) & not(task: queue_sending(pxQueue)) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & not(task: suspended) & pxQueue: mutexes & pxQueue: mutexes_busy & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})}: QUEUE +-> POW(ITEM) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})}) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & !mt.(mt: mutexes => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {} or (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) & mutexes_busy-{pxQueue}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = pxQueue) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {}) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = pxQueue)) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) & mutex_holder<+{pxQueue|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{pxQueue|->TASK_NULL}) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {}) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {}) & mt: queues & mt: mutexes_busy & not(mt = pxQueue));
  ("`Local hypotheses'" & task: TASK & task: blocked & task: queue_receiving(pxQueue) & not(task: queue_sending(pxQueue)) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & not(task: suspended) & pxQueue: mutexes & pxQueue: mutexes_busy & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})}: QUEUE +-> POW(ITEM) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})}) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & !mt.(mt: mutexes => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {} or (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) & mutexes_busy-{pxQueue}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = pxQueue) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {}) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = pxQueue)) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) & mutex_holder<+{pxQueue|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{pxQueue|->TASK_NULL}) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {}) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {}) & que$0: queues & task$0: TASK & task$0: queue_sending(que$0));
  (task$0: blocked-{task}\/suspended);
  ("`Local hypotheses'" & task: TASK & task: blocked & task: queue_receiving(pxQueue) & not(task: queue_sending(pxQueue)) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & not(task: suspended) & pxQueue: mutexes & pxQueue: mutexes_busy & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})}: QUEUE +-> POW(ITEM) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})}) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & !mt.(mt: mutexes => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {} or (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) & mutexes_busy-{pxQueue}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = pxQueue) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {}) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = pxQueue)) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) & mutex_holder<+{pxQueue|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{pxQueue|->TASK_NULL}) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {}) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {}) & que$0: queues & task$0: TASK & task$0: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que$0));
  ("`Local hypotheses'" & task: TASK & task: blocked & task: queue_receiving(pxQueue) & not(task: queue_sending(pxQueue)) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & not(task: suspended) & pxQueue: mutexes & not(pxQueue: mutexes_busy) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que$0: queues & task$0: TASK & task$0: queue_sending(que$0));
  ("`Local hypotheses'" & task: TASK & task: blocked & task: queue_receiving(pxQueue) & not(task: queue_sending(pxQueue)) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & not(task: suspended) & pxQueue: mutexes & not(pxQueue: mutexes_busy) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que$0: queues & task$0: TASK & task$0: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que$0));
  ("`Local hypotheses'" & task: TASK & task: blocked & task: queue_receiving(pxQueue) & not(task: queue_sending(pxQueue)) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & not(task: suspended) & not(pxQueue: mutexes) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & !mt.(mt: mutexes => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {} or (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes_busy => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {}) & !mt.(mt: mutexes & not(mt: mutexes_busy) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {ITEM_EMPTY}) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {}) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {ITEM_EMPTY}) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {}) & que$0: queues & task$0: TASK & task$0: queue_sending(que$0));
  ("`Local hypotheses'" & task: TASK & task: blocked & task: queue_receiving(pxQueue) & not(task: queue_sending(pxQueue)) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & not(task: suspended) & not(pxQueue: mutexes) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & !mt.(mt: mutexes => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {} or (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes_busy => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {}) & !mt.(mt: mutexes & not(mt: mutexes_busy) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {ITEM_EMPTY}) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {}) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {ITEM_EMPTY}) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {}) & que$0: queues & task$0: TASK & task$0: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que$0));
  ("`Local hypotheses'" & task: TASK & task: blocked & task: queue_receiving(pxQueue) & not(task: queue_sending(pxQueue)) & n_runable: POW(tasks) & n_runable = runable\/{task} & task: suspended & pxQueue: mutexes & pxQueue: mutexes_busy & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})}: QUEUE +-> POW(ITEM) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})}) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & !mt.(mt: mutexes => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {} or (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) & mutexes_busy-{pxQueue}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = pxQueue) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {}) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = pxQueue)) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) & mutex_holder<+{pxQueue|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{pxQueue|->TASK_NULL}) & (active = TRUE => not(running: suspended & not(running = task))) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {}) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {}));
  ("`Local hypotheses'" & task: TASK & task: blocked & task: queue_receiving(pxQueue) & not(task: queue_sending(pxQueue)) & n_runable: POW(tasks) & n_runable = runable\/{task} & task: suspended & pxQueue: mutexes & pxQueue: mutexes_busy & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})}: QUEUE +-> POW(ITEM) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})}) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & !mt.(mt: mutexes => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {} or (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) & mutexes_busy-{pxQueue}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = pxQueue) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {}) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = pxQueue)) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) & mutex_holder<+{pxQueue|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{pxQueue|->TASK_NULL}) & (active = TRUE => not(running: suspended & not(running = task))) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {}) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {}) & mt: queues & mt: mutexes_busy & not(mt = pxQueue));
  ("`Local hypotheses'" & task: TASK & task: blocked & task: queue_receiving(pxQueue) & not(task: queue_sending(pxQueue)) & n_runable: POW(tasks) & n_runable = runable\/{task} & task: suspended & pxQueue: mutexes & pxQueue: mutexes_busy & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})}: QUEUE +-> POW(ITEM) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})}) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & !mt.(mt: mutexes => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {} or (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) & mutexes_busy-{pxQueue}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = pxQueue) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {}) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = pxQueue)) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) & mutex_holder<+{pxQueue|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{pxQueue|->TASK_NULL}) & (active = TRUE => not(running: suspended & not(running = task))) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {}) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {}) & que$0: queues & task$0: TASK & task$0: queue_sending(que$0));
  ("`Local hypotheses'" & task: TASK & task: blocked & task: queue_receiving(pxQueue) & not(task: queue_sending(pxQueue)) & n_runable: POW(tasks) & n_runable = runable\/{task} & task: suspended & pxQueue: mutexes & pxQueue: mutexes_busy & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})}: QUEUE +-> POW(ITEM) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})}) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & !mt.(mt: mutexes => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {} or (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) & mutexes_busy-{pxQueue}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = pxQueue) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {}) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = pxQueue)) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) & mutex_holder<+{pxQueue|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{pxQueue|->TASK_NULL}) & (active = TRUE => not(running: suspended & not(running = task))) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {}) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {}) & que$0: queues & task$0: TASK & task$0: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que$0));
  ("`Local hypotheses'" & task: TASK & task: blocked & task: queue_receiving(pxQueue) & not(task: queue_sending(pxQueue)) & n_runable: POW(tasks) & n_runable = runable\/{task} & task: suspended & pxQueue: mutexes & not(pxQueue: mutexes_busy) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & (active = TRUE => not(running: suspended & not(running = task))) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que$0: queues & task$0: TASK & task$0: queue_sending(que$0));
  ("`Local hypotheses'" & task: TASK & task: blocked & task: queue_receiving(pxQueue) & not(task: queue_sending(pxQueue)) & n_runable: POW(tasks) & n_runable = runable\/{task} & task: suspended & pxQueue: mutexes & not(pxQueue: mutexes_busy) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & (active = TRUE => not(running: suspended & not(running = task))) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que$0: queues & task$0: TASK & task$0: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que$0));
  ("`Local hypotheses'" & task: TASK & task: blocked & task: queue_receiving(pxQueue) & not(task: queue_sending(pxQueue)) & n_runable: POW(tasks) & n_runable = runable\/{task} & task: suspended & not(pxQueue: mutexes) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & !mt.(mt: mutexes => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {} or (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes_busy => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {}) & !mt.(mt: mutexes & not(mt: mutexes_busy) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {ITEM_EMPTY}) & (active = TRUE => not(running: suspended & not(running = task))) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {}) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {ITEM_EMPTY}) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {}) & que$0: queues & task$0: TASK & task$0: queue_sending(que$0));
  ("`Local hypotheses'" & task: TASK & task: blocked & task: queue_receiving(pxQueue) & not(task: queue_sending(pxQueue)) & n_runable: POW(tasks) & n_runable = runable\/{task} & task: suspended & not(pxQueue: mutexes) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & !mt.(mt: mutexes => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {} or (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes_busy => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {}) & !mt.(mt: mutexes & not(mt: mutexes_busy) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {ITEM_EMPTY}) & (active = TRUE => not(running: suspended & not(running = task))) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {}) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {ITEM_EMPTY}) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {}) & que$0: queues & task$0: TASK & task$0: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que$0));
  ("`Local hypotheses'" & task: TASK & task: blocked & task: queue_receiving(pxQueue) & not(task: queue_sending(pxQueue)) & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task: suspended) & pxQueue: mutexes & pxQueue: mutexes_busy & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})}: QUEUE +-> POW(ITEM) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})}) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & !mt.(mt: mutexes => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {} or (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) & mutexes_busy-{pxQueue}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = pxQueue) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {}) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = pxQueue)) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) & mutex_holder<+{pxQueue|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{pxQueue|->TASK_NULL}) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {}) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {}));
  ("`Local hypotheses'" & task: TASK & task: blocked & task: queue_receiving(pxQueue) & not(task: queue_sending(pxQueue)) & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task: suspended) & pxQueue: mutexes & pxQueue: mutexes_busy & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})}: QUEUE +-> POW(ITEM) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})}) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & !mt.(mt: mutexes => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {} or (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) & mutexes_busy-{pxQueue}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = pxQueue) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {}) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = pxQueue)) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) & mutex_holder<+{pxQueue|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{pxQueue|->TASK_NULL}) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {}) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {}) & mt: queues & mt: mutexes_busy & not(mt = pxQueue));
  ("`Local hypotheses'" & task: TASK & task: blocked & task: queue_receiving(pxQueue) & not(task: queue_sending(pxQueue)) & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task: suspended) & pxQueue: mutexes & pxQueue: mutexes_busy & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})}: QUEUE +-> POW(ITEM) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})}) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & !mt.(mt: mutexes => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {} or (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) & mutexes_busy-{pxQueue}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = pxQueue) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {}) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = pxQueue)) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) & mutex_holder<+{pxQueue|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{pxQueue|->TASK_NULL}) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {}) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {}) & que$0: queues & task$0: TASK & task$0: queue_sending(que$0));
  ("`Local hypotheses'" & task: TASK & task: blocked & task: queue_receiving(pxQueue) & not(task: queue_sending(pxQueue)) & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task: suspended) & pxQueue: mutexes & pxQueue: mutexes_busy & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})}: QUEUE +-> POW(ITEM) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})}) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & !mt.(mt: mutexes => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {} or (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) & mutexes_busy-{pxQueue}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = pxQueue) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {}) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = pxQueue)) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) & mutex_holder<+{pxQueue|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{pxQueue|->TASK_NULL}) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {}) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {ITEM_EMPTY}) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{ITEM_EMPTY})})(mt) = {}) & que$0: queues & task$0: TASK & task$0: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que$0));
  ("`Local hypotheses'" & task: TASK & task: blocked & task: queue_receiving(pxQueue) & not(task: queue_sending(pxQueue)) & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task: suspended) & pxQueue: mutexes & not(pxQueue: mutexes_busy) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que$0: queues & task$0: TASK & task$0: queue_sending(que$0));
  ("`Local hypotheses'" & task: TASK & task: blocked & task: queue_receiving(pxQueue) & not(task: queue_sending(pxQueue)) & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task: suspended) & pxQueue: mutexes & not(pxQueue: mutexes_busy) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que$0: queues & task$0: TASK & task$0: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que$0));
  ("`Local hypotheses'" & task: TASK & task: blocked & task: queue_receiving(pxQueue) & not(task: queue_sending(pxQueue)) & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task: suspended) & not(pxQueue: mutexes) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & !mt.(mt: mutexes => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {} or (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes_busy => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {}) & !mt.(mt: mutexes & not(mt: mutexes_busy) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {ITEM_EMPTY}) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {}) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {ITEM_EMPTY}) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {}) & que$0: queues & task$0: TASK & task$0: queue_sending(que$0));
  ("`Local hypotheses'" & task: TASK & task: blocked & task: queue_receiving(pxQueue) & not(task: queue_sending(pxQueue)) & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task: suspended) & not(pxQueue: mutexes) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & !mt.(mt: mutexes => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {} or (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes_busy => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {}) & !mt.(mt: mutexes & not(mt: mutexes_busy) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {ITEM_EMPTY}) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {}) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {ITEM_EMPTY}) => (queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})})(mt) = {}) & que$0: queues & task$0: TASK & task$0: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que$0));
  ("`Local hypotheses'" & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & n_runable: FIN(TASK) & suspended\/{running}: FIN(TASK) & running: tasks & n_runable/\blocked = {} & not(running: blocked) & suspended\/{running}/\n_runable = {} & tasks = suspended\/{running}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q1) => not(tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q2))) & (active = TRUE => not(running$0: suspended) & not(running$0 = running)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(que));
  (task: blocked\/(suspended\/{running}));
  ("`Local hypotheses'" & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & n_runable: FIN(TASK) & suspended\/{running}: FIN(TASK) & running: tasks & n_runable/\blocked = {} & not(running: blocked) & suspended\/{running}/\n_runable = {} & tasks = suspended\/{running}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q1) => not(tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q2))) & (active = TRUE => not(running$0: suspended) & not(running$0 = running)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: queue_receiving(que));
  ("`xTaskResumeAll preconditions in this component'" & active = FALSE);
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked));
  (unblocked: POW(TASK));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_receiving = {}) & not(queue_sending = {}) & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & running$0: n_runable & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0: unblocked))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  "`Check that the invariant (tickCount: TICK) is preserved by the operation - ref 3.4'";
  (TICK_INCREMENT(tickCount,tickMissed): TICK);
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_receiving = {}) & not(queue_sending = {}) & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & running$0: n_runable & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0: unblocked))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: remove_task(queue_sending,unblocked)(que));
  (task: blocked-unblocked\/suspended);
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_receiving = {}) & not(queue_sending = {}) & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & running$0: n_runable & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0: unblocked))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: remove_task(queue_receiving,unblocked)(que));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_receiving = {}) & not(queue_sending = {}) & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & (active = TRUE => not(running: blocked & not(running: unblocked))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_receiving = {}) & not(queue_sending = {}) & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & (active = TRUE => not(running: blocked & not(running: unblocked))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: remove_task(queue_sending,unblocked)(que));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_receiving = {}) & not(queue_sending = {}) & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & (active = TRUE => not(running: blocked & not(running: unblocked))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: remove_task(queue_receiving,unblocked)(que));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_receiving = {}) & not(queue_sending = {}) & unblocked = {} & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_receiving = {}) & not(queue_sending = {}) & unblocked = {} & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & que: queues & task: TASK & task: remove_task(queue_sending,unblocked)(que));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_receiving = {}) & not(queue_sending = {}) & unblocked = {} & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & que: queues & task: TASK & task: remove_task(queue_receiving,unblocked)(que));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_receiving = {}) & queue_sending = {} & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & running$0: n_runable & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0: unblocked))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_receiving = {}) & queue_sending = {} & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & running$0: n_runable & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0: unblocked))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: queue_sending(que));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_receiving = {}) & queue_sending = {} & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & running$0: n_runable & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0: unblocked))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: remove_task(queue_receiving,unblocked)(que));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_receiving = {}) & queue_sending = {} & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & (active = TRUE => not(running: blocked & not(running: unblocked))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_receiving = {}) & queue_sending = {} & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & (active = TRUE => not(running: blocked & not(running: unblocked))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: queue_sending(que));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_receiving = {}) & queue_sending = {} & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & (active = TRUE => not(running: blocked & not(running: unblocked))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: remove_task(queue_receiving,unblocked)(que));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_receiving = {}) & queue_sending = {} & unblocked = {} & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_receiving = {}) & queue_sending = {} & unblocked = {} & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & que: queues & task: TASK & task: remove_task(queue_receiving,unblocked)(que));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_receiving = {} & not(queue_sending = {}) & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & running$0: n_runable & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0: unblocked))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_receiving = {} & not(queue_sending = {}) & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & running$0: n_runable & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0: unblocked))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: remove_task(queue_sending,unblocked)(que));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_receiving = {} & not(queue_sending = {}) & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & running$0: n_runable & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0: unblocked))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: queue_receiving(que));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_receiving = {} & not(queue_sending = {}) & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & (active = TRUE => not(running: blocked & not(running: unblocked))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_receiving = {} & not(queue_sending = {}) & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & (active = TRUE => not(running: blocked & not(running: unblocked))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: remove_task(queue_sending,unblocked)(que));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_receiving = {} & not(queue_sending = {}) & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & (active = TRUE => not(running: blocked & not(running: unblocked))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: queue_receiving(que));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_receiving = {} & not(queue_sending = {}) & unblocked = {} & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_receiving = {} & not(queue_sending = {}) & unblocked = {} & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & que: queues & task: TASK & task: remove_task(queue_sending,unblocked)(que));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_receiving = {} & queue_sending = {} & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & running$0: n_runable & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0: unblocked))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_receiving = {} & queue_sending = {} & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & running$0: n_runable & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0: unblocked))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: queue_sending(que));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_receiving = {} & queue_sending = {} & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & running$0: n_runable & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0: unblocked))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: queue_receiving(que));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_receiving = {} & queue_sending = {} & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & (active = TRUE => not(running: blocked & not(running: unblocked))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_receiving = {} & queue_sending = {} & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & (active = TRUE => not(running: blocked & not(running: unblocked))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: queue_sending(que));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_receiving = {} & queue_sending = {} & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & (active = TRUE => not(running: blocked & not(running: unblocked))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: queue_receiving(que));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_receiving = {} & queue_sending = {} & unblocked = {});
  ("`vTaskStartScheduler preconditions in this component'" & active = FALSE);
  ("`Local hypotheses'" & idle_task: TASK & not(idle_task: tasks) & n_runable: POW(tasks) & n_runable = runable\/{idle_task} & running$0: n_runable & tasks\/{idle_task}: FIN(TASK) & blocked: POW(tasks\/{idle_task}) & runable: POW(tasks\/{idle_task}) & suspended: POW(tasks\/{idle_task}) & tasks\/{idle_task} = suspended\/blocked\/runable & running$0: TASK & not(runable = {}) & running$0: runable & idle_task: runable & not(running$0: suspended) & not(running$0: blocked) & not(idle_task: suspended) & not(idle_task: blocked));
  (ran(mutex_holder): POW((tasks\/{idle_task})-{idle_task}\/{TASK_NULL}));
  ("`Local hypotheses'" & idle_task: TASK & not(idle_task: tasks) & n_runable: POW(tasks) & n_runable = runable\/{idle_task} & running$0: n_runable & tasks\/{idle_task}: FIN(TASK) & blocked: POW(tasks\/{idle_task}) & runable: POW(tasks\/{idle_task}) & suspended: POW(tasks\/{idle_task}) & tasks\/{idle_task} = suspended\/blocked\/runable & running$0: TASK & not(runable = {}) & running$0: runable & idle_task: runable & not(running$0: suspended) & not(running$0: blocked) & not(idle_task: suspended) & not(idle_task: blocked) & mt: queues & mt: mutexes_busy);
  (mutex_holder(mt): tasks\/{idle_task});
  (not(mutex_holder(mt) = idle_task));
  ("`vTaskSuspend preconditions in this component'" & INCLUDE_vTaskSuspend = 1 & pxTaskToSuspend: TASK & pxTaskToSuspend: tasks & not(pxTaskToSuspend = idle));
  ("`Local hypotheses'" & not(pxTaskToSuspend: suspended) & pxQueue: queues & pxTaskToSuspend: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToSuspend: queue_sending(pxQueue$0) & pxTaskToSuspend: runable & n_runable: POW(tasks) & n_runable = runable-{pxTaskToSuspend} & pxTaskToSuspend = running & running$0: n_runable & n_runable: FIN(TASK) & suspended\/{pxTaskToSuspend}: FIN(TASK) & n_runable/\blocked = {} & not(pxTaskToSuspend: blocked) & suspended\/{pxTaskToSuspend}/\n_runable = {} & tasks = suspended\/{pxTaskToSuspend}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q2))) & (active = TRUE => not(running$0: suspended) & not(running$0 = pxTaskToSuspend)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(que));
  "`Check that the invariant (!(que,task).(que: queues & task: TASK & task: queue_sending(que) => task: blocked\/suspended)) is preserved by the operation - ref 3.4'";
  (task: blocked\/(suspended\/{pxTaskToSuspend}));
  ("`Local hypotheses'" & not(pxTaskToSuspend: suspended) & pxQueue: queues & pxTaskToSuspend: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToSuspend: queue_sending(pxQueue$0) & pxTaskToSuspend: runable & n_runable: POW(tasks) & n_runable = runable-{pxTaskToSuspend} & pxTaskToSuspend = running & running$0: n_runable & n_runable: FIN(TASK) & suspended\/{pxTaskToSuspend}: FIN(TASK) & n_runable/\blocked = {} & not(pxTaskToSuspend: blocked) & suspended\/{pxTaskToSuspend}/\n_runable = {} & tasks = suspended\/{pxTaskToSuspend}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q2))) & (active = TRUE => not(running$0: suspended) & not(running$0 = pxTaskToSuspend)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(que));
  "`Check that the invariant (!(que,task).(que: queues & task: TASK & task: queue_receiving(que) => task: blocked\/suspended)) is preserved by the operation - ref 3.4'";
  ("`Local hypotheses'" & not(pxTaskToSuspend: suspended) & pxQueue: queues & pxTaskToSuspend: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToSuspend: queue_sending(pxQueue$0) & pxTaskToSuspend: runable & n_runable: POW(tasks) & n_runable = runable-{pxTaskToSuspend} & not(pxTaskToSuspend = running) & n_runable: FIN(TASK) & suspended\/{pxTaskToSuspend}: FIN(TASK) & n_runable/\blocked = {} & not(pxTaskToSuspend: blocked) & suspended\/{pxTaskToSuspend}/\n_runable = {} & tasks = suspended\/{pxTaskToSuspend}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q2))) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(que));
  ("`Local hypotheses'" & not(pxTaskToSuspend: suspended) & pxQueue: queues & pxTaskToSuspend: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToSuspend: queue_sending(pxQueue$0) & pxTaskToSuspend: runable & n_runable: POW(tasks) & n_runable = runable-{pxTaskToSuspend} & not(pxTaskToSuspend = running) & n_runable: FIN(TASK) & suspended\/{pxTaskToSuspend}: FIN(TASK) & n_runable/\blocked = {} & not(pxTaskToSuspend: blocked) & suspended\/{pxTaskToSuspend}/\n_runable = {} & tasks = suspended\/{pxTaskToSuspend}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q2))) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(que));
  ("`Local hypotheses'" & not(pxTaskToSuspend: suspended) & pxQueue: queues & pxTaskToSuspend: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToSuspend: queue_sending(pxQueue$0) & not(pxTaskToSuspend: runable) & pxTaskToSuspend: blocked & blocked-{pxTaskToSuspend}: FIN(TASK) & blocked-{pxTaskToSuspend}: POW(tasks) & suspended\/{pxTaskToSuspend}: FIN(TASK) & runable/\blocked-{pxTaskToSuspend} = {} & blocked-{pxTaskToSuspend}/\suspended = {} & suspended\/{pxTaskToSuspend}/\runable = {} & tasks = suspended\/{pxTaskToSuspend}\/blocked-{pxTaskToSuspend}\/runable & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q2))) & (active = TRUE => not(running: suspended) & not(running = pxTaskToSuspend)) & (active = TRUE => not(running: blocked & not(running = pxTaskToSuspend))) & que: queues & task: TASK & task: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(que));
  (task: blocked-{pxTaskToSuspend}\/(suspended\/{pxTaskToSuspend}));
  ("`Local hypotheses'" & not(pxTaskToSuspend: suspended) & pxQueue: queues & pxTaskToSuspend: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToSuspend: queue_sending(pxQueue$0) & not(pxTaskToSuspend: runable) & pxTaskToSuspend: blocked & blocked-{pxTaskToSuspend}: FIN(TASK) & blocked-{pxTaskToSuspend}: POW(tasks) & suspended\/{pxTaskToSuspend}: FIN(TASK) & runable/\blocked-{pxTaskToSuspend} = {} & blocked-{pxTaskToSuspend}/\suspended = {} & suspended\/{pxTaskToSuspend}/\runable = {} & tasks = suspended\/{pxTaskToSuspend}\/blocked-{pxTaskToSuspend}\/runable & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q2))) & (active = TRUE => not(running: suspended) & not(running = pxTaskToSuspend)) & (active = TRUE => not(running: blocked & not(running = pxTaskToSuspend))) & que: queues & task: TASK & task: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(que));
  ("`Local hypotheses'" & not(pxTaskToSuspend: suspended) & pxQueue: queues & pxTaskToSuspend: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToSuspend: queue_sending(pxQueue$0) & not(pxTaskToSuspend: runable) & not(pxTaskToSuspend: blocked) & suspended\/{pxTaskToSuspend}: FIN(TASK) & suspended\/{pxTaskToSuspend}/\runable = {} & tasks = suspended\/{pxTaskToSuspend}\/blocked\/runable & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q2))) & (active = TRUE => not(running: suspended) & not(running = pxTaskToSuspend)) & que: queues & task: TASK & task: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(que));
  ("`Local hypotheses'" & not(pxTaskToSuspend: suspended) & pxQueue: queues & pxTaskToSuspend: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToSuspend: queue_sending(pxQueue$0) & not(pxTaskToSuspend: runable) & not(pxTaskToSuspend: blocked) & suspended\/{pxTaskToSuspend}: FIN(TASK) & suspended\/{pxTaskToSuspend}/\runable = {} & tasks = suspended\/{pxTaskToSuspend}\/blocked\/runable & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q2))) & (active = TRUE => not(running: suspended) & not(running = pxTaskToSuspend)) & que: queues & task: TASK & task: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(que));
  ("`xQueueCreate preconditions in this component'" & uxQueueLength: INTEGER & 0<=uxQueueLength & uxQueueLength<=2147483647 & uxItemSize: INTEGER & 0<=uxItemSize & uxItemSize<=2147483647);
  ("`Local hypotheses'" & pxQueue: QUEUE & not(pxQueue: queues) & queue_items\/{pxQueue|->{}}: QUEUE +-> POW(ITEM) & queue_receiving\/{pxQueue|->{}}: QUEUE +-> POW(TASK) & queue_sending\/{pxQueue|->{}}: QUEUE +-> POW(TASK) & queues\/{pxQueue} = dom(queue_items\/{pxQueue|->{}}) & queues\/{pxQueue} = dom(queue_receiving\/{pxQueue|->{}}) & queues\/{pxQueue} = dom(queue_sending\/{pxQueue|->{}}) & !(q1,q2,tk).(q1: queues\/{pxQueue} & q2: queues\/{pxQueue} & tk: TASK & tk: (queue_receiving\/{pxQueue|->{}})(q1) => not(tk: (queue_sending\/{pxQueue|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{pxQueue} & q2: queues\/{pxQueue} & tk: TASK & tk: (queue_sending\/{pxQueue|->{}})(q2) => not(tk: (queue_receiving\/{pxQueue|->{}})(q1))) & !(q1,q2,tk).(q1: queues\/{pxQueue} & q2: queues\/{pxQueue} & not(q1 = q2) & tk: TASK & tk: (queue_receiving\/{pxQueue|->{}})(q1) => not(tk: (queue_receiving\/{pxQueue|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{pxQueue} & q2: queues\/{pxQueue} & not(q1 = q2) & tk: TASK & tk: (queue_sending\/{pxQueue|->{}})(q1) => not(tk: (queue_sending\/{pxQueue|->{}})(q2))) & semaphores: POW(queues\/{pxQueue}) & mutexes: POW(queues\/{pxQueue}) & !mt.(mt: mutexes => (queue_items\/{pxQueue|->{}})(mt) = {} or (queue_items\/{pxQueue|->{}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes_busy => (queue_items\/{pxQueue|->{}})(mt) = {}) & !mt.(mt: mutexes & not(mt: mutexes_busy) => (queue_items\/{pxQueue|->{}})(mt) = {ITEM_EMPTY}) & !que.(que: QUEUE & (not(que: queues) & not(que = pxQueue)) => not(que: mutexes)) & !mt.(mt: mutexes & not((queue_items\/{pxQueue|->{}})(mt) = {}) => (queue_items\/{pxQueue|->{}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items\/{pxQueue|->{}})(mt) = {ITEM_EMPTY}) => (queue_items\/{pxQueue|->{}})(mt) = {}) & mt: queues\/{pxQueue} & mt: mutexes_busy);
  ("`Local hypotheses'" & pxQueue: QUEUE & not(pxQueue: queues) & queue_items\/{pxQueue|->{}}: QUEUE +-> POW(ITEM) & queue_receiving\/{pxQueue|->{}}: QUEUE +-> POW(TASK) & queue_sending\/{pxQueue|->{}}: QUEUE +-> POW(TASK) & queues\/{pxQueue} = dom(queue_items\/{pxQueue|->{}}) & queues\/{pxQueue} = dom(queue_receiving\/{pxQueue|->{}}) & queues\/{pxQueue} = dom(queue_sending\/{pxQueue|->{}}) & !(q1,q2,tk).(q1: queues\/{pxQueue} & q2: queues\/{pxQueue} & tk: TASK & tk: (queue_receiving\/{pxQueue|->{}})(q1) => not(tk: (queue_sending\/{pxQueue|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{pxQueue} & q2: queues\/{pxQueue} & tk: TASK & tk: (queue_sending\/{pxQueue|->{}})(q2) => not(tk: (queue_receiving\/{pxQueue|->{}})(q1))) & !(q1,q2,tk).(q1: queues\/{pxQueue} & q2: queues\/{pxQueue} & not(q1 = q2) & tk: TASK & tk: (queue_receiving\/{pxQueue|->{}})(q1) => not(tk: (queue_receiving\/{pxQueue|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{pxQueue} & q2: queues\/{pxQueue} & not(q1 = q2) & tk: TASK & tk: (queue_sending\/{pxQueue|->{}})(q1) => not(tk: (queue_sending\/{pxQueue|->{}})(q2))) & semaphores: POW(queues\/{pxQueue}) & mutexes: POW(queues\/{pxQueue}) & !mt.(mt: mutexes => (queue_items\/{pxQueue|->{}})(mt) = {} or (queue_items\/{pxQueue|->{}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes_busy => (queue_items\/{pxQueue|->{}})(mt) = {}) & !mt.(mt: mutexes & not(mt: mutexes_busy) => (queue_items\/{pxQueue|->{}})(mt) = {ITEM_EMPTY}) & !que.(que: QUEUE & (not(que: queues) & not(que = pxQueue)) => not(que: mutexes)) & !mt.(mt: mutexes & not((queue_items\/{pxQueue|->{}})(mt) = {}) => (queue_items\/{pxQueue|->{}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items\/{pxQueue|->{}})(mt) = {ITEM_EMPTY}) => (queue_items\/{pxQueue|->{}})(mt) = {}) & que: queues\/{pxQueue} & task: TASK & task: (queue_sending\/{pxQueue|->{}})(que));
  ("`Local hypotheses'" & pxQueue: QUEUE & not(pxQueue: queues) & queue_items\/{pxQueue|->{}}: QUEUE +-> POW(ITEM) & queue_receiving\/{pxQueue|->{}}: QUEUE +-> POW(TASK) & queue_sending\/{pxQueue|->{}}: QUEUE +-> POW(TASK) & queues\/{pxQueue} = dom(queue_items\/{pxQueue|->{}}) & queues\/{pxQueue} = dom(queue_receiving\/{pxQueue|->{}}) & queues\/{pxQueue} = dom(queue_sending\/{pxQueue|->{}}) & !(q1,q2,tk).(q1: queues\/{pxQueue} & q2: queues\/{pxQueue} & tk: TASK & tk: (queue_receiving\/{pxQueue|->{}})(q1) => not(tk: (queue_sending\/{pxQueue|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{pxQueue} & q2: queues\/{pxQueue} & tk: TASK & tk: (queue_sending\/{pxQueue|->{}})(q2) => not(tk: (queue_receiving\/{pxQueue|->{}})(q1))) & !(q1,q2,tk).(q1: queues\/{pxQueue} & q2: queues\/{pxQueue} & not(q1 = q2) & tk: TASK & tk: (queue_receiving\/{pxQueue|->{}})(q1) => not(tk: (queue_receiving\/{pxQueue|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{pxQueue} & q2: queues\/{pxQueue} & not(q1 = q2) & tk: TASK & tk: (queue_sending\/{pxQueue|->{}})(q1) => not(tk: (queue_sending\/{pxQueue|->{}})(q2))) & semaphores: POW(queues\/{pxQueue}) & mutexes: POW(queues\/{pxQueue}) & !mt.(mt: mutexes => (queue_items\/{pxQueue|->{}})(mt) = {} or (queue_items\/{pxQueue|->{}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes_busy => (queue_items\/{pxQueue|->{}})(mt) = {}) & !mt.(mt: mutexes & not(mt: mutexes_busy) => (queue_items\/{pxQueue|->{}})(mt) = {ITEM_EMPTY}) & !que.(que: QUEUE & (not(que: queues) & not(que = pxQueue)) => not(que: mutexes)) & !mt.(mt: mutexes & not((queue_items\/{pxQueue|->{}})(mt) = {}) => (queue_items\/{pxQueue|->{}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items\/{pxQueue|->{}})(mt) = {ITEM_EMPTY}) => (queue_items\/{pxQueue|->{}})(mt) = {}) & que: queues\/{pxQueue} & task: TASK & task: (queue_receiving\/{pxQueue|->{}})(que));
  ("`vQueueDelete preconditions in this component'" & pxQueue: queues);
  ("`Local hypotheses'" & pxQueue: semaphores & pxQueue: mutexes & queues-{pxQueue}: POW(QUEUE) & {pxQueue}<<|queue_items: QUEUE +-> POW(ITEM) & {pxQueue}<<|queue_receiving: QUEUE +-> POW(TASK) & {pxQueue}<<|queue_sending: QUEUE +-> POW(TASK) & queues-{pxQueue} = dom({pxQueue}<<|queue_items) & queues-{pxQueue} = dom({pxQueue}<<|queue_receiving) & queues-{pxQueue} = dom({pxQueue}<<|queue_sending) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q2) => not(tk: ({pxQueue}<<|queue_receiving)(q1))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_receiving)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & semaphores-{pxQueue}: POW(QUEUE) & semaphores-{pxQueue}: POW(queues-{pxQueue}) & semaphores_busy-{pxQueue}: POW(semaphores-{pxQueue}) & mutexes-{pxQueue}: POW(QUEUE) & mutexes-{pxQueue}: POW(queues-{pxQueue}) & !mt.(mt: mutexes & not(mt = pxQueue) => ({pxQueue}<<|queue_items)(mt) = {} or ({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) & mutexes_busy-{pxQueue}: POW(mutexes-{pxQueue}) & !mt.(mt: mutexes_busy & not(mt = pxQueue) => ({pxQueue}<<|queue_items)(mt) = {}) & !mt.(mt: mutexes & not(mt = pxQueue) & not(mt: mutexes_busy & not(mt = pxQueue)) => ({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) & {pxQueue}<<|mutex_holder: QUEUE +-> TASK & mutexes-{pxQueue} = dom({pxQueue}<<|mutex_holder) & !que.(que: QUEUE & not(que: queues & not(que = pxQueue)) => not(que: mutexes & not(que = pxQueue))) & !mt.(mt: mutexes & not(mt = pxQueue) & not(({pxQueue}<<|queue_items)(mt) = {}) => ({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not(mt = pxQueue) & not(({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) => ({pxQueue}<<|queue_items)(mt) = {}));
  (ran({pxQueue}<<|mutex_holder): POW(tasks-{idle}\/{TASK_NULL}));
  ("`Local hypotheses'" & pxQueue: semaphores & pxQueue: mutexes & queues-{pxQueue}: POW(QUEUE) & {pxQueue}<<|queue_items: QUEUE +-> POW(ITEM) & {pxQueue}<<|queue_receiving: QUEUE +-> POW(TASK) & {pxQueue}<<|queue_sending: QUEUE +-> POW(TASK) & queues-{pxQueue} = dom({pxQueue}<<|queue_items) & queues-{pxQueue} = dom({pxQueue}<<|queue_receiving) & queues-{pxQueue} = dom({pxQueue}<<|queue_sending) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q2) => not(tk: ({pxQueue}<<|queue_receiving)(q1))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_receiving)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & semaphores-{pxQueue}: POW(QUEUE) & semaphores-{pxQueue}: POW(queues-{pxQueue}) & semaphores_busy-{pxQueue}: POW(semaphores-{pxQueue}) & mutexes-{pxQueue}: POW(QUEUE) & mutexes-{pxQueue}: POW(queues-{pxQueue}) & !mt.(mt: mutexes & not(mt = pxQueue) => ({pxQueue}<<|queue_items)(mt) = {} or ({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) & mutexes_busy-{pxQueue}: POW(mutexes-{pxQueue}) & !mt.(mt: mutexes_busy & not(mt = pxQueue) => ({pxQueue}<<|queue_items)(mt) = {}) & !mt.(mt: mutexes & not(mt = pxQueue) & not(mt: mutexes_busy & not(mt = pxQueue)) => ({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) & {pxQueue}<<|mutex_holder: QUEUE +-> TASK & mutexes-{pxQueue} = dom({pxQueue}<<|mutex_holder) & !que.(que: QUEUE & not(que: queues & not(que = pxQueue)) => not(que: mutexes & not(que = pxQueue))) & !mt.(mt: mutexes & not(mt = pxQueue) & not(({pxQueue}<<|queue_items)(mt) = {}) => ({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not(mt = pxQueue) & not(({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) => ({pxQueue}<<|queue_items)(mt) = {}) & mt: queues & not(mt = pxQueue) & mt: mutexes_busy);
  (({pxQueue}<<|mutex_holder)(mt): tasks);
  (not(({pxQueue}<<|mutex_holder)(mt) = idle));
  ("`Local hypotheses'" & pxQueue: semaphores & pxQueue: mutexes & queues-{pxQueue}: POW(QUEUE) & {pxQueue}<<|queue_items: QUEUE +-> POW(ITEM) & {pxQueue}<<|queue_receiving: QUEUE +-> POW(TASK) & {pxQueue}<<|queue_sending: QUEUE +-> POW(TASK) & queues-{pxQueue} = dom({pxQueue}<<|queue_items) & queues-{pxQueue} = dom({pxQueue}<<|queue_receiving) & queues-{pxQueue} = dom({pxQueue}<<|queue_sending) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q2) => not(tk: ({pxQueue}<<|queue_receiving)(q1))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_receiving)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & semaphores-{pxQueue}: POW(QUEUE) & semaphores-{pxQueue}: POW(queues-{pxQueue}) & semaphores_busy-{pxQueue}: POW(semaphores-{pxQueue}) & mutexes-{pxQueue}: POW(QUEUE) & mutexes-{pxQueue}: POW(queues-{pxQueue}) & !mt.(mt: mutexes & not(mt = pxQueue) => ({pxQueue}<<|queue_items)(mt) = {} or ({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) & mutexes_busy-{pxQueue}: POW(mutexes-{pxQueue}) & !mt.(mt: mutexes_busy & not(mt = pxQueue) => ({pxQueue}<<|queue_items)(mt) = {}) & !mt.(mt: mutexes & not(mt = pxQueue) & not(mt: mutexes_busy & not(mt = pxQueue)) => ({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) & {pxQueue}<<|mutex_holder: QUEUE +-> TASK & mutexes-{pxQueue} = dom({pxQueue}<<|mutex_holder) & !que.(que: QUEUE & not(que: queues & not(que = pxQueue)) => not(que: mutexes & not(que = pxQueue))) & !mt.(mt: mutexes & not(mt = pxQueue) & not(({pxQueue}<<|queue_items)(mt) = {}) => ({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not(mt = pxQueue) & not(({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) => ({pxQueue}<<|queue_items)(mt) = {}) & que: queues & not(que = pxQueue) & task: TASK & task: ({pxQueue}<<|queue_sending)(que));
  ("`Local hypotheses'" & pxQueue: semaphores & pxQueue: mutexes & queues-{pxQueue}: POW(QUEUE) & {pxQueue}<<|queue_items: QUEUE +-> POW(ITEM) & {pxQueue}<<|queue_receiving: QUEUE +-> POW(TASK) & {pxQueue}<<|queue_sending: QUEUE +-> POW(TASK) & queues-{pxQueue} = dom({pxQueue}<<|queue_items) & queues-{pxQueue} = dom({pxQueue}<<|queue_receiving) & queues-{pxQueue} = dom({pxQueue}<<|queue_sending) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q2) => not(tk: ({pxQueue}<<|queue_receiving)(q1))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_receiving)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & semaphores-{pxQueue}: POW(QUEUE) & semaphores-{pxQueue}: POW(queues-{pxQueue}) & semaphores_busy-{pxQueue}: POW(semaphores-{pxQueue}) & mutexes-{pxQueue}: POW(QUEUE) & mutexes-{pxQueue}: POW(queues-{pxQueue}) & !mt.(mt: mutexes & not(mt = pxQueue) => ({pxQueue}<<|queue_items)(mt) = {} or ({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) & mutexes_busy-{pxQueue}: POW(mutexes-{pxQueue}) & !mt.(mt: mutexes_busy & not(mt = pxQueue) => ({pxQueue}<<|queue_items)(mt) = {}) & !mt.(mt: mutexes & not(mt = pxQueue) & not(mt: mutexes_busy & not(mt = pxQueue)) => ({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) & {pxQueue}<<|mutex_holder: QUEUE +-> TASK & mutexes-{pxQueue} = dom({pxQueue}<<|mutex_holder) & !que.(que: QUEUE & not(que: queues & not(que = pxQueue)) => not(que: mutexes & not(que = pxQueue))) & !mt.(mt: mutexes & not(mt = pxQueue) & not(({pxQueue}<<|queue_items)(mt) = {}) => ({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not(mt = pxQueue) & not(({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) => ({pxQueue}<<|queue_items)(mt) = {}) & que: queues & not(que = pxQueue) & task: TASK & task: ({pxQueue}<<|queue_receiving)(que));
  ("`Local hypotheses'" & pxQueue: semaphores & not(pxQueue: mutexes) & queues-{pxQueue}: POW(QUEUE) & {pxQueue}<<|queue_items: QUEUE +-> POW(ITEM) & {pxQueue}<<|queue_receiving: QUEUE +-> POW(TASK) & {pxQueue}<<|queue_sending: QUEUE +-> POW(TASK) & queues-{pxQueue} = dom({pxQueue}<<|queue_items) & queues-{pxQueue} = dom({pxQueue}<<|queue_receiving) & queues-{pxQueue} = dom({pxQueue}<<|queue_sending) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q2) => not(tk: ({pxQueue}<<|queue_receiving)(q1))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_receiving)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & semaphores-{pxQueue}: POW(QUEUE) & semaphores-{pxQueue}: POW(queues-{pxQueue}) & semaphores_busy-{pxQueue}: POW(semaphores-{pxQueue}) & mutexes: POW(queues-{pxQueue}) & !mt.(mt: mutexes => ({pxQueue}<<|queue_items)(mt) = {} or ({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes_busy => ({pxQueue}<<|queue_items)(mt) = {}) & !mt.(mt: mutexes & not(mt: mutexes_busy) => ({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) & !que.(que: QUEUE & not(que: queues & not(que = pxQueue)) => not(que: mutexes)) & !mt.(mt: mutexes & not(({pxQueue}<<|queue_items)(mt) = {}) => ({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not(({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) => ({pxQueue}<<|queue_items)(mt) = {}) & mt: queues & not(mt = pxQueue) & mt: mutexes_busy);
  ("`Local hypotheses'" & pxQueue: semaphores & not(pxQueue: mutexes) & queues-{pxQueue}: POW(QUEUE) & {pxQueue}<<|queue_items: QUEUE +-> POW(ITEM) & {pxQueue}<<|queue_receiving: QUEUE +-> POW(TASK) & {pxQueue}<<|queue_sending: QUEUE +-> POW(TASK) & queues-{pxQueue} = dom({pxQueue}<<|queue_items) & queues-{pxQueue} = dom({pxQueue}<<|queue_receiving) & queues-{pxQueue} = dom({pxQueue}<<|queue_sending) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q2) => not(tk: ({pxQueue}<<|queue_receiving)(q1))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_receiving)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & semaphores-{pxQueue}: POW(QUEUE) & semaphores-{pxQueue}: POW(queues-{pxQueue}) & semaphores_busy-{pxQueue}: POW(semaphores-{pxQueue}) & mutexes: POW(queues-{pxQueue}) & !mt.(mt: mutexes => ({pxQueue}<<|queue_items)(mt) = {} or ({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes_busy => ({pxQueue}<<|queue_items)(mt) = {}) & !mt.(mt: mutexes & not(mt: mutexes_busy) => ({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) & !que.(que: QUEUE & not(que: queues & not(que = pxQueue)) => not(que: mutexes)) & !mt.(mt: mutexes & not(({pxQueue}<<|queue_items)(mt) = {}) => ({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not(({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) => ({pxQueue}<<|queue_items)(mt) = {}) & que: queues & not(que = pxQueue) & task: TASK & task: ({pxQueue}<<|queue_sending)(que));
  ("`Local hypotheses'" & pxQueue: semaphores & not(pxQueue: mutexes) & queues-{pxQueue}: POW(QUEUE) & {pxQueue}<<|queue_items: QUEUE +-> POW(ITEM) & {pxQueue}<<|queue_receiving: QUEUE +-> POW(TASK) & {pxQueue}<<|queue_sending: QUEUE +-> POW(TASK) & queues-{pxQueue} = dom({pxQueue}<<|queue_items) & queues-{pxQueue} = dom({pxQueue}<<|queue_receiving) & queues-{pxQueue} = dom({pxQueue}<<|queue_sending) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q2) => not(tk: ({pxQueue}<<|queue_receiving)(q1))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_receiving)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & semaphores-{pxQueue}: POW(QUEUE) & semaphores-{pxQueue}: POW(queues-{pxQueue}) & semaphores_busy-{pxQueue}: POW(semaphores-{pxQueue}) & mutexes: POW(queues-{pxQueue}) & !mt.(mt: mutexes => ({pxQueue}<<|queue_items)(mt) = {} or ({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes_busy => ({pxQueue}<<|queue_items)(mt) = {}) & !mt.(mt: mutexes & not(mt: mutexes_busy) => ({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) & !que.(que: QUEUE & not(que: queues & not(que = pxQueue)) => not(que: mutexes)) & !mt.(mt: mutexes & not(({pxQueue}<<|queue_items)(mt) = {}) => ({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not(({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) => ({pxQueue}<<|queue_items)(mt) = {}) & que: queues & not(que = pxQueue) & task: TASK & task: ({pxQueue}<<|queue_receiving)(que));
  ("`Local hypotheses'" & not(pxQueue: semaphores) & pxQueue: mutexes & queues-{pxQueue}: POW(QUEUE) & {pxQueue}<<|queue_items: QUEUE +-> POW(ITEM) & {pxQueue}<<|queue_receiving: QUEUE +-> POW(TASK) & {pxQueue}<<|queue_sending: QUEUE +-> POW(TASK) & queues-{pxQueue} = dom({pxQueue}<<|queue_items) & queues-{pxQueue} = dom({pxQueue}<<|queue_receiving) & queues-{pxQueue} = dom({pxQueue}<<|queue_sending) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q2) => not(tk: ({pxQueue}<<|queue_receiving)(q1))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_receiving)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & semaphores: POW(queues-{pxQueue}) & mutexes-{pxQueue}: POW(QUEUE) & mutexes-{pxQueue}: POW(queues-{pxQueue}) & !mt.(mt: mutexes & not(mt = pxQueue) => ({pxQueue}<<|queue_items)(mt) = {} or ({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) & mutexes_busy-{pxQueue}: POW(mutexes-{pxQueue}) & !mt.(mt: mutexes_busy & not(mt = pxQueue) => ({pxQueue}<<|queue_items)(mt) = {}) & !mt.(mt: mutexes & not(mt = pxQueue) & not(mt: mutexes_busy & not(mt = pxQueue)) => ({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) & {pxQueue}<<|mutex_holder: QUEUE +-> TASK & mutexes-{pxQueue} = dom({pxQueue}<<|mutex_holder) & !que.(que: QUEUE & not(que: queues & not(que = pxQueue)) => not(que: mutexes & not(que = pxQueue))) & !mt.(mt: mutexes & not(mt = pxQueue) & not(({pxQueue}<<|queue_items)(mt) = {}) => ({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not(mt = pxQueue) & not(({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) => ({pxQueue}<<|queue_items)(mt) = {}));
  ("`Local hypotheses'" & not(pxQueue: semaphores) & pxQueue: mutexes & queues-{pxQueue}: POW(QUEUE) & {pxQueue}<<|queue_items: QUEUE +-> POW(ITEM) & {pxQueue}<<|queue_receiving: QUEUE +-> POW(TASK) & {pxQueue}<<|queue_sending: QUEUE +-> POW(TASK) & queues-{pxQueue} = dom({pxQueue}<<|queue_items) & queues-{pxQueue} = dom({pxQueue}<<|queue_receiving) & queues-{pxQueue} = dom({pxQueue}<<|queue_sending) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q2) => not(tk: ({pxQueue}<<|queue_receiving)(q1))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_receiving)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & semaphores: POW(queues-{pxQueue}) & mutexes-{pxQueue}: POW(QUEUE) & mutexes-{pxQueue}: POW(queues-{pxQueue}) & !mt.(mt: mutexes & not(mt = pxQueue) => ({pxQueue}<<|queue_items)(mt) = {} or ({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) & mutexes_busy-{pxQueue}: POW(mutexes-{pxQueue}) & !mt.(mt: mutexes_busy & not(mt = pxQueue) => ({pxQueue}<<|queue_items)(mt) = {}) & !mt.(mt: mutexes & not(mt = pxQueue) & not(mt: mutexes_busy & not(mt = pxQueue)) => ({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) & {pxQueue}<<|mutex_holder: QUEUE +-> TASK & mutexes-{pxQueue} = dom({pxQueue}<<|mutex_holder) & !que.(que: QUEUE & not(que: queues & not(que = pxQueue)) => not(que: mutexes & not(que = pxQueue))) & !mt.(mt: mutexes & not(mt = pxQueue) & not(({pxQueue}<<|queue_items)(mt) = {}) => ({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not(mt = pxQueue) & not(({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) => ({pxQueue}<<|queue_items)(mt) = {}) & mt: queues & not(mt = pxQueue) & mt: mutexes_busy);
  ("`Local hypotheses'" & not(pxQueue: semaphores) & pxQueue: mutexes & queues-{pxQueue}: POW(QUEUE) & {pxQueue}<<|queue_items: QUEUE +-> POW(ITEM) & {pxQueue}<<|queue_receiving: QUEUE +-> POW(TASK) & {pxQueue}<<|queue_sending: QUEUE +-> POW(TASK) & queues-{pxQueue} = dom({pxQueue}<<|queue_items) & queues-{pxQueue} = dom({pxQueue}<<|queue_receiving) & queues-{pxQueue} = dom({pxQueue}<<|queue_sending) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q2) => not(tk: ({pxQueue}<<|queue_receiving)(q1))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_receiving)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & semaphores: POW(queues-{pxQueue}) & mutexes-{pxQueue}: POW(QUEUE) & mutexes-{pxQueue}: POW(queues-{pxQueue}) & !mt.(mt: mutexes & not(mt = pxQueue) => ({pxQueue}<<|queue_items)(mt) = {} or ({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) & mutexes_busy-{pxQueue}: POW(mutexes-{pxQueue}) & !mt.(mt: mutexes_busy & not(mt = pxQueue) => ({pxQueue}<<|queue_items)(mt) = {}) & !mt.(mt: mutexes & not(mt = pxQueue) & not(mt: mutexes_busy & not(mt = pxQueue)) => ({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) & {pxQueue}<<|mutex_holder: QUEUE +-> TASK & mutexes-{pxQueue} = dom({pxQueue}<<|mutex_holder) & !que.(que: QUEUE & not(que: queues & not(que = pxQueue)) => not(que: mutexes & not(que = pxQueue))) & !mt.(mt: mutexes & not(mt = pxQueue) & not(({pxQueue}<<|queue_items)(mt) = {}) => ({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not(mt = pxQueue) & not(({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) => ({pxQueue}<<|queue_items)(mt) = {}) & que: queues & not(que = pxQueue) & task: TASK & task: ({pxQueue}<<|queue_sending)(que));
  ("`Local hypotheses'" & not(pxQueue: semaphores) & pxQueue: mutexes & queues-{pxQueue}: POW(QUEUE) & {pxQueue}<<|queue_items: QUEUE +-> POW(ITEM) & {pxQueue}<<|queue_receiving: QUEUE +-> POW(TASK) & {pxQueue}<<|queue_sending: QUEUE +-> POW(TASK) & queues-{pxQueue} = dom({pxQueue}<<|queue_items) & queues-{pxQueue} = dom({pxQueue}<<|queue_receiving) & queues-{pxQueue} = dom({pxQueue}<<|queue_sending) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q2) => not(tk: ({pxQueue}<<|queue_receiving)(q1))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_receiving)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & semaphores: POW(queues-{pxQueue}) & mutexes-{pxQueue}: POW(QUEUE) & mutexes-{pxQueue}: POW(queues-{pxQueue}) & !mt.(mt: mutexes & not(mt = pxQueue) => ({pxQueue}<<|queue_items)(mt) = {} or ({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) & mutexes_busy-{pxQueue}: POW(mutexes-{pxQueue}) & !mt.(mt: mutexes_busy & not(mt = pxQueue) => ({pxQueue}<<|queue_items)(mt) = {}) & !mt.(mt: mutexes & not(mt = pxQueue) & not(mt: mutexes_busy & not(mt = pxQueue)) => ({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) & {pxQueue}<<|mutex_holder: QUEUE +-> TASK & mutexes-{pxQueue} = dom({pxQueue}<<|mutex_holder) & !que.(que: QUEUE & not(que: queues & not(que = pxQueue)) => not(que: mutexes & not(que = pxQueue))) & !mt.(mt: mutexes & not(mt = pxQueue) & not(({pxQueue}<<|queue_items)(mt) = {}) => ({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not(mt = pxQueue) & not(({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) => ({pxQueue}<<|queue_items)(mt) = {}) & que: queues & not(que = pxQueue) & task: TASK & task: ({pxQueue}<<|queue_receiving)(que));
  ("`Local hypotheses'" & not(pxQueue: semaphores) & not(pxQueue: mutexes) & queues-{pxQueue}: POW(QUEUE) & {pxQueue}<<|queue_items: QUEUE +-> POW(ITEM) & {pxQueue}<<|queue_receiving: QUEUE +-> POW(TASK) & {pxQueue}<<|queue_sending: QUEUE +-> POW(TASK) & queues-{pxQueue} = dom({pxQueue}<<|queue_items) & queues-{pxQueue} = dom({pxQueue}<<|queue_receiving) & queues-{pxQueue} = dom({pxQueue}<<|queue_sending) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q2) => not(tk: ({pxQueue}<<|queue_receiving)(q1))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_receiving)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & semaphores: POW(queues-{pxQueue}) & mutexes: POW(queues-{pxQueue}) & !mt.(mt: mutexes => ({pxQueue}<<|queue_items)(mt) = {} or ({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes_busy => ({pxQueue}<<|queue_items)(mt) = {}) & !mt.(mt: mutexes & not(mt: mutexes_busy) => ({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) & !que.(que: QUEUE & not(que: queues & not(que = pxQueue)) => not(que: mutexes)) & !mt.(mt: mutexes & not(({pxQueue}<<|queue_items)(mt) = {}) => ({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not(({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) => ({pxQueue}<<|queue_items)(mt) = {}) & mt: queues & not(mt = pxQueue) & mt: mutexes_busy);
  ("`Local hypotheses'" & not(pxQueue: semaphores) & not(pxQueue: mutexes) & queues-{pxQueue}: POW(QUEUE) & {pxQueue}<<|queue_items: QUEUE +-> POW(ITEM) & {pxQueue}<<|queue_receiving: QUEUE +-> POW(TASK) & {pxQueue}<<|queue_sending: QUEUE +-> POW(TASK) & queues-{pxQueue} = dom({pxQueue}<<|queue_items) & queues-{pxQueue} = dom({pxQueue}<<|queue_receiving) & queues-{pxQueue} = dom({pxQueue}<<|queue_sending) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q2) => not(tk: ({pxQueue}<<|queue_receiving)(q1))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_receiving)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & semaphores: POW(queues-{pxQueue}) & mutexes: POW(queues-{pxQueue}) & !mt.(mt: mutexes => ({pxQueue}<<|queue_items)(mt) = {} or ({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes_busy => ({pxQueue}<<|queue_items)(mt) = {}) & !mt.(mt: mutexes & not(mt: mutexes_busy) => ({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) & !que.(que: QUEUE & not(que: queues & not(que = pxQueue)) => not(que: mutexes)) & !mt.(mt: mutexes & not(({pxQueue}<<|queue_items)(mt) = {}) => ({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not(({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) => ({pxQueue}<<|queue_items)(mt) = {}) & que: queues & not(que = pxQueue) & task: TASK & task: ({pxQueue}<<|queue_sending)(que));
  ("`Local hypotheses'" & not(pxQueue: semaphores) & not(pxQueue: mutexes) & queues-{pxQueue}: POW(QUEUE) & {pxQueue}<<|queue_items: QUEUE +-> POW(ITEM) & {pxQueue}<<|queue_receiving: QUEUE +-> POW(TASK) & {pxQueue}<<|queue_sending: QUEUE +-> POW(TASK) & queues-{pxQueue} = dom({pxQueue}<<|queue_items) & queues-{pxQueue} = dom({pxQueue}<<|queue_receiving) & queues-{pxQueue} = dom({pxQueue}<<|queue_sending) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q2) => not(tk: ({pxQueue}<<|queue_receiving)(q1))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_receiving)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & semaphores: POW(queues-{pxQueue}) & mutexes: POW(queues-{pxQueue}) & !mt.(mt: mutexes => ({pxQueue}<<|queue_items)(mt) = {} or ({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes_busy => ({pxQueue}<<|queue_items)(mt) = {}) & !mt.(mt: mutexes & not(mt: mutexes_busy) => ({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) & !que.(que: QUEUE & not(que: queues & not(que = pxQueue)) => not(que: mutexes)) & !mt.(mt: mutexes & not(({pxQueue}<<|queue_items)(mt) = {}) => ({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not(({pxQueue}<<|queue_items)(mt) = {ITEM_EMPTY}) => ({pxQueue}<<|queue_items)(mt) = {}) & que: queues & not(que = pxQueue) & task: TASK & task: ({pxQueue}<<|queue_receiving)(que));
  ("`xQueueGenericReceive preconditions in this component'" & active = TRUE & not(running = idle) & pxQueue: QUEUE & pxQueue: queues & xTicksToWait: TICK & justPeeking: BOOL & running: runable & not(running = TASK_NULL));
  ("`Local hypotheses'" & queue_items(pxQueue) = {});
  ("`Local hypotheses'" & queue_items(pxQueue) = {} & q1: queues);
  ("`Local hypotheses'" & queue_items(pxQueue) = {} & pxQueue: mutexes & pxQueue: mutexes_busy);
  (mutex_holder(pxQueue): tasks);
  (not(mutex_holder(pxQueue) = idle));
  ("`Local hypotheses'" & queue_items(pxQueue) = {} & pxQueue: mutexes & pxQueue: mutexes_busy & q1: queues);
  ("`Local hypotheses'" & queue_items(pxQueue) = {} & pxQueue: mutexes & pxQueue: mutexes_busy & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & blocked\/{running}: FIN(TASK) & running: tasks & n_runable: FIN(TASK) & not(running: n_runable) & n_runable/\blocked = {} & blocked\/{running}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/(blocked\/{running})\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q1) => not(tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked) & not(running$0 = running)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: queue_sending(que));
  ("`Local hypotheses'" & queue_items(pxQueue) = {} & pxQueue: mutexes & pxQueue: mutexes_busy & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & blocked\/{running}: FIN(TASK) & running: tasks & n_runable: FIN(TASK) & not(running: n_runable) & n_runable/\blocked = {} & blocked\/{running}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/(blocked\/{running})\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q1) => not(tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked) & not(running$0 = running)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(que));
  ("`Local hypotheses'" & queue_items(pxQueue) = {} & not(pxQueue: mutexes) & q1: queues);
  ("`Local hypotheses'" & queue_items(pxQueue) = {} & not(pxQueue: mutexes) & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & blocked\/{running}: FIN(TASK) & running: tasks & n_runable: FIN(TASK) & not(running: n_runable) & n_runable/\blocked = {} & blocked\/{running}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/(blocked\/{running})\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q1) => not(tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked) & not(running$0 = running)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: queue_sending(que));
  ("`Local hypotheses'" & queue_items(pxQueue) = {} & not(pxQueue: mutexes) & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & blocked\/{running}: FIN(TASK) & running: tasks & n_runable: FIN(TASK) & not(running: n_runable) & n_runable/\blocked = {} & blocked\/{running}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/(blocked\/{running})\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q1) => not(tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked) & not(running$0 = running)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(que));
  ("`Local hypotheses'" & queue_items(pxQueue) = {} & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & n_runable: FIN(TASK) & suspended\/{running}: FIN(TASK) & running: tasks & n_runable/\blocked = {} & suspended\/{running}/\n_runable = {} & tasks = suspended\/{running}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q1) => not(tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q2))) & (active = TRUE => not(running$0: suspended) & not(running$0 = running)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: queue_sending(que));
  ("`Local hypotheses'" & queue_items(pxQueue) = {} & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & n_runable: FIN(TASK) & suspended\/{running}: FIN(TASK) & running: tasks & n_runable/\blocked = {} & suspended\/{running}/\n_runable = {} & tasks = suspended\/{running}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q1) => not(tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q2))) & (active = TRUE => not(running$0: suspended) & not(running$0 = running)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(que));
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked & justPeeking = FALSE);
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & task: suspended & item: ITEM & item: queue_items(pxQueue) & pxQueue: mutexes & not(pxQueue: mutexes_busy) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}}: QUEUE +-> POW(ITEM) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}}) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !mt.(mt: mutexes => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {} or (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes_busy\/{pxQueue} => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}) & !mt.(mt: mutexes & (not(mt: mutexes_busy) & not(mt = pxQueue)) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & mutex_holder<+{pxQueue|->running}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{pxQueue|->running}) & (active = TRUE => not(running$0: suspended & not(running$0 = task))) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}));
  (ran(mutex_holder<+{pxQueue|->running}): POW(tasks-{idle}\/{TASK_NULL}));
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & task: suspended & item: ITEM & item: queue_items(pxQueue) & pxQueue: mutexes & not(pxQueue: mutexes_busy) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}}: QUEUE +-> POW(ITEM) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}}) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !mt.(mt: mutexes => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {} or (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes_busy\/{pxQueue} => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}) & !mt.(mt: mutexes & (not(mt: mutexes_busy) & not(mt = pxQueue)) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & mutex_holder<+{pxQueue|->running}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{pxQueue|->running}) & (active = TRUE => not(running$0: suspended & not(running$0 = task))) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}) & mt: queues & mt: mutexes_busy\/{pxQueue});
  ((mutex_holder<+{pxQueue|->running})(mt): tasks);
  (not((mutex_holder<+{pxQueue|->running})(mt) = idle));
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & task: suspended & item: ITEM & item: queue_items(pxQueue) & pxQueue: mutexes & not(pxQueue: mutexes_busy) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}}: QUEUE +-> POW(ITEM) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}}) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !mt.(mt: mutexes => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {} or (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes_busy\/{pxQueue} => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}) & !mt.(mt: mutexes & (not(mt: mutexes_busy) & not(mt = pxQueue)) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & mutex_holder<+{pxQueue|->running}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{pxQueue|->running}) & (active = TRUE => not(running$0: suspended & not(running$0 = task))) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}) & que$0: queues & task$0: TASK & task$0: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(que$0));
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & task: suspended & item: ITEM & item: queue_items(pxQueue) & pxQueue: mutexes & not(pxQueue: mutexes_busy) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}}: QUEUE +-> POW(ITEM) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}}) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !mt.(mt: mutexes => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {} or (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes_busy\/{pxQueue} => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}) & !mt.(mt: mutexes & (not(mt: mutexes_busy) & not(mt = pxQueue)) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & mutex_holder<+{pxQueue|->running}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{pxQueue|->running}) & (active = TRUE => not(running$0: suspended & not(running$0 = task))) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}) & que$0: queues & task$0: TASK & task$0: queue_receiving(que$0));
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & task: suspended & item: ITEM & item: queue_items(pxQueue) & pxQueue: mutexes & pxQueue: mutexes_busy & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & mutex_holder<+{pxQueue|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{pxQueue|->TASK_NULL}) & (active = TRUE => not(running$0: suspended & not(running$0 = task))) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & task: suspended & item: ITEM & item: queue_items(pxQueue) & pxQueue: mutexes & pxQueue: mutexes_busy & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & mutex_holder<+{pxQueue|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{pxQueue|->TASK_NULL}) & (active = TRUE => not(running$0: suspended & not(running$0 = task))) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: queues & mt: mutexes_busy);
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & task: suspended & item: ITEM & item: queue_items(pxQueue) & pxQueue: mutexes & pxQueue: mutexes_busy & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & mutex_holder<+{pxQueue|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{pxQueue|->TASK_NULL}) & (active = TRUE => not(running$0: suspended & not(running$0 = task))) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que$0: queues & task$0: TASK & task$0: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(que$0));
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & task: suspended & item: ITEM & item: queue_items(pxQueue) & pxQueue: mutexes & pxQueue: mutexes_busy & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & mutex_holder<+{pxQueue|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{pxQueue|->TASK_NULL}) & (active = TRUE => not(running$0: suspended & not(running$0 = task))) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que$0: queues & task$0: TASK & task$0: queue_receiving(que$0));
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & task: suspended & item: ITEM & item: queue_items(pxQueue) & not(pxQueue: mutexes) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !mt.(mt: mutexes => (queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {} or (queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes_busy => (queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {}) & !mt.(mt: mutexes & not(mt: mutexes_busy) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {ITEM_EMPTY}) & (active = TRUE => not(running$0: suspended & not(running$0 = task))) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {}) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {ITEM_EMPTY}) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {}) & que$0: queues & task$0: TASK & task$0: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(que$0));
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & task: suspended & item: ITEM & item: queue_items(pxQueue) & not(pxQueue: mutexes) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !mt.(mt: mutexes => (queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {} or (queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes_busy => (queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {}) & !mt.(mt: mutexes & not(mt: mutexes_busy) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {ITEM_EMPTY}) & (active = TRUE => not(running$0: suspended & not(running$0 = task))) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {}) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {ITEM_EMPTY}) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {}) & que$0: queues & task$0: TASK & task$0: queue_receiving(que$0));
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & not(task: suspended) & item: ITEM & item: queue_items(pxQueue) & pxQueue: mutexes & not(pxQueue: mutexes_busy) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}}: QUEUE +-> POW(ITEM) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}}) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !mt.(mt: mutexes => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {} or (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes_busy\/{pxQueue} => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}) & !mt.(mt: mutexes & (not(mt: mutexes_busy) & not(mt = pxQueue)) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & mutex_holder<+{pxQueue|->running}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{pxQueue|->running}) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}));
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & not(task: suspended) & item: ITEM & item: queue_items(pxQueue) & pxQueue: mutexes & not(pxQueue: mutexes_busy) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}}: QUEUE +-> POW(ITEM) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}}) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !mt.(mt: mutexes => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {} or (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes_busy\/{pxQueue} => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}) & !mt.(mt: mutexes & (not(mt: mutexes_busy) & not(mt = pxQueue)) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & mutex_holder<+{pxQueue|->running}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{pxQueue|->running}) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}) & mt: queues & mt: mutexes_busy\/{pxQueue});
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & not(task: suspended) & item: ITEM & item: queue_items(pxQueue) & pxQueue: mutexes & not(pxQueue: mutexes_busy) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}}: QUEUE +-> POW(ITEM) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}}) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !mt.(mt: mutexes => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {} or (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes_busy\/{pxQueue} => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}) & !mt.(mt: mutexes & (not(mt: mutexes_busy) & not(mt = pxQueue)) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & mutex_holder<+{pxQueue|->running}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{pxQueue|->running}) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}) & que$0: queues & task$0: TASK & task$0: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(que$0));
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & not(task: suspended) & item: ITEM & item: queue_items(pxQueue) & pxQueue: mutexes & not(pxQueue: mutexes_busy) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}}: QUEUE +-> POW(ITEM) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}}) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !mt.(mt: mutexes => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {} or (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes_busy\/{pxQueue} => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}) & !mt.(mt: mutexes & (not(mt: mutexes_busy) & not(mt = pxQueue)) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & mutex_holder<+{pxQueue|->running}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{pxQueue|->running}) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}) & que$0: queues & task$0: TASK & task$0: queue_receiving(que$0));
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & not(task: suspended) & item: ITEM & item: queue_items(pxQueue) & pxQueue: mutexes & pxQueue: mutexes_busy & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & mutex_holder<+{pxQueue|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{pxQueue|->TASK_NULL}) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & not(task: suspended) & item: ITEM & item: queue_items(pxQueue) & pxQueue: mutexes & pxQueue: mutexes_busy & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & mutex_holder<+{pxQueue|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{pxQueue|->TASK_NULL}) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: queues & mt: mutexes_busy);
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & not(task: suspended) & item: ITEM & item: queue_items(pxQueue) & pxQueue: mutexes & pxQueue: mutexes_busy & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & mutex_holder<+{pxQueue|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{pxQueue|->TASK_NULL}) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que$0: queues & task$0: TASK & task$0: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(que$0));
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & not(task: suspended) & item: ITEM & item: queue_items(pxQueue) & pxQueue: mutexes & pxQueue: mutexes_busy & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & mutex_holder<+{pxQueue|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{pxQueue|->TASK_NULL}) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que$0: queues & task$0: TASK & task$0: queue_receiving(que$0));
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & not(task: suspended) & item: ITEM & item: queue_items(pxQueue) & not(pxQueue: mutexes) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !mt.(mt: mutexes => (queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {} or (queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes_busy => (queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {}) & !mt.(mt: mutexes & not(mt: mutexes_busy) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {ITEM_EMPTY}) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {}) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {ITEM_EMPTY}) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {}) & que$0: queues & task$0: TASK & task$0: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(que$0));
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & not(task: suspended) & item: ITEM & item: queue_items(pxQueue) & not(pxQueue: mutexes) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !mt.(mt: mutexes => (queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {} or (queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes_busy => (queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {}) & !mt.(mt: mutexes & not(mt: mutexes_busy) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {ITEM_EMPTY}) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {}) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {ITEM_EMPTY}) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {}) & que$0: queues & task$0: TASK & task$0: queue_receiving(que$0));
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & task: suspended & item: ITEM & item: queue_items(pxQueue) & pxQueue: mutexes & not(pxQueue: mutexes_busy) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}}: QUEUE +-> POW(ITEM) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}}) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !mt.(mt: mutexes => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {} or (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes_busy\/{pxQueue} => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}) & !mt.(mt: mutexes & (not(mt: mutexes_busy) & not(mt = pxQueue)) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & mutex_holder<+{pxQueue|->running}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{pxQueue|->running}) & (active = TRUE => not(running: suspended & not(running = task))) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}));
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & task: suspended & item: ITEM & item: queue_items(pxQueue) & pxQueue: mutexes & not(pxQueue: mutexes_busy) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}}: QUEUE +-> POW(ITEM) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}}) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !mt.(mt: mutexes => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {} or (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes_busy\/{pxQueue} => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}) & !mt.(mt: mutexes & (not(mt: mutexes_busy) & not(mt = pxQueue)) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & mutex_holder<+{pxQueue|->running}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{pxQueue|->running}) & (active = TRUE => not(running: suspended & not(running = task))) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}) & mt: queues & mt: mutexes_busy\/{pxQueue});
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & task: suspended & item: ITEM & item: queue_items(pxQueue) & pxQueue: mutexes & not(pxQueue: mutexes_busy) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}}: QUEUE +-> POW(ITEM) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}}) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !mt.(mt: mutexes => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {} or (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes_busy\/{pxQueue} => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}) & !mt.(mt: mutexes & (not(mt: mutexes_busy) & not(mt = pxQueue)) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & mutex_holder<+{pxQueue|->running}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{pxQueue|->running}) & (active = TRUE => not(running: suspended & not(running = task))) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}) & que$0: queues & task$0: TASK & task$0: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(que$0));
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & task: suspended & item: ITEM & item: queue_items(pxQueue) & pxQueue: mutexes & not(pxQueue: mutexes_busy) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}}: QUEUE +-> POW(ITEM) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}}) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !mt.(mt: mutexes => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {} or (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes_busy\/{pxQueue} => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}) & !mt.(mt: mutexes & (not(mt: mutexes_busy) & not(mt = pxQueue)) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & mutex_holder<+{pxQueue|->running}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{pxQueue|->running}) & (active = TRUE => not(running: suspended & not(running = task))) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}) & que$0: queues & task$0: TASK & task$0: queue_receiving(que$0));
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & task: suspended & item: ITEM & item: queue_items(pxQueue) & pxQueue: mutexes & pxQueue: mutexes_busy & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & mutex_holder<+{pxQueue|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{pxQueue|->TASK_NULL}) & (active = TRUE => not(running: suspended & not(running = task))) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & task: suspended & item: ITEM & item: queue_items(pxQueue) & pxQueue: mutexes & pxQueue: mutexes_busy & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & mutex_holder<+{pxQueue|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{pxQueue|->TASK_NULL}) & (active = TRUE => not(running: suspended & not(running = task))) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: queues & mt: mutexes_busy);
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & task: suspended & item: ITEM & item: queue_items(pxQueue) & pxQueue: mutexes & pxQueue: mutexes_busy & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & mutex_holder<+{pxQueue|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{pxQueue|->TASK_NULL}) & (active = TRUE => not(running: suspended & not(running = task))) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que$0: queues & task$0: TASK & task$0: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(que$0));
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & task: suspended & item: ITEM & item: queue_items(pxQueue) & pxQueue: mutexes & pxQueue: mutexes_busy & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & mutex_holder<+{pxQueue|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{pxQueue|->TASK_NULL}) & (active = TRUE => not(running: suspended & not(running = task))) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que$0: queues & task$0: TASK & task$0: queue_receiving(que$0));
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & task: suspended & item: ITEM & item: queue_items(pxQueue) & not(pxQueue: mutexes) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !mt.(mt: mutexes => (queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {} or (queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes_busy => (queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {}) & !mt.(mt: mutexes & not(mt: mutexes_busy) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {ITEM_EMPTY}) & (active = TRUE => not(running: suspended & not(running = task))) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {}) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {ITEM_EMPTY}) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {}) & que$0: queues & task$0: TASK & task$0: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(que$0));
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & task: suspended & item: ITEM & item: queue_items(pxQueue) & not(pxQueue: mutexes) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !mt.(mt: mutexes => (queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {} or (queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes_busy => (queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {}) & !mt.(mt: mutexes & not(mt: mutexes_busy) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {ITEM_EMPTY}) & (active = TRUE => not(running: suspended & not(running = task))) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {}) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {ITEM_EMPTY}) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {}) & que$0: queues & task$0: TASK & task$0: queue_receiving(que$0));
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task: suspended) & item: ITEM & item: queue_items(pxQueue) & pxQueue: mutexes & not(pxQueue: mutexes_busy) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}}: QUEUE +-> POW(ITEM) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}}) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !mt.(mt: mutexes => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {} or (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes_busy\/{pxQueue} => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}) & !mt.(mt: mutexes & (not(mt: mutexes_busy) & not(mt = pxQueue)) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & mutex_holder<+{pxQueue|->running}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{pxQueue|->running}) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}));
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task: suspended) & item: ITEM & item: queue_items(pxQueue) & pxQueue: mutexes & not(pxQueue: mutexes_busy) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}}: QUEUE +-> POW(ITEM) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}}) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !mt.(mt: mutexes => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {} or (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes_busy\/{pxQueue} => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}) & !mt.(mt: mutexes & (not(mt: mutexes_busy) & not(mt = pxQueue)) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & mutex_holder<+{pxQueue|->running}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{pxQueue|->running}) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}) & mt: queues & mt: mutexes_busy\/{pxQueue});
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task: suspended) & item: ITEM & item: queue_items(pxQueue) & pxQueue: mutexes & not(pxQueue: mutexes_busy) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}}: QUEUE +-> POW(ITEM) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}}) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !mt.(mt: mutexes => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {} or (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes_busy\/{pxQueue} => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}) & !mt.(mt: mutexes & (not(mt: mutexes_busy) & not(mt = pxQueue)) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & mutex_holder<+{pxQueue|->running}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{pxQueue|->running}) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}) & que$0: queues & task$0: TASK & task$0: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(que$0));
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task: suspended) & item: ITEM & item: queue_items(pxQueue) & pxQueue: mutexes & not(pxQueue: mutexes_busy) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}}: QUEUE +-> POW(ITEM) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}}) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !mt.(mt: mutexes => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {} or (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes_busy\/{pxQueue} => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}) & !mt.(mt: mutexes & (not(mt: mutexes_busy) & not(mt = pxQueue)) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & mutex_holder<+{pxQueue|->running}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{pxQueue|->running}) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{ITEM_EMPTY}})(mt) = {}) & que$0: queues & task$0: TASK & task$0: queue_receiving(que$0));
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task: suspended) & item: ITEM & item: queue_items(pxQueue) & pxQueue: mutexes & pxQueue: mutexes_busy & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & mutex_holder<+{pxQueue|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{pxQueue|->TASK_NULL}) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task: suspended) & item: ITEM & item: queue_items(pxQueue) & pxQueue: mutexes & pxQueue: mutexes_busy & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & mutex_holder<+{pxQueue|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{pxQueue|->TASK_NULL}) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: queues & mt: mutexes_busy);
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task: suspended) & item: ITEM & item: queue_items(pxQueue) & pxQueue: mutexes & pxQueue: mutexes_busy & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & mutex_holder<+{pxQueue|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{pxQueue|->TASK_NULL}) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que$0: queues & task$0: TASK & task$0: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(que$0));
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task: suspended) & item: ITEM & item: queue_items(pxQueue) & pxQueue: mutexes & pxQueue: mutexes_busy & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & mutex_holder<+{pxQueue|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{pxQueue|->TASK_NULL}) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que$0: queues & task$0: TASK & task$0: queue_receiving(que$0));
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task: suspended) & item: ITEM & item: queue_items(pxQueue) & not(pxQueue: mutexes) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !mt.(mt: mutexes => (queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {} or (queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes_busy => (queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {}) & !mt.(mt: mutexes & not(mt: mutexes_busy) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {ITEM_EMPTY}) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {}) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {ITEM_EMPTY}) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {}) & que$0: queues & task$0: TASK & task$0: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(que$0));
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task: suspended) & item: ITEM & item: queue_items(pxQueue) & not(pxQueue: mutexes) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !mt.(mt: mutexes => (queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {} or (queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes_busy => (queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {}) & !mt.(mt: mutexes & not(mt: mutexes_busy) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {ITEM_EMPTY}) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {}) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {ITEM_EMPTY}) => (queue_items<+{pxQueue|->queue_items(pxQueue)-{item}})(mt) = {}) & que$0: queues & task$0: TASK & task$0: queue_receiving(que$0));
  ("`incrementTick preconditions in this component'" & active = TRUE);
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_sending = {}) & not(queue_receiving = {}) & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & running$0: n_runable & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0: unblocked))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  (TICK_INCREMENT(tickCount,1): TICK);
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_sending = {}) & not(queue_receiving = {}) & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & running$0: n_runable & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0: unblocked))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: remove_task(queue_sending,unblocked)(que));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_sending = {}) & not(queue_receiving = {}) & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & running$0: n_runable & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0: unblocked))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: remove_task(queue_receiving,unblocked)(que));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_sending = {}) & not(queue_receiving = {}) & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & (active = TRUE => not(running: blocked & not(running: unblocked))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_sending = {}) & not(queue_receiving = {}) & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & (active = TRUE => not(running: blocked & not(running: unblocked))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: remove_task(queue_sending,unblocked)(que));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_sending = {}) & not(queue_receiving = {}) & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & (active = TRUE => not(running: blocked & not(running: unblocked))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: remove_task(queue_receiving,unblocked)(que));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_sending = {}) & not(queue_receiving = {}) & unblocked = {} & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_sending = {}) & not(queue_receiving = {}) & unblocked = {} & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & que: queues & task: TASK & task: remove_task(queue_sending,unblocked)(que));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_sending = {}) & not(queue_receiving = {}) & unblocked = {} & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & que: queues & task: TASK & task: remove_task(queue_receiving,unblocked)(que));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_sending = {}) & queue_receiving = {} & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & running$0: n_runable & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0: unblocked))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_sending = {}) & queue_receiving = {} & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & running$0: n_runable & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0: unblocked))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: remove_task(queue_sending,unblocked)(que));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_sending = {}) & queue_receiving = {} & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & running$0: n_runable & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0: unblocked))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: queue_receiving(que));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_sending = {}) & queue_receiving = {} & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & (active = TRUE => not(running: blocked & not(running: unblocked))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_sending = {}) & queue_receiving = {} & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & (active = TRUE => not(running: blocked & not(running: unblocked))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: remove_task(queue_sending,unblocked)(que));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_sending = {}) & queue_receiving = {} & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & (active = TRUE => not(running: blocked & not(running: unblocked))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: queue_receiving(que));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_sending = {}) & queue_receiving = {} & unblocked = {} & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_sending = {}) & queue_receiving = {} & unblocked = {} & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & que: queues & task: TASK & task: remove_task(queue_sending,unblocked)(que));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_sending = {} & not(queue_receiving = {}) & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & running$0: n_runable & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0: unblocked))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_sending = {} & not(queue_receiving = {}) & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & running$0: n_runable & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0: unblocked))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: queue_sending(que));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_sending = {} & not(queue_receiving = {}) & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & running$0: n_runable & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0: unblocked))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: remove_task(queue_receiving,unblocked)(que));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_sending = {} & not(queue_receiving = {}) & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & (active = TRUE => not(running: blocked & not(running: unblocked))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_sending = {} & not(queue_receiving = {}) & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & (active = TRUE => not(running: blocked & not(running: unblocked))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: queue_sending(que));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_sending = {} & not(queue_receiving = {}) & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & (active = TRUE => not(running: blocked & not(running: unblocked))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: remove_task(queue_receiving,unblocked)(que));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_sending = {} & not(queue_receiving = {}) & unblocked = {} & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_sending = {} & not(queue_receiving = {}) & unblocked = {} & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & que: queues & task: TASK & task: remove_task(queue_receiving,unblocked)(que));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_sending = {} & queue_receiving = {} & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & running$0: n_runable & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0: unblocked))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_sending = {} & queue_receiving = {} & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & running$0: n_runable & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0: unblocked))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: queue_sending(que));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_sending = {} & queue_receiving = {} & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & running$0: n_runable & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0: unblocked))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: queue_receiving(que));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_sending = {} & queue_receiving = {} & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & (active = TRUE => not(running: blocked & not(running: unblocked))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_sending = {} & queue_receiving = {} & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & (active = TRUE => not(running: blocked & not(running: unblocked))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: queue_sending(que));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_sending = {} & queue_receiving = {} & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable) & (active = TRUE => not(running: blocked & not(running: unblocked))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues & task: TASK & task: queue_receiving(que));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_sending = {} & queue_receiving = {} & unblocked = {});
  ("`Local hypotheses'" & semaphore$0: QUEUE & not(semaphore$0: queues) & not(semaphore$0: mutexes) & s_items$0: FIN(ITEM) & card(s_items$0) = 1 & queue_items\/{semaphore$0|->s_items$0}: QUEUE +-> POW(ITEM) & queue_receiving\/{semaphore$0|->{}}: QUEUE +-> POW(TASK) & queue_sending\/{semaphore$0|->{}}: QUEUE +-> POW(TASK) & queues\/{semaphore$0} = dom(queue_items\/{semaphore$0|->s_items$0}) & queues\/{semaphore$0} = dom(queue_receiving\/{semaphore$0|->{}}) & queues\/{semaphore$0} = dom(queue_sending\/{semaphore$0|->{}}) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & tk: TASK & tk: (queue_receiving\/{semaphore$0|->{}})(q1) => not(tk: (queue_sending\/{semaphore$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & tk: TASK & tk: (queue_sending\/{semaphore$0|->{}})(q2) => not(tk: (queue_receiving\/{semaphore$0|->{}})(q1))) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & not(q1 = q2) & tk: TASK & tk: (queue_receiving\/{semaphore$0|->{}})(q1) => not(tk: (queue_receiving\/{semaphore$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & not(q1 = q2) & tk: TASK & tk: (queue_sending\/{semaphore$0|->{}})(q1) => not(tk: (queue_sending\/{semaphore$0|->{}})(q2))) & semaphore$0: queues\/{semaphore$0} & semaphores: POW(queues\/{semaphore$0}) & semaphores_busy: POW(semaphores\/{semaphore$0}) & mutexes: POW(queues\/{semaphore$0}) & !mt.(mt: mutexes => (queue_items\/{semaphore$0|->s_items$0})(mt) = {} or (queue_items\/{semaphore$0|->s_items$0})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes_busy => (queue_items\/{semaphore$0|->s_items$0})(mt) = {}) & !mt.(mt: mutexes & not(mt: mutexes_busy) => (queue_items\/{semaphore$0|->s_items$0})(mt) = {ITEM_EMPTY}) & !que.(que: QUEUE & (not(que: queues) & not(que = semaphore$0)) => not(que: mutexes)) & !mt.(mt: mutexes & not((queue_items\/{semaphore$0|->s_items$0})(mt) = {}) => (queue_items\/{semaphore$0|->s_items$0})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items\/{semaphore$0|->s_items$0})(mt) = {ITEM_EMPTY}) => (queue_items\/{semaphore$0|->s_items$0})(mt) = {}) & mt: queues\/{semaphore$0} & mt: mutexes_busy);
  ("`Local hypotheses'" & semaphore$0: QUEUE & not(semaphore$0: queues) & not(semaphore$0: mutexes) & s_items$0: FIN(ITEM) & card(s_items$0) = 1 & queue_items\/{semaphore$0|->s_items$0}: QUEUE +-> POW(ITEM) & queue_receiving\/{semaphore$0|->{}}: QUEUE +-> POW(TASK) & queue_sending\/{semaphore$0|->{}}: QUEUE +-> POW(TASK) & queues\/{semaphore$0} = dom(queue_items\/{semaphore$0|->s_items$0}) & queues\/{semaphore$0} = dom(queue_receiving\/{semaphore$0|->{}}) & queues\/{semaphore$0} = dom(queue_sending\/{semaphore$0|->{}}) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & tk: TASK & tk: (queue_receiving\/{semaphore$0|->{}})(q1) => not(tk: (queue_sending\/{semaphore$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & tk: TASK & tk: (queue_sending\/{semaphore$0|->{}})(q2) => not(tk: (queue_receiving\/{semaphore$0|->{}})(q1))) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & not(q1 = q2) & tk: TASK & tk: (queue_receiving\/{semaphore$0|->{}})(q1) => not(tk: (queue_receiving\/{semaphore$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & not(q1 = q2) & tk: TASK & tk: (queue_sending\/{semaphore$0|->{}})(q1) => not(tk: (queue_sending\/{semaphore$0|->{}})(q2))) & semaphore$0: queues\/{semaphore$0} & semaphores: POW(queues\/{semaphore$0}) & semaphores_busy: POW(semaphores\/{semaphore$0}) & mutexes: POW(queues\/{semaphore$0}) & !mt.(mt: mutexes => (queue_items\/{semaphore$0|->s_items$0})(mt) = {} or (queue_items\/{semaphore$0|->s_items$0})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes_busy => (queue_items\/{semaphore$0|->s_items$0})(mt) = {}) & !mt.(mt: mutexes & not(mt: mutexes_busy) => (queue_items\/{semaphore$0|->s_items$0})(mt) = {ITEM_EMPTY}) & !que.(que: QUEUE & (not(que: queues) & not(que = semaphore$0)) => not(que: mutexes)) & !mt.(mt: mutexes & not((queue_items\/{semaphore$0|->s_items$0})(mt) = {}) => (queue_items\/{semaphore$0|->s_items$0})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items\/{semaphore$0|->s_items$0})(mt) = {ITEM_EMPTY}) => (queue_items\/{semaphore$0|->s_items$0})(mt) = {}) & que: queues\/{semaphore$0} & task: TASK & task: (queue_sending\/{semaphore$0|->{}})(que));
  ("`Local hypotheses'" & semaphore$0: QUEUE & not(semaphore$0: queues) & not(semaphore$0: mutexes) & s_items$0: FIN(ITEM) & card(s_items$0) = 1 & queue_items\/{semaphore$0|->s_items$0}: QUEUE +-> POW(ITEM) & queue_receiving\/{semaphore$0|->{}}: QUEUE +-> POW(TASK) & queue_sending\/{semaphore$0|->{}}: QUEUE +-> POW(TASK) & queues\/{semaphore$0} = dom(queue_items\/{semaphore$0|->s_items$0}) & queues\/{semaphore$0} = dom(queue_receiving\/{semaphore$0|->{}}) & queues\/{semaphore$0} = dom(queue_sending\/{semaphore$0|->{}}) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & tk: TASK & tk: (queue_receiving\/{semaphore$0|->{}})(q1) => not(tk: (queue_sending\/{semaphore$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & tk: TASK & tk: (queue_sending\/{semaphore$0|->{}})(q2) => not(tk: (queue_receiving\/{semaphore$0|->{}})(q1))) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & not(q1 = q2) & tk: TASK & tk: (queue_receiving\/{semaphore$0|->{}})(q1) => not(tk: (queue_receiving\/{semaphore$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & not(q1 = q2) & tk: TASK & tk: (queue_sending\/{semaphore$0|->{}})(q1) => not(tk: (queue_sending\/{semaphore$0|->{}})(q2))) & semaphore$0: queues\/{semaphore$0} & semaphores: POW(queues\/{semaphore$0}) & semaphores_busy: POW(semaphores\/{semaphore$0}) & mutexes: POW(queues\/{semaphore$0}) & !mt.(mt: mutexes => (queue_items\/{semaphore$0|->s_items$0})(mt) = {} or (queue_items\/{semaphore$0|->s_items$0})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes_busy => (queue_items\/{semaphore$0|->s_items$0})(mt) = {}) & !mt.(mt: mutexes & not(mt: mutexes_busy) => (queue_items\/{semaphore$0|->s_items$0})(mt) = {ITEM_EMPTY}) & !que.(que: QUEUE & (not(que: queues) & not(que = semaphore$0)) => not(que: mutexes)) & !mt.(mt: mutexes & not((queue_items\/{semaphore$0|->s_items$0})(mt) = {}) => (queue_items\/{semaphore$0|->s_items$0})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items\/{semaphore$0|->s_items$0})(mt) = {ITEM_EMPTY}) => (queue_items\/{semaphore$0|->s_items$0})(mt) = {}) & que: queues\/{semaphore$0} & task: TASK & task: (queue_receiving\/{semaphore$0|->{}})(que));
  ("`xSemaphoreCreateCounting preconditions in this component'" & uxMaxCount: INTEGER & 0<=uxMaxCount & uxMaxCount<=2147483647 & uxInitialCount: INTEGER & 0<=uxInitialCount & uxInitialCount<=2147483647 & 1<=uxInitialCount & uxInitialCount<=uxMaxCount);
  (1<=uxMaxCount);
  ("`Local hypotheses'" & semaphore$0: QUEUE & not(semaphore$0: queues) & not(semaphore$0: mutexes) & s_items$0: FIN(ITEM) & card(s_items$0) = uxInitialCount & queue_items\/{semaphore$0|->s_items$0}: QUEUE +-> POW(ITEM) & queue_receiving\/{semaphore$0|->{}}: QUEUE +-> POW(TASK) & queue_sending\/{semaphore$0|->{}}: QUEUE +-> POW(TASK) & queues\/{semaphore$0} = dom(queue_items\/{semaphore$0|->s_items$0}) & queues\/{semaphore$0} = dom(queue_receiving\/{semaphore$0|->{}}) & queues\/{semaphore$0} = dom(queue_sending\/{semaphore$0|->{}}) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & tk: TASK & tk: (queue_receiving\/{semaphore$0|->{}})(q1) => not(tk: (queue_sending\/{semaphore$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & tk: TASK & tk: (queue_sending\/{semaphore$0|->{}})(q2) => not(tk: (queue_receiving\/{semaphore$0|->{}})(q1))) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & not(q1 = q2) & tk: TASK & tk: (queue_receiving\/{semaphore$0|->{}})(q1) => not(tk: (queue_receiving\/{semaphore$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & not(q1 = q2) & tk: TASK & tk: (queue_sending\/{semaphore$0|->{}})(q1) => not(tk: (queue_sending\/{semaphore$0|->{}})(q2))) & semaphore$0: queues\/{semaphore$0} & semaphores: POW(queues\/{semaphore$0}) & semaphores_busy: POW(semaphores\/{semaphore$0}) & mutexes: POW(queues\/{semaphore$0}) & !mt.(mt: mutexes => (queue_items\/{semaphore$0|->s_items$0})(mt) = {} or (queue_items\/{semaphore$0|->s_items$0})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes_busy => (queue_items\/{semaphore$0|->s_items$0})(mt) = {}) & !mt.(mt: mutexes & not(mt: mutexes_busy) => (queue_items\/{semaphore$0|->s_items$0})(mt) = {ITEM_EMPTY}) & !que.(que: QUEUE & (not(que: queues) & not(que = semaphore$0)) => not(que: mutexes)) & !mt.(mt: mutexes & not((queue_items\/{semaphore$0|->s_items$0})(mt) = {}) => (queue_items\/{semaphore$0|->s_items$0})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items\/{semaphore$0|->s_items$0})(mt) = {ITEM_EMPTY}) => (queue_items\/{semaphore$0|->s_items$0})(mt) = {}) & mt: queues\/{semaphore$0} & mt: mutexes_busy);
  ("`Local hypotheses'" & semaphore$0: QUEUE & not(semaphore$0: queues) & not(semaphore$0: mutexes) & s_items$0: FIN(ITEM) & card(s_items$0) = uxInitialCount & queue_items\/{semaphore$0|->s_items$0}: QUEUE +-> POW(ITEM) & queue_receiving\/{semaphore$0|->{}}: QUEUE +-> POW(TASK) & queue_sending\/{semaphore$0|->{}}: QUEUE +-> POW(TASK) & queues\/{semaphore$0} = dom(queue_items\/{semaphore$0|->s_items$0}) & queues\/{semaphore$0} = dom(queue_receiving\/{semaphore$0|->{}}) & queues\/{semaphore$0} = dom(queue_sending\/{semaphore$0|->{}}) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & tk: TASK & tk: (queue_receiving\/{semaphore$0|->{}})(q1) => not(tk: (queue_sending\/{semaphore$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & tk: TASK & tk: (queue_sending\/{semaphore$0|->{}})(q2) => not(tk: (queue_receiving\/{semaphore$0|->{}})(q1))) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & not(q1 = q2) & tk: TASK & tk: (queue_receiving\/{semaphore$0|->{}})(q1) => not(tk: (queue_receiving\/{semaphore$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & not(q1 = q2) & tk: TASK & tk: (queue_sending\/{semaphore$0|->{}})(q1) => not(tk: (queue_sending\/{semaphore$0|->{}})(q2))) & semaphore$0: queues\/{semaphore$0} & semaphores: POW(queues\/{semaphore$0}) & semaphores_busy: POW(semaphores\/{semaphore$0}) & mutexes: POW(queues\/{semaphore$0}) & !mt.(mt: mutexes => (queue_items\/{semaphore$0|->s_items$0})(mt) = {} or (queue_items\/{semaphore$0|->s_items$0})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes_busy => (queue_items\/{semaphore$0|->s_items$0})(mt) = {}) & !mt.(mt: mutexes & not(mt: mutexes_busy) => (queue_items\/{semaphore$0|->s_items$0})(mt) = {ITEM_EMPTY}) & !que.(que: QUEUE & (not(que: queues) & not(que = semaphore$0)) => not(que: mutexes)) & !mt.(mt: mutexes & not((queue_items\/{semaphore$0|->s_items$0})(mt) = {}) => (queue_items\/{semaphore$0|->s_items$0})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items\/{semaphore$0|->s_items$0})(mt) = {ITEM_EMPTY}) => (queue_items\/{semaphore$0|->s_items$0})(mt) = {}) & que: queues\/{semaphore$0} & task: TASK & task: (queue_sending\/{semaphore$0|->{}})(que));
  ("`Local hypotheses'" & semaphore$0: QUEUE & not(semaphore$0: queues) & not(semaphore$0: mutexes) & s_items$0: FIN(ITEM) & card(s_items$0) = uxInitialCount & queue_items\/{semaphore$0|->s_items$0}: QUEUE +-> POW(ITEM) & queue_receiving\/{semaphore$0|->{}}: QUEUE +-> POW(TASK) & queue_sending\/{semaphore$0|->{}}: QUEUE +-> POW(TASK) & queues\/{semaphore$0} = dom(queue_items\/{semaphore$0|->s_items$0}) & queues\/{semaphore$0} = dom(queue_receiving\/{semaphore$0|->{}}) & queues\/{semaphore$0} = dom(queue_sending\/{semaphore$0|->{}}) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & tk: TASK & tk: (queue_receiving\/{semaphore$0|->{}})(q1) => not(tk: (queue_sending\/{semaphore$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & tk: TASK & tk: (queue_sending\/{semaphore$0|->{}})(q2) => not(tk: (queue_receiving\/{semaphore$0|->{}})(q1))) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & not(q1 = q2) & tk: TASK & tk: (queue_receiving\/{semaphore$0|->{}})(q1) => not(tk: (queue_receiving\/{semaphore$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & not(q1 = q2) & tk: TASK & tk: (queue_sending\/{semaphore$0|->{}})(q1) => not(tk: (queue_sending\/{semaphore$0|->{}})(q2))) & semaphore$0: queues\/{semaphore$0} & semaphores: POW(queues\/{semaphore$0}) & semaphores_busy: POW(semaphores\/{semaphore$0}) & mutexes: POW(queues\/{semaphore$0}) & !mt.(mt: mutexes => (queue_items\/{semaphore$0|->s_items$0})(mt) = {} or (queue_items\/{semaphore$0|->s_items$0})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes_busy => (queue_items\/{semaphore$0|->s_items$0})(mt) = {}) & !mt.(mt: mutexes & not(mt: mutexes_busy) => (queue_items\/{semaphore$0|->s_items$0})(mt) = {ITEM_EMPTY}) & !que.(que: QUEUE & (not(que: queues) & not(que = semaphore$0)) => not(que: mutexes)) & !mt.(mt: mutexes & not((queue_items\/{semaphore$0|->s_items$0})(mt) = {}) => (queue_items\/{semaphore$0|->s_items$0})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes & not((queue_items\/{semaphore$0|->s_items$0})(mt) = {ITEM_EMPTY}) => (queue_items\/{semaphore$0|->s_items$0})(mt) = {}) & que: queues\/{semaphore$0} & task: TASK & task: (queue_receiving\/{semaphore$0|->{}})(que));
  ("`Local hypotheses'" & mutex: QUEUE & not(mutex: queues) & queue_items\/{mutex|->{ITEM_EMPTY}}: QUEUE +-> POW(ITEM) & queue_receiving\/{mutex|->{}}: QUEUE +-> POW(TASK) & queue_sending\/{mutex|->{}}: QUEUE +-> POW(TASK) & queues\/{mutex} = dom(queue_items\/{mutex|->{ITEM_EMPTY}}) & queues\/{mutex} = dom(queue_receiving\/{mutex|->{}}) & queues\/{mutex} = dom(queue_sending\/{mutex|->{}}) & !(q1,q2,tk).(q1: queues\/{mutex} & q2: queues\/{mutex} & tk: TASK & tk: (queue_receiving\/{mutex|->{}})(q1) => not(tk: (queue_sending\/{mutex|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{mutex} & q2: queues\/{mutex} & tk: TASK & tk: (queue_sending\/{mutex|->{}})(q2) => not(tk: (queue_receiving\/{mutex|->{}})(q1))) & !(q1,q2,tk).(q1: queues\/{mutex} & q2: queues\/{mutex} & not(q1 = q2) & tk: TASK & tk: (queue_receiving\/{mutex|->{}})(q1) => not(tk: (queue_receiving\/{mutex|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{mutex} & q2: queues\/{mutex} & not(q1 = q2) & tk: TASK & tk: (queue_sending\/{mutex|->{}})(q1) => not(tk: (queue_sending\/{mutex|->{}})(q2))) & semaphores: POW(queues\/{mutex}) & mutex: queues\/{mutex} & mutexes: POW(queues\/{mutex}) & !mt.(mt: mutexes\/{mutex} => (queue_items\/{mutex|->{ITEM_EMPTY}})(mt) = {} or (queue_items\/{mutex|->{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & mutexes_busy: POW(mutexes\/{mutex}) & !mt.(mt: mutexes_busy => (queue_items\/{mutex|->{ITEM_EMPTY}})(mt) = {}) & !mt.(mt: mutexes\/{mutex} & not(mt: mutexes_busy) => (queue_items\/{mutex|->{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & mutex_holder\/{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes\/{mutex} = dom(mutex_holder\/{mutex|->TASK_NULL}) & !que.(que: QUEUE & (not(que: queues) & not(que = mutex)) => not(que: mutexes) & not(que = mutex)) & !mt.(mt: mutexes\/{mutex} & not((queue_items\/{mutex|->{ITEM_EMPTY}})(mt) = {}) => (queue_items\/{mutex|->{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes\/{mutex} & not((queue_items\/{mutex|->{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) => (queue_items\/{mutex|->{ITEM_EMPTY}})(mt) = {}));
  (ran(mutex_holder\/{mutex|->TASK_NULL}): POW(tasks-{idle}\/{TASK_NULL}));
  ("`Local hypotheses'" & mutex: QUEUE & not(mutex: queues) & queue_items\/{mutex|->{ITEM_EMPTY}}: QUEUE +-> POW(ITEM) & queue_receiving\/{mutex|->{}}: QUEUE +-> POW(TASK) & queue_sending\/{mutex|->{}}: QUEUE +-> POW(TASK) & queues\/{mutex} = dom(queue_items\/{mutex|->{ITEM_EMPTY}}) & queues\/{mutex} = dom(queue_receiving\/{mutex|->{}}) & queues\/{mutex} = dom(queue_sending\/{mutex|->{}}) & !(q1,q2,tk).(q1: queues\/{mutex} & q2: queues\/{mutex} & tk: TASK & tk: (queue_receiving\/{mutex|->{}})(q1) => not(tk: (queue_sending\/{mutex|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{mutex} & q2: queues\/{mutex} & tk: TASK & tk: (queue_sending\/{mutex|->{}})(q2) => not(tk: (queue_receiving\/{mutex|->{}})(q1))) & !(q1,q2,tk).(q1: queues\/{mutex} & q2: queues\/{mutex} & not(q1 = q2) & tk: TASK & tk: (queue_receiving\/{mutex|->{}})(q1) => not(tk: (queue_receiving\/{mutex|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{mutex} & q2: queues\/{mutex} & not(q1 = q2) & tk: TASK & tk: (queue_sending\/{mutex|->{}})(q1) => not(tk: (queue_sending\/{mutex|->{}})(q2))) & semaphores: POW(queues\/{mutex}) & mutex: queues\/{mutex} & mutexes: POW(queues\/{mutex}) & !mt.(mt: mutexes\/{mutex} => (queue_items\/{mutex|->{ITEM_EMPTY}})(mt) = {} or (queue_items\/{mutex|->{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & mutexes_busy: POW(mutexes\/{mutex}) & !mt.(mt: mutexes_busy => (queue_items\/{mutex|->{ITEM_EMPTY}})(mt) = {}) & !mt.(mt: mutexes\/{mutex} & not(mt: mutexes_busy) => (queue_items\/{mutex|->{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & mutex_holder\/{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes\/{mutex} = dom(mutex_holder\/{mutex|->TASK_NULL}) & !que.(que: QUEUE & (not(que: queues) & not(que = mutex)) => not(que: mutexes) & not(que = mutex)) & !mt.(mt: mutexes\/{mutex} & not((queue_items\/{mutex|->{ITEM_EMPTY}})(mt) = {}) => (queue_items\/{mutex|->{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes\/{mutex} & not((queue_items\/{mutex|->{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) => (queue_items\/{mutex|->{ITEM_EMPTY}})(mt) = {}) & mt: queues\/{mutex} & mt: mutexes_busy);
  ((mutex_holder\/{mutex|->TASK_NULL})(mt): tasks);
  (not((mutex_holder\/{mutex|->TASK_NULL})(mt) = idle));
  ("`Local hypotheses'" & mutex: QUEUE & not(mutex: queues) & queue_items\/{mutex|->{ITEM_EMPTY}}: QUEUE +-> POW(ITEM) & queue_receiving\/{mutex|->{}}: QUEUE +-> POW(TASK) & queue_sending\/{mutex|->{}}: QUEUE +-> POW(TASK) & queues\/{mutex} = dom(queue_items\/{mutex|->{ITEM_EMPTY}}) & queues\/{mutex} = dom(queue_receiving\/{mutex|->{}}) & queues\/{mutex} = dom(queue_sending\/{mutex|->{}}) & !(q1,q2,tk).(q1: queues\/{mutex} & q2: queues\/{mutex} & tk: TASK & tk: (queue_receiving\/{mutex|->{}})(q1) => not(tk: (queue_sending\/{mutex|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{mutex} & q2: queues\/{mutex} & tk: TASK & tk: (queue_sending\/{mutex|->{}})(q2) => not(tk: (queue_receiving\/{mutex|->{}})(q1))) & !(q1,q2,tk).(q1: queues\/{mutex} & q2: queues\/{mutex} & not(q1 = q2) & tk: TASK & tk: (queue_receiving\/{mutex|->{}})(q1) => not(tk: (queue_receiving\/{mutex|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{mutex} & q2: queues\/{mutex} & not(q1 = q2) & tk: TASK & tk: (queue_sending\/{mutex|->{}})(q1) => not(tk: (queue_sending\/{mutex|->{}})(q2))) & semaphores: POW(queues\/{mutex}) & mutex: queues\/{mutex} & mutexes: POW(queues\/{mutex}) & !mt.(mt: mutexes\/{mutex} => (queue_items\/{mutex|->{ITEM_EMPTY}})(mt) = {} or (queue_items\/{mutex|->{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & mutexes_busy: POW(mutexes\/{mutex}) & !mt.(mt: mutexes_busy => (queue_items\/{mutex|->{ITEM_EMPTY}})(mt) = {}) & !mt.(mt: mutexes\/{mutex} & not(mt: mutexes_busy) => (queue_items\/{mutex|->{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & mutex_holder\/{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes\/{mutex} = dom(mutex_holder\/{mutex|->TASK_NULL}) & !que.(que: QUEUE & (not(que: queues) & not(que = mutex)) => not(que: mutexes) & not(que = mutex)) & !mt.(mt: mutexes\/{mutex} & not((queue_items\/{mutex|->{ITEM_EMPTY}})(mt) = {}) => (queue_items\/{mutex|->{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes\/{mutex} & not((queue_items\/{mutex|->{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) => (queue_items\/{mutex|->{ITEM_EMPTY}})(mt) = {}) & que: queues\/{mutex} & task: TASK & task: (queue_sending\/{mutex|->{}})(que));
  ("`Local hypotheses'" & mutex: QUEUE & not(mutex: queues) & queue_items\/{mutex|->{ITEM_EMPTY}}: QUEUE +-> POW(ITEM) & queue_receiving\/{mutex|->{}}: QUEUE +-> POW(TASK) & queue_sending\/{mutex|->{}}: QUEUE +-> POW(TASK) & queues\/{mutex} = dom(queue_items\/{mutex|->{ITEM_EMPTY}}) & queues\/{mutex} = dom(queue_receiving\/{mutex|->{}}) & queues\/{mutex} = dom(queue_sending\/{mutex|->{}}) & !(q1,q2,tk).(q1: queues\/{mutex} & q2: queues\/{mutex} & tk: TASK & tk: (queue_receiving\/{mutex|->{}})(q1) => not(tk: (queue_sending\/{mutex|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{mutex} & q2: queues\/{mutex} & tk: TASK & tk: (queue_sending\/{mutex|->{}})(q2) => not(tk: (queue_receiving\/{mutex|->{}})(q1))) & !(q1,q2,tk).(q1: queues\/{mutex} & q2: queues\/{mutex} & not(q1 = q2) & tk: TASK & tk: (queue_receiving\/{mutex|->{}})(q1) => not(tk: (queue_receiving\/{mutex|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{mutex} & q2: queues\/{mutex} & not(q1 = q2) & tk: TASK & tk: (queue_sending\/{mutex|->{}})(q1) => not(tk: (queue_sending\/{mutex|->{}})(q2))) & semaphores: POW(queues\/{mutex}) & mutex: queues\/{mutex} & mutexes: POW(queues\/{mutex}) & !mt.(mt: mutexes\/{mutex} => (queue_items\/{mutex|->{ITEM_EMPTY}})(mt) = {} or (queue_items\/{mutex|->{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & mutexes_busy: POW(mutexes\/{mutex}) & !mt.(mt: mutexes_busy => (queue_items\/{mutex|->{ITEM_EMPTY}})(mt) = {}) & !mt.(mt: mutexes\/{mutex} & not(mt: mutexes_busy) => (queue_items\/{mutex|->{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & mutex_holder\/{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes\/{mutex} = dom(mutex_holder\/{mutex|->TASK_NULL}) & !que.(que: QUEUE & (not(que: queues) & not(que = mutex)) => not(que: mutexes) & not(que = mutex)) & !mt.(mt: mutexes\/{mutex} & not((queue_items\/{mutex|->{ITEM_EMPTY}})(mt) = {}) => (queue_items\/{mutex|->{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) & !mt.(mt: mutexes\/{mutex} & not((queue_items\/{mutex|->{ITEM_EMPTY}})(mt) = {ITEM_EMPTY}) => (queue_items\/{mutex|->{ITEM_EMPTY}})(mt) = {}) & que: queues\/{mutex} & task: TASK & task: (queue_receiving\/{mutex|->{}})(que))
END
&
THEORY EnumerateX IS
  SCHEDULER_STATE == {taskSCHEDULER_NOT_STARTED,taskSCHEDULER_RUNNING,taskSCHEDULER_SUSPENDED};
  COPY_POSITION == {queueSEND_TO_BACK,queueSEND_TO_FRONT};
  QUEUE_TYPE == {TQUE,TSEMAPH,TMUT};
  ERROR_DEFINITION == {errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY,errNO_TASK_TO_RUN,errQUEUE_BLOCKED,errQUEUE_YIELD,errQUEUE_EMPTY,errQUEUE_FULL,pdPASS,pdFAIL,pdTRUE,pdFALSE}
END
&
THEORY Version IS
  POVersion(V3.8.3)(CLT == "V3.7.6")(genOPO == KO, genDivergencePO == KO, local_op == OK)
END
