THEORY ProofList IS
  _f(1) & _f(2) & _f(8) & _f(22) & xSemaphoreCreateRecursiveMutex.7,(_f(494) & _f(40) => _f(496));
  _f(1) & _f(2) & _f(8) & _f(22) & xSemaphoreCreateRecursiveMutex.6,(_f(494) & _f(38) => _f(495));
  _f(1) & _f(2) & _f(8) & _f(22) & xSemaphoreCreateRecursiveMutex.5,(_f(492) & _f(56) => _f(493));
  _f(1) & _f(2) & _f(8) & _f(22) & xSemaphoreCreateRecursiveMutex.4,(_f(490) & _f(28) => _f(491));
  _f(1) & _f(2) & _f(8) & _f(22) & xSemaphoreCreateRecursiveMutex.3,(_f(488) & _f(28) => _f(489));
  _f(1) & _f(2) & _f(8) & _f(22) & xSemaphoreCreateRecursiveMutex.2,(_f(486) & _f(28) => _f(487));
  _f(1) & _f(2) & _f(8) & _f(22) & xSemaphoreCreateRecursiveMutex.1,(_f(484) & _f(25) => _f(485));
  _f(1) & _f(2) & _f(8) & _f(22) & xQueueCreateMutex.7,(_f(494) & _f(40) => _f(496));
  _f(1) & _f(2) & _f(8) & _f(22) & xQueueCreateMutex.6,(_f(494) & _f(38) => _f(495));
  _f(1) & _f(2) & _f(8) & _f(22) & xQueueCreateMutex.5,(_f(492) & _f(56) => _f(493));
  _f(1) & _f(2) & _f(8) & _f(22) & xQueueCreateMutex.4,(_f(490) & _f(28) => _f(491));
  _f(1) & _f(2) & _f(8) & _f(22) & xQueueCreateMutex.3,(_f(488) & _f(28) => _f(489));
  _f(1) & _f(2) & _f(8) & _f(22) & xQueueCreateMutex.2,(_f(486) & _f(28) => _f(487));
  _f(1) & _f(2) & _f(8) & _f(22) & xQueueCreateMutex.1,(_f(484) & _f(25) => _f(485));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(453) & incrementTick.39,(_f(483) & _f(102) => _f(455));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(453) & incrementTick.38,(_f(482) & _f(40) => _f(127));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(453) & incrementTick.37,(_f(482) & _f(38) => _f(119));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(453) & incrementTick.36,(_f(481) & _f(102) => _f(455));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(453) & incrementTick.35,(_f(480) & _f(40) => _f(127));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(453) & incrementTick.34,(_f(480) & _f(38) => _f(119));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(453) & incrementTick.33,(_f(479) & _f(102) => _f(455));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(453) & incrementTick.32,(_f(478) & _f(40) => _f(116));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(453) & incrementTick.31,(_f(477) & _f(102) => _f(455));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(453) & incrementTick.30,(_f(476) & _f(40) => _f(108));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(453) & incrementTick.29,(_f(476) & _f(38) => _f(119));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(453) & incrementTick.28,(_f(475) & _f(102) => _f(455));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(453) & incrementTick.27,(_f(474) & _f(40) => _f(108));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(453) & incrementTick.26,(_f(474) & _f(38) => _f(119));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(453) & incrementTick.25,(_f(473) & _f(102) => _f(455));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(453) & incrementTick.24,(_f(472) & _f(38) => _f(115));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(453) & incrementTick.23,(_f(471) & _f(56) => _f(105));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(453) & incrementTick.22,(_f(470) & _f(102) => _f(455));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(453) & incrementTick.21,(_f(469) & _f(40) => _f(127));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(453) & incrementTick.20,(_f(469) & _f(38) => _f(107));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(453) & incrementTick.19,(_f(468) & _f(56) => _f(105));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(453) & incrementTick.18,(_f(467) & _f(102) => _f(455));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(453) & incrementTick.17,(_f(466) & _f(40) => _f(127));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(453) & incrementTick.16,(_f(466) & _f(38) => _f(107));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(453) & incrementTick.15,(_f(465) & _f(56) => _f(105));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(453) & incrementTick.14,(_f(464) & _f(102) => _f(455));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(453) & incrementTick.13,(_f(463) & _f(40) => _f(116));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(453) & incrementTick.12,(_f(463) & _f(38) => _f(115));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(453) & incrementTick.11,(_f(462) & _f(56) => _f(105));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(453) & incrementTick.10,(_f(461) & _f(102) => _f(455));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(453) & incrementTick.9,(_f(460) & _f(40) => _f(108));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(453) & incrementTick.8,(_f(460) & _f(38) => _f(107));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(453) & incrementTick.7,(_f(459) & _f(56) => _f(105));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(453) & incrementTick.6,(_f(458) & _f(102) => _f(455));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(453) & incrementTick.5,(_f(457) & _f(40) => _f(108));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(453) & incrementTick.4,(_f(457) & _f(38) => _f(107));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(453) & incrementTick.3,(_f(456) & _f(56) => _f(105));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(453) & incrementTick.2,(_f(454) & _f(102) => _f(455));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(453) & incrementTick.1,(_f(99) & _f(44) => _f(100));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(400) & giveMutex.50,(_f(452) & _f(40) => _f(432));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(400) & giveMutex.49,(_f(451) & _f(28) => _f(412));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(400) & giveMutex.48,(_f(450) & _f(28) => _f(410));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(400) & giveMutex.47,(_f(449) & _f(28) => _f(408));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(400) & giveMutex.46,(_f(448) & _f(25) => _f(406));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(400) & giveMutex.45,(_f(447) & _f(40) => _f(426));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(400) & giveMutex.44,(_f(447) & _f(38) => _f(217));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(400) & giveMutex.43,(_f(446) & _f(28) => _f(412));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(400) & giveMutex.42,(_f(445) & _f(28) => _f(410));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(400) & giveMutex.41,(_f(444) & _f(28) => _f(408));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(400) & giveMutex.40,(_f(443) & _f(25) => _f(406));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(400) & giveMutex.39,(_f(442) & _f(40) => _f(420));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(400) & giveMutex.38,(_f(442) & _f(38) => _f(211));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(400) & giveMutex.37,(_f(441) & _f(28) => _f(412));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(400) & giveMutex.36,(_f(440) & _f(28) => _f(410));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(400) & giveMutex.35,(_f(439) & _f(28) => _f(408));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(400) & giveMutex.34,(_f(438) & _f(25) => _f(406));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(400) & giveMutex.33,(_f(437) & _f(40) => _f(414));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(400) & giveMutex.32,(_f(437) & _f(38) => _f(205));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(400) & giveMutex.31,(_f(436) & _f(28) => _f(412));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(400) & giveMutex.30,(_f(435) & _f(28) => _f(410));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(400) & giveMutex.29,(_f(434) & _f(28) => _f(408));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(400) & giveMutex.28,(_f(433) & _f(25) => _f(406));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(400) & giveMutex.27,(_f(431) & _f(40) => _f(432));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(400) & giveMutex.26,(_f(430) & _f(28) => _f(412));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(400) & giveMutex.25,(_f(429) & _f(28) => _f(410));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(400) & giveMutex.24,(_f(428) & _f(28) => _f(408));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(400) & giveMutex.23,(_f(427) & _f(25) => _f(406));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(400) & giveMutex.22,(_f(425) & _f(40) => _f(426));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(400) & giveMutex.21,(_f(425) & _f(38) => _f(217));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(400) & giveMutex.20,(_f(424) & _f(28) => _f(412));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(400) & giveMutex.19,(_f(423) & _f(28) => _f(410));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(400) & giveMutex.18,(_f(422) & _f(28) => _f(408));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(400) & giveMutex.17,(_f(421) & _f(25) => _f(406));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(400) & giveMutex.16,(_f(419) & _f(40) => _f(420));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(400) & giveMutex.15,(_f(419) & _f(38) => _f(211));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(400) & giveMutex.14,(_f(418) & _f(28) => _f(412));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(400) & giveMutex.13,(_f(417) & _f(28) => _f(410));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(400) & giveMutex.12,(_f(416) & _f(28) => _f(408));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(400) & giveMutex.11,(_f(415) & _f(25) => _f(406));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(400) & giveMutex.10,(_f(413) & _f(40) => _f(414));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(400) & giveMutex.9,(_f(413) & _f(38) => _f(205));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(400) & giveMutex.8,(_f(411) & _f(28) => _f(412));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(400) & giveMutex.7,(_f(409) & _f(28) => _f(410));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(400) & giveMutex.6,(_f(407) & _f(28) => _f(408));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(400) & giveMutex.5,(_f(405) & _f(25) => _f(406));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(400) & giveMutex.4,(_f(401) & _f(44) => _f(404));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(400) & giveMutex.3,(_f(401) & _f(44) => _f(403));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(400) & giveMutex.2,(_f(401) & _f(44) => _f(402));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(400) & giveMutex.1,(_f(401) & _f(44) => _f(342));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(383) & takeMutex.12,(_f(398) & _f(28) => _f(399));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(383) & takeMutex.11,(_f(396) & _f(28) => _f(397));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(383) & takeMutex.10,(_f(393) & _f(28) => _f(395));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(383) & takeMutex.9,(_f(393) & _f(25) => _f(394));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(383) & takeMutex.8,(_f(391) & _f(40) => _f(392));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(383) & takeMutex.7,(_f(389) & _f(40) => _f(390));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(383) & takeMutex.6,(_f(389) & _f(38) => _f(39));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(383) & takeMutex.5,(_f(388) & _f(44) => _f(189));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(383) & takeMutex.4,(_f(388) & _f(44) => _f(188));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(383) & takeMutex.3,(_f(384) & _f(44) => _f(387));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(383) & takeMutex.2,(_f(384) & _f(44) => _f(386));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(383) & takeMutex.1,(_f(384) & _f(44) => _f(385));
  _f(1) & _f(2) & _f(8) & _f(22) & createMutex.7,(_f(380) & _f(40) => _f(382));
  _f(1) & _f(2) & _f(8) & _f(22) & createMutex.6,(_f(380) & _f(38) => _f(381));
  _f(1) & _f(2) & _f(8) & _f(22) & createMutex.5,(_f(378) & _f(56) => _f(379));
  _f(1) & _f(2) & _f(8) & _f(22) & createMutex.4,(_f(376) & _f(28) => _f(377));
  _f(1) & _f(2) & _f(8) & _f(22) & createMutex.3,(_f(374) & _f(28) => _f(375));
  _f(1) & _f(2) & _f(8) & _f(22) & createMutex.2,(_f(372) & _f(28) => _f(373));
  _f(1) & _f(2) & _f(8) & _f(22) & createMutex.1,(_f(370) & _f(25) => _f(371));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(340) & giveSemaphore.39,(_f(368) & _f(40) => _f(201));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(340) & giveSemaphore.38,(_f(368) & _f(38) => _f(369));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(340) & giveSemaphore.37,(_f(367) & _f(56) => _f(364));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(340) & giveSemaphore.36,(_f(365) & _f(40) => _f(41));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(340) & giveSemaphore.35,(_f(365) & _f(38) => _f(366));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(340) & giveSemaphore.34,(_f(363) & _f(56) => _f(364));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(340) & giveSemaphore.33,(_f(362) & _f(40) => _f(353));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(340) & giveSemaphore.32,(_f(361) & _f(40) => _f(353));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(340) & giveSemaphore.31,(_f(360) & _f(40) => _f(350));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(340) & giveSemaphore.30,(_f(360) & _f(38) => _f(217));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(340) & giveSemaphore.29,(_f(359) & _f(40) => _f(350));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(340) & giveSemaphore.28,(_f(359) & _f(38) => _f(217));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(340) & giveSemaphore.27,(_f(358) & _f(40) => _f(347));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(340) & giveSemaphore.26,(_f(358) & _f(38) => _f(211));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(340) & giveSemaphore.25,(_f(357) & _f(40) => _f(347));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(340) & giveSemaphore.24,(_f(357) & _f(38) => _f(211));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(340) & giveSemaphore.23,(_f(356) & _f(40) => _f(344));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(340) & giveSemaphore.22,(_f(356) & _f(38) => _f(205));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(340) & giveSemaphore.21,(_f(355) & _f(40) => _f(344));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(340) & giveSemaphore.20,(_f(355) & _f(38) => _f(205));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(340) & giveSemaphore.19,(_f(354) & _f(40) => _f(353));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(340) & giveSemaphore.18,(_f(352) & _f(40) => _f(353));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(340) & giveSemaphore.17,(_f(351) & _f(40) => _f(350));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(340) & giveSemaphore.16,(_f(351) & _f(38) => _f(217));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(340) & giveSemaphore.15,(_f(349) & _f(40) => _f(350));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(340) & giveSemaphore.14,(_f(349) & _f(38) => _f(217));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(340) & giveSemaphore.13,(_f(348) & _f(40) => _f(347));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(340) & giveSemaphore.12,(_f(348) & _f(38) => _f(211));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(340) & giveSemaphore.11,(_f(346) & _f(40) => _f(347));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(340) & giveSemaphore.10,(_f(346) & _f(38) => _f(211));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(340) & giveSemaphore.9,(_f(345) & _f(40) => _f(344));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(340) & giveSemaphore.8,(_f(345) & _f(38) => _f(205));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(340) & giveSemaphore.7,(_f(343) & _f(40) => _f(344));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(340) & giveSemaphore.6,(_f(343) & _f(38) => _f(205));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(340) & giveSemaphore.5,(_f(341) & _f(44) => _f(342));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(340) & giveSemaphore.4,(_f(44) => _f(190));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(340) & giveSemaphore.3,(_f(187) & _f(44) => _f(189));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(340) & giveSemaphore.2,(_f(187) & _f(44) => _f(188));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(340) & giveSemaphore.1,(_f(44) => _f(334));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(311) & takeSemaphore.30,(_f(338) & _f(40) => _f(339));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(311) & takeSemaphore.29,(_f(338) & _f(38) => _f(249));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(311) & takeSemaphore.28,(_f(336) & _f(40) => _f(337));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(311) & takeSemaphore.27,(_f(336) & _f(38) => _f(39));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(311) & takeSemaphore.26,(_f(333) & _f(40) => _f(190));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(311) & takeSemaphore.25,(_f(335) & _f(40) => _f(189));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(311) & takeSemaphore.24,(_f(335) & _f(40) => _f(188));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(311) & takeSemaphore.23,(_f(333) & _f(40) => _f(334));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(311) & takeSemaphore.22,(_f(332) & _f(38) => _f(324));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(311) & takeSemaphore.21,(_f(331) & _f(56) => _f(313));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(311) & takeSemaphore.20,(_f(330) & _f(40) => _f(269));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(311) & takeSemaphore.19,(_f(330) & _f(38) => _f(321));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(311) & takeSemaphore.18,(_f(329) & _f(56) => _f(313));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(311) & takeSemaphore.17,(_f(328) & _f(40) => _f(263));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(311) & takeSemaphore.16,(_f(328) & _f(38) => _f(318));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(311) & takeSemaphore.15,(_f(327) & _f(56) => _f(313));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(311) & takeSemaphore.14,(_f(326) & _f(40) => _f(257));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(311) & takeSemaphore.13,(_f(326) & _f(38) => _f(315));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(311) & takeSemaphore.12,(_f(325) & _f(56) => _f(313));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(311) & takeSemaphore.11,(_f(323) & _f(38) => _f(324));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(311) & takeSemaphore.10,(_f(322) & _f(56) => _f(313));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(311) & takeSemaphore.9,(_f(320) & _f(40) => _f(269));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(311) & takeSemaphore.8,(_f(320) & _f(38) => _f(321));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(311) & takeSemaphore.7,(_f(319) & _f(56) => _f(313));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(311) & takeSemaphore.6,(_f(317) & _f(40) => _f(263));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(311) & takeSemaphore.5,(_f(317) & _f(38) => _f(318));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(311) & takeSemaphore.4,(_f(316) & _f(56) => _f(313));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(311) & takeSemaphore.3,(_f(314) & _f(40) => _f(257));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(311) & takeSemaphore.2,(_f(314) & _f(38) => _f(315));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(311) & takeSemaphore.1,(_f(312) & _f(56) => _f(313));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(303) & deleteSemaphore.6,(_f(310) & _f(40) => _f(308));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(303) & deleteSemaphore.5,(_f(310) & _f(38) => _f(307));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(303) & deleteSemaphore.4,(_f(309) & _f(56) => _f(305));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(303) & deleteSemaphore.3,(_f(306) & _f(40) => _f(308));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(303) & deleteSemaphore.2,(_f(306) & _f(38) => _f(307));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(303) & deleteSemaphore.1,(_f(304) & _f(56) => _f(305));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(293) & createSemaphore.8,(_f(302) & _f(40) => _f(300));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(293) & createSemaphore.7,(_f(302) & _f(38) => _f(299));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(293) & createSemaphore.6,(_f(301) & _f(56) => _f(297));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(293) & createSemaphore.5,(_f(298) & _f(40) => _f(300));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(293) & createSemaphore.4,(_f(298) & _f(38) => _f(299));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(293) & createSemaphore.3,(_f(296) & _f(56) => _f(297));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(293) & createSemaphore.2,(_f(44) => _f(295));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(293) & createSemaphore.1,(_f(44) => _f(294));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(243) & receiveItem.53,(_f(292) & _f(38) => _f(274));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(243) & receiveItem.52,(_f(291) & _f(56) => _f(254));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(243) & receiveItem.51,(_f(290) & _f(38) => _f(274));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(243) & receiveItem.50,(_f(289) & _f(56) => _f(254));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(243) & receiveItem.49,(_f(288) & _f(40) => _f(269));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(243) & receiveItem.48,(_f(288) & _f(38) => _f(268));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(243) & receiveItem.47,(_f(287) & _f(56) => _f(254));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(243) & receiveItem.46,(_f(286) & _f(40) => _f(269));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(243) & receiveItem.45,(_f(286) & _f(38) => _f(268));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(243) & receiveItem.44,(_f(285) & _f(56) => _f(254));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(243) & receiveItem.43,(_f(284) & _f(40) => _f(263));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(243) & receiveItem.42,(_f(284) & _f(38) => _f(262));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(243) & receiveItem.41,(_f(283) & _f(56) => _f(254));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(243) & receiveItem.40,(_f(282) & _f(40) => _f(263));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(243) & receiveItem.39,(_f(282) & _f(38) => _f(262));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(243) & receiveItem.38,(_f(281) & _f(56) => _f(254));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(243) & receiveItem.37,(_f(280) & _f(40) => _f(257));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(243) & receiveItem.36,(_f(280) & _f(38) => _f(256));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(243) & receiveItem.35,(_f(279) & _f(56) => _f(254));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(243) & receiveItem.34,(_f(278) & _f(40) => _f(257));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(243) & receiveItem.33,(_f(278) & _f(38) => _f(256));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(243) & receiveItem.32,(_f(277) & _f(56) => _f(254));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(243) & receiveItem.31,(_f(276) & _f(38) => _f(274));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(243) & receiveItem.30,(_f(275) & _f(56) => _f(254));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(243) & receiveItem.29,(_f(273) & _f(38) => _f(274));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(243) & receiveItem.28,(_f(272) & _f(56) => _f(254));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(243) & receiveItem.27,(_f(271) & _f(40) => _f(269));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(243) & receiveItem.26,(_f(271) & _f(38) => _f(268));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(243) & receiveItem.25,(_f(270) & _f(56) => _f(254));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(243) & receiveItem.24,(_f(267) & _f(40) => _f(269));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(243) & receiveItem.23,(_f(267) & _f(38) => _f(268));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(243) & receiveItem.22,(_f(266) & _f(56) => _f(254));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(243) & receiveItem.21,(_f(265) & _f(40) => _f(263));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(243) & receiveItem.20,(_f(265) & _f(38) => _f(262));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(243) & receiveItem.19,(_f(264) & _f(56) => _f(254));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(243) & receiveItem.18,(_f(261) & _f(40) => _f(263));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(243) & receiveItem.17,(_f(261) & _f(38) => _f(262));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(243) & receiveItem.16,(_f(260) & _f(56) => _f(254));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(243) & receiveItem.15,(_f(259) & _f(40) => _f(257));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(243) & receiveItem.14,(_f(259) & _f(38) => _f(256));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(243) & receiveItem.13,(_f(258) & _f(56) => _f(254));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(243) & receiveItem.12,(_f(255) & _f(40) => _f(257));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(243) & receiveItem.11,(_f(255) & _f(38) => _f(256));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(243) & receiveItem.10,(_f(253) & _f(56) => _f(254));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(243) & receiveItem.9,(_f(251) & _f(40) => _f(252));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(243) & receiveItem.8,(_f(248) & _f(40) => _f(250));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(243) & receiveItem.7,(_f(248) & _f(38) => _f(249));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(243) & receiveItem.6,(_f(246) & _f(40) => _f(247));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(243) & receiveItem.5,(_f(246) & _f(38) => _f(39));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(243) & receiveItem.4,(_f(244) & _f(44) => _f(190));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(243) & receiveItem.3,(_f(245) & _f(44) => _f(189));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(243) & receiveItem.2,(_f(245) & _f(44) => _f(188));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(243) & receiveItem.1,(_f(244) & _f(44) => _f(171));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.67,(_f(242) & _f(197) => _f(223));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.66,(_f(241) & _f(197) => _f(223));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.65,(_f(240) & _f(197) => _f(223));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.64,(_f(239) & _f(197) => _f(223));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.63,(_f(238) & _f(197) => _f(218));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.62,(_f(238) & _f(195) => _f(217));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.61,(_f(237) & _f(197) => _f(218));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.60,(_f(237) & _f(195) => _f(217));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.59,(_f(236) & _f(197) => _f(218));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.58,(_f(236) & _f(195) => _f(217));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.57,(_f(235) & _f(197) => _f(218));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.56,(_f(235) & _f(195) => _f(217));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.55,(_f(234) & _f(197) => _f(212));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.54,(_f(234) & _f(195) => _f(211));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.53,(_f(233) & _f(197) => _f(212));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.52,(_f(233) & _f(195) => _f(211));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.51,(_f(232) & _f(197) => _f(212));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.50,(_f(232) & _f(195) => _f(211));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.49,(_f(231) & _f(197) => _f(212));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.48,(_f(231) & _f(195) => _f(211));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.47,(_f(230) & _f(197) => _f(206));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.46,(_f(230) & _f(195) => _f(205));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.45,(_f(229) & _f(197) => _f(206));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.44,(_f(229) & _f(195) => _f(205));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.43,(_f(228) & _f(197) => _f(206));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.42,(_f(228) & _f(195) => _f(205));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.41,(_f(227) & _f(197) => _f(206));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.40,(_f(227) & _f(195) => _f(205));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.39,(_f(226) & _f(197) => _f(223));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.38,(_f(225) & _f(197) => _f(223));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.37,(_f(224) & _f(197) => _f(223));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.36,(_f(222) & _f(197) => _f(223));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.35,(_f(221) & _f(197) => _f(218));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.34,(_f(221) & _f(195) => _f(217));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.33,(_f(220) & _f(197) => _f(218));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.32,(_f(220) & _f(195) => _f(217));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.31,(_f(219) & _f(197) => _f(218));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.30,(_f(219) & _f(195) => _f(217));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.29,(_f(216) & _f(197) => _f(218));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.28,(_f(216) & _f(195) => _f(217));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.27,(_f(215) & _f(197) => _f(212));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.26,(_f(215) & _f(195) => _f(211));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.25,(_f(214) & _f(197) => _f(212));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.24,(_f(214) & _f(195) => _f(211));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.23,(_f(213) & _f(197) => _f(212));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.22,(_f(213) & _f(195) => _f(211));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.21,(_f(210) & _f(197) => _f(212));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.20,(_f(210) & _f(195) => _f(211));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.19,(_f(209) & _f(197) => _f(206));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.18,(_f(209) & _f(195) => _f(205));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.17,(_f(208) & _f(197) => _f(206));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.16,(_f(208) & _f(195) => _f(205));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.15,(_f(207) & _f(197) => _f(206));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.14,(_f(207) & _f(195) => _f(205));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.13,(_f(204) & _f(197) => _f(206));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.12,(_f(204) & _f(195) => _f(205));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.11,(_f(202) & _f(197) => _f(203));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.10,(_f(199) & _f(197) => _f(201));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.9,(_f(199) & _f(195) => _f(200));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.8,(_f(198) & _f(192) => _f(193));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.7,(_f(194) & _f(197) => _f(41));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.6,(_f(194) & _f(195) => _f(196));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.5,(_f(191) & _f(192) => _f(193));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.4,(_f(186) => _f(190));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.3,(_f(187) & _f(186) => _f(189));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.2,(_f(187) & _f(186) => _f(188));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(185) & sendItem.1,(_f(186) => _f(171));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(170) & queueDelete.15,(_f(184) & _f(40) => _f(178));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(170) & queueDelete.14,(_f(184) & _f(38) => _f(177));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(170) & queueDelete.13,(_f(183) & _f(56) => _f(175));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(170) & queueDelete.12,(_f(182) & _f(40) => _f(178));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(170) & queueDelete.11,(_f(182) & _f(38) => _f(177));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(170) & queueDelete.10,(_f(181) & _f(56) => _f(175));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(170) & queueDelete.9,(_f(180) & _f(40) => _f(178));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(170) & queueDelete.8,(_f(180) & _f(38) => _f(177));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(170) & queueDelete.7,(_f(179) & _f(56) => _f(175));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(170) & queueDelete.6,(_f(176) & _f(40) => _f(178));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(170) & queueDelete.5,(_f(176) & _f(38) => _f(177));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(170) & queueDelete.4,(_f(174) & _f(56) => _f(175));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(170) & queueDelete.3,(_f(44) => _f(173));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(170) & queueDelete.2,(_f(44) => _f(172));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(170) & queueDelete.1,(_f(44) => _f(171));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(161) & xQueueCreate.6,(_f(167) & _f(40) => _f(169));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(161) & xQueueCreate.5,(_f(167) & _f(38) => _f(168));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(161) & xQueueCreate.4,(_f(165) & _f(56) => _f(166));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(161) & xQueueCreate.3,(_f(44) => _f(164));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(161) & xQueueCreate.2,(_f(44) => _f(163));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(161) & xQueueCreate.1,(_f(44) => _f(162));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(147) & vTaskSuspend.12,(_f(160) & _f(40) => _f(152));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(147) & vTaskSuspend.11,(_f(160) & _f(38) => _f(151));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(147) & vTaskSuspend.10,(_f(159) & _f(56) => _f(149));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(147) & vTaskSuspend.9,(_f(156) & _f(40) => _f(158));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(147) & vTaskSuspend.8,(_f(156) & _f(38) => _f(157));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(147) & vTaskSuspend.7,(_f(155) & _f(56) => _f(149));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(147) & vTaskSuspend.6,(_f(154) & _f(40) => _f(152));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(147) & vTaskSuspend.5,(_f(154) & _f(38) => _f(151));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(147) & vTaskSuspend.4,(_f(153) & _f(56) => _f(149));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(147) & vTaskSuspend.3,(_f(150) & _f(40) => _f(152));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(147) & vTaskSuspend.2,(_f(150) & _f(38) => _f(151));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(147) & vTaskSuspend.1,(_f(148) & _f(56) => _f(149));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(139) & vTaskStartScheduler.5,(_f(145) & _f(28) => _f(146));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(139) & vTaskStartScheduler.4,(_f(145) & _f(28) => _f(31));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(139) & vTaskStartScheduler.3,(_f(143) & _f(28) => _f(144));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(139) & vTaskStartScheduler.2,(_f(140) & _f(28) => _f(142));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(139) & vTaskStartScheduler.1,(_f(140) & _f(25) => _f(141));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(98) & xTaskResumeAll.39,(_f(138) & _f(102) => _f(103));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(98) & xTaskResumeAll.38,(_f(137) & _f(40) => _f(127));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(98) & xTaskResumeAll.37,(_f(137) & _f(38) => _f(119));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(98) & xTaskResumeAll.36,(_f(136) & _f(102) => _f(103));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(98) & xTaskResumeAll.35,(_f(135) & _f(40) => _f(127));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(98) & xTaskResumeAll.34,(_f(135) & _f(38) => _f(119));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(98) & xTaskResumeAll.33,(_f(134) & _f(102) => _f(103));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(98) & xTaskResumeAll.32,(_f(133) & _f(38) => _f(115));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(98) & xTaskResumeAll.31,(_f(132) & _f(56) => _f(105));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(98) & xTaskResumeAll.30,(_f(131) & _f(102) => _f(103));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(98) & xTaskResumeAll.29,(_f(130) & _f(40) => _f(127));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(98) & xTaskResumeAll.28,(_f(130) & _f(38) => _f(107));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(98) & xTaskResumeAll.27,(_f(129) & _f(56) => _f(105));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(98) & xTaskResumeAll.26,(_f(128) & _f(102) => _f(103));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(98) & xTaskResumeAll.25,(_f(126) & _f(40) => _f(127));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(98) & xTaskResumeAll.24,(_f(126) & _f(38) => _f(107));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(98) & xTaskResumeAll.23,(_f(125) & _f(56) => _f(105));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(98) & xTaskResumeAll.22,(_f(124) & _f(102) => _f(103));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(98) & xTaskResumeAll.21,(_f(123) & _f(40) => _f(116));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(98) & xTaskResumeAll.20,(_f(122) & _f(102) => _f(103));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(98) & xTaskResumeAll.19,(_f(121) & _f(40) => _f(108));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(98) & xTaskResumeAll.18,(_f(121) & _f(38) => _f(119));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(98) & xTaskResumeAll.17,(_f(120) & _f(102) => _f(103));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(98) & xTaskResumeAll.16,(_f(118) & _f(40) => _f(108));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(98) & xTaskResumeAll.15,(_f(118) & _f(38) => _f(119));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(98) & xTaskResumeAll.14,(_f(117) & _f(102) => _f(103));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(98) & xTaskResumeAll.13,(_f(114) & _f(40) => _f(116));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(98) & xTaskResumeAll.12,(_f(114) & _f(38) => _f(115));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(98) & xTaskResumeAll.11,(_f(113) & _f(56) => _f(105));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(98) & xTaskResumeAll.10,(_f(112) & _f(102) => _f(103));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(98) & xTaskResumeAll.9,(_f(111) & _f(40) => _f(108));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(98) & xTaskResumeAll.8,(_f(111) & _f(38) => _f(107));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(98) & xTaskResumeAll.7,(_f(110) & _f(56) => _f(105));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(98) & xTaskResumeAll.6,(_f(109) & _f(102) => _f(103));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(98) & xTaskResumeAll.5,(_f(106) & _f(40) => _f(108));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(98) & xTaskResumeAll.4,(_f(106) & _f(38) => _f(107));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(98) & xTaskResumeAll.3,(_f(104) & _f(56) => _f(105));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(98) & xTaskResumeAll.2,(_f(101) & _f(102) => _f(103));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(98) & xTaskResumeAll.1,(_f(99) & _f(44) => _f(100));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(90) & vTaskResume.6,(_f(97) & _f(40) => _f(95));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(90) & vTaskResume.5,(_f(97) & _f(38) => _f(94));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(90) & vTaskResume.4,(_f(96) & _f(56) => _f(92));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(90) & vTaskResume.3,(_f(93) & _f(40) => _f(95));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(90) & vTaskResume.2,(_f(93) & _f(38) => _f(94));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(90) & vTaskResume.1,(_f(91) & _f(56) => _f(92));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(88) & vTaskEndScheduler.1,(_f(89) & _f(25) => _f(7));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(47) & vTaskDelete.39,(_f(87) & _f(40) => _f(60));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(47) & vTaskDelete.38,(_f(87) & _f(38) => _f(59));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(47) & vTaskDelete.37,(_f(86) & _f(56) => _f(57));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(47) & vTaskDelete.36,(_f(85) & _f(28) => _f(54));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(47) & vTaskDelete.35,(_f(84) & _f(28) => _f(52));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(47) & vTaskDelete.34,(_f(84) & _f(28) => _f(51));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(47) & vTaskDelete.33,(_f(83) & _f(25) => _f(49));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(47) & vTaskDelete.32,(_f(80) & _f(40) => _f(82));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(47) & vTaskDelete.31,(_f(80) & _f(38) => _f(81));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(47) & vTaskDelete.30,(_f(79) & _f(56) => _f(57));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(47) & vTaskDelete.29,(_f(78) & _f(28) => _f(54));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(47) & vTaskDelete.28,(_f(77) & _f(28) => _f(52));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(47) & vTaskDelete.27,(_f(77) & _f(28) => _f(51));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(47) & vTaskDelete.26,(_f(76) & _f(25) => _f(49));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(47) & vTaskDelete.25,(_f(73) & _f(40) => _f(75));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(47) & vTaskDelete.24,(_f(73) & _f(38) => _f(74));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(47) & vTaskDelete.23,(_f(72) & _f(56) => _f(57));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(47) & vTaskDelete.22,(_f(71) & _f(28) => _f(54));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(47) & vTaskDelete.21,(_f(70) & _f(28) => _f(52));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(47) & vTaskDelete.20,(_f(70) & _f(28) => _f(51));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(47) & vTaskDelete.19,(_f(69) & _f(25) => _f(49));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(47) & vTaskDelete.18,(_f(68) & _f(40) => _f(60));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(47) & vTaskDelete.17,(_f(68) & _f(38) => _f(59));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(47) & vTaskDelete.16,(_f(67) & _f(56) => _f(57));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(47) & vTaskDelete.15,(_f(66) & _f(28) => _f(54));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(47) & vTaskDelete.14,(_f(65) & _f(28) => _f(52));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(47) & vTaskDelete.13,(_f(65) & _f(28) => _f(51));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(47) & vTaskDelete.12,(_f(64) & _f(25) => _f(49));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(47) & vTaskDelete.11,(_f(63) & _f(40) => _f(60));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(47) & vTaskDelete.10,(_f(63) & _f(38) => _f(59));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(47) & vTaskDelete.9,(_f(62) & _f(56) => _f(57));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(47) & vTaskDelete.8,(_f(61) & _f(25) => _f(49));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(47) & vTaskDelete.7,(_f(58) & _f(40) => _f(60));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(47) & vTaskDelete.6,(_f(58) & _f(38) => _f(59));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(47) & vTaskDelete.5,(_f(55) & _f(56) => _f(57));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(47) & vTaskDelete.4,(_f(53) & _f(28) => _f(54));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(47) & vTaskDelete.3,(_f(50) & _f(28) => _f(52));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(47) & vTaskDelete.2,(_f(50) & _f(28) => _f(51));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(47) & vTaskDelete.1,(_f(48) & _f(25) => _f(49));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(42) & vTaskDelayUntil.3,(_f(46) & _f(40) => _f(41));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(42) & vTaskDelayUntil.2,(_f(46) & _f(38) => _f(39));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(42) & vTaskDelayUntil.1,(_f(43) & _f(44) => _f(45));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(36) & vTaskDelay.2,(_f(37) & _f(40) => _f(41));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(36) & vTaskDelay.1,(_f(37) & _f(38) => _f(39));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(23) & xTaskCreate.8,(_f(35) & _f(28) => _f(32));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(23) & xTaskCreate.7,(_f(35) & _f(28) => _f(31));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(23) & xTaskCreate.6,(_f(34) & _f(28) => _f(29));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(23) & xTaskCreate.5,(_f(33) & _f(25) => _f(26));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(23) & xTaskCreate.4,(_f(30) & _f(28) => _f(32));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(23) & xTaskCreate.3,(_f(30) & _f(28) => _f(31));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(23) & xTaskCreate.2,(_f(27) & _f(28) => _f(29));
  _f(1) & _f(2) & _f(8) & _f(22) & _f(23) & xTaskCreate.1,(_f(24) & _f(25) => _f(26));
  _f(1) & _f(2) & _f(8) & AssertionLemmas.5,(_f(19) & _f(20) => _f(21));
  _f(1) & _f(2) & _f(8) & AssertionLemmas.4,(_f(14) & _f(17) => _f(18));
  _f(1) & _f(2) & _f(8) & AssertionLemmas.3,(_f(14) & _f(15) => _f(16));
  _f(1) & _f(2) & _f(8) & AssertionLemmas.2,(_f(12) & _f(13) => _f(11));
  _f(1) & _f(2) & _f(8) & AssertionLemmas.1,(_f(9) & _f(10) => _f(11));
  _f(1) & _f(2) & Initialisation.2,(_f(3) & _f(6) => _f(7));
  _f(1) & _f(2) & Initialisation.1,(_f(3) & _f(4) => _f(5))
END
&
THEORY Formulas IS
  ("`Seen and used machines properties'" & BIT = 0..1 & MAX_DELAY: 0..2147483647 & 1<=MAX_DELAY & NULL_PARAMETER: PARAMETER & PRIORITY: POW(NAT) & TICK: POW(NAT) & TICK = 0..MAX_DELAY & TICK_INCREMENT: TICK*TICK +-> TICK & dom(TICK_INCREMENT) = TICK*TICK & TICK_INCREMENT = %(tick,inc).(tick: TICK & inc: TICK | (tick+inc) mod MAX_DELAY) & QUEUE_NULL: QUEUE & ITEM_NULL: ITEM & ITEM_EMPTY: ITEM & TASK_NULL: TASK & REMOVE_EVENT: TASK*POW(QUEUE)*(QUEUE +-> POW(TASK)) +-> (QUEUE +-> POW(TASK)) & REMOVE_EVENT = %(task,queues,pending).(task: TASK & queues: POW(QUEUE) & pending: QUEUE +-> POW(TASK) | %queue.(queue: queues & queue: dom(pending) | pending(queue)-{task})) & semGIVE_BLOCK_TIME: TICK & IDLE_PRIORITY: PRIORITY & IDLE_PRIORITY = 0 & QUEUE_LENGTH: POW(NAT) & QUEUE_LENGTH = 0..2147483647 & NAME: FIN(INTEGER) & not(NAME = {}) & PARAMETER: FIN(INTEGER) & not(PARAMETER = {}) & TASK: FIN(INTEGER) & not(TASK = {}) & STACK: FIN(INTEGER) & not(STACK = {}) & TASK_CODE: FIN(INTEGER) & not(TASK_CODE = {}) & ITEM: FIN(INTEGER) & not(ITEM = {}) & QUEUE: FIN(INTEGER) & not(QUEUE = {}) & (1..3)*{SCHEDULER_STATE}: FIN(NATURAL*{SCHEDULER_STATE}) & not((1..3)*{SCHEDULER_STATE} = {}) & (1..2)*{COPY_POSITION}: FIN(NATURAL*{COPY_POSITION}) & not((1..2)*{COPY_POSITION} = {}) & (1..3)*{QUEUE_TYPE}: FIN(NATURAL*{QUEUE_TYPE}) & not((1..3)*{QUEUE_TYPE} = {}) & (1..10)*{ERROR_DEFINITION}: FIN(NATURAL*{ERROR_DEFINITION}) & not((1..10)*{ERROR_DEFINITION} = {}) & configMAX_PRIORITIES: INTEGER & 0<=configMAX_PRIORITIES & configMAX_PRIORITIES<=2147483647 & 1<=configMAX_PRIORITIES & configTOTAL_HEAP_SIZE: INTEGER & 0<=configTOTAL_HEAP_SIZE & configTOTAL_HEAP_SIZE<=2147483647 & configMINIMAL_STACK_SIZE: INTEGER & 0<=configMINIMAL_STACK_SIZE & configMINIMAL_STACK_SIZE<=2147483647 & INCLUDE_uxTaskPriorityGet: BIT & INCLUDE_vTaskDelete: BIT & INCLUDE_vTaskSuspend: BIT & INCLUDE_xTaskGetSchedulerState: BIT & INCLUDE_vTaskPrioritySet: BIT & INCLUDE_xTaskGetCurrentTaskHandle: BIT & INCLUDE_vTaskDelayUntil: BIT & INCLUDE_vTaskDelay: BIT & PRIORITY = 0..configMAX_PRIORITIES-1);
  ("`Included,imported and extended machines properties'" & remove_task: (QUEUE +-> POW(TASK))*POW(TASK) +-> (QUEUE +-> POW(TASK)) & dom(remove_task) = (QUEUE +-> POW(TASK))*POW(TASK) & remove_task = %(q_task,unblocked).(q_task: QUEUE +-> POW(TASK) & unblocked: POW(TASK) | %q1.(q1: QUEUE & q1: dom(q_task) | q_task(q1)-unblocked)) & "`Included,imported and extended machines invariants'" & active: BOOL & tasks: FIN(TASK) & blocked: FIN(TASK) & blocked: POW(tasks) & runable: FIN(TASK) & runable: POW(tasks) & suspended: FIN(TASK) & suspended: POW(tasks) & runable/\blocked = {} & blocked/\suspended = {} & suspended/\runable = {} & tasks = suspended\/blocked\/runable & running: TASK & idle: TASK & (active = TRUE => not(runable = {}) & running: runable & idle: runable & not(TASK_NULL: tasks)) & queues: POW(QUEUE) & queue_receiving: QUEUE +-> POW(TASK) & queue_sending: QUEUE +-> POW(TASK) & queues = dom(queue_receiving) & queues = dom(queue_sending) & queues_msg: POW(queues) & queues_msg_full: POW(queues_msg) & queues_msg_empty: POW(queues_msg) & queues_msg_full/\queues_msg_empty = {} & queue_items: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: queue_receiving(q1) => not(tk: queue_receiving(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: queue_sending(q1) => not(tk: queue_sending(q2))) & semaphores: POW(QUEUE) & semaphores: POW(queues) & semaphores_busy: POW(semaphores) & mutexes: POW(queues) & mutex_holder: QUEUE +-> TASK & mutexes = dom(mutex_holder) & mutexes_busy: POW(mutexes) & !mt.(mt: mutexes_busy => not(mutex_holder(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy) => mutex_holder(mt) = TASK_NULL) & queues_msg/\semaphores = {} & queues_msg/\mutexes = {} & mutexes/\semaphores = {} & "`Included,imported and extended machines assertions'" & (active = TRUE => not(running: suspended)) & (active = TRUE => not(running: blocked)) & (active = TRUE => running: runable) & (active = TRUE => not(idle = TASK_NULL)) & (active = TRUE => not(idle: suspended)) & (active = TRUE => not(idle: blocked)) & (active = TRUE => idle: runable) & (active = TRUE => not(tasks = {})) & (active = TRUE => not(runable = {})) & !que.(que: QUEUE & not(que: queues) => not(que: mutexes)) & !que.(que: QUEUE & not(que: queues) => not(que: semaphores)) & "`Seen and used machines assertions'" & BIT: POW(NATURAL) & configMAX_PRIORITIES: INTEGER & 0<=configMAX_PRIORITIES);
  ("`Local hypotheses'" & idle$0: TASK & running$0: TASK & {}: FIN(TASK) & {}: POW({}) & {}: POW(QUEUE) & {}: QUEUE +-> POW(TASK) & dom({}) = {} & {}: QUEUE +-> POW(ITEM) & {}: QUEUE +-> TASK);
  "`Check that the invariant (tickCount: TICK) is established by the initialisation - ref 3.3'";
  (0: TICK);
  "`Check that the invariant (ran(mutex_holder) <: tasks\/{TASK_NULL}) is established by the initialisation - ref 3.3'";
  (ran({}): POW({}\/{TASK_NULL}));
  ("`Component invariant'" & tickCount: TICK & tickMissed: TICK & ran(mutex_holder): POW(tasks\/{TASK_NULL}) & (active = TRUE => not(idle: ran(mutex_holder)) & !mt.(mt: mutexes_busy => mutex_holder(mt): tasks) & !mt.(mt: mutexes & not(mt: mutexes_busy) => not(mutex_holder(mt): tasks))) & !mt.(mt: mutexes => queue_sending(mt) = {}) & !que.(que: queues => queue_sending(que): POW(blocked\/suspended)) & !que.(que: queues => queue_receiving(que): POW(blocked\/suspended)));
  ("`Local hypotheses'" & que: queues & task: tasks & task: queue_receiving(que));
  "`Check assertion (!(que,task).(que: queues & task: tasks & task: queue_receiving(que) => task: blocked\/suspended)) deduction - ref 3.2, 4.2, 5.3'";
  (task: blocked\/suspended);
  ("`Local hypotheses'" & que: queues & task: tasks & task: queue_sending(que));
  "`Check assertion (!(que,task).(que: queues & task: tasks & task: queue_sending(que) => task: blocked\/suspended)) deduction - ref 3.2, 4.2, 5.3'";
  ("`Local hypotheses'" & que: queues & task: TASK & not(task: blocked) & not(task: suspended));
  "`Check assertion (!(que,task).(que: queues & task: TASK & task/:blocked & task/:suspended => task/:queue_receiving(que))) deduction - ref 3.2, 4.2, 5.3'";
  (not(task: queue_receiving(que)));
  "`Check assertion (!(que,task).(que: queues & task: TASK & task/:blocked & task/:suspended => task/:queue_sending(que))) deduction - ref 3.2, 4.2, 5.3'";
  (not(task: queue_sending(que)));
  ("`Local hypotheses'" & mt: mutexes_busy & active = TRUE);
  "`Check assertion (!mt.(mt: mutexes_busy & active = TRUE => mutex_holder(mt)/=idle)) deduction - ref 3.2, 4.2, 5.3'";
  (not(mutex_holder(mt) = idle));
  ("`Component assertions'" & (active = TRUE => !mt.(mt: mutexes_busy => not(mutex_holder(mt) = idle))) & !(que,task).(que: queues & task: TASK & not(task: blocked) & not(task: suspended) => not(task: queue_sending(que))) & !(que,task).(que: queues & task: TASK & not(task: blocked) & not(task: suspended) => not(task: queue_receiving(que))) & !(que,task).(que: queues & task: tasks & task: queue_sending(que) => task: blocked\/suspended) & !(que,task).(que: queues & task: tasks & task: queue_receiving(que) => task: blocked\/suspended));
  ("`xTaskCreate preconditions in this component'" & pvTaskCode: TASK_CODE & pcName: NAME & usStackDepth: INTEGER & 0<=usStackDepth & usStackDepth<=2147483647 & pvParameters: POW(PARAMETER) & uxPriority: PRIORITY);
  ("`Local hypotheses'" & task: TASK & not(task: tasks) & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task = TASK_NULL) & tasks\/{task}: FIN(TASK) & blocked: POW(tasks\/{task}) & n_runable: FIN(TASK) & n_runable: POW(tasks\/{task}) & suspended: POW(tasks\/{task}) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks\/{task} = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  "`Check that the invariant (ran(mutex_holder) <: tasks\/{TASK_NULL}) is preserved by the operation - ref 3.4'";
  (ran(mutex_holder): POW(tasks\/{task}\/{TASK_NULL}));
  ("`Local hypotheses'" & task: TASK & not(task: tasks) & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task = TASK_NULL) & tasks\/{task}: FIN(TASK) & blocked: POW(tasks\/{task}) & n_runable: FIN(TASK) & n_runable: POW(tasks\/{task}) & suspended: POW(tasks\/{task}) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks\/{task} = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & active = TRUE & mt: mutexes_busy);
  "`Check that the invariant (active = TRUE => idle/:ran(mutex_holder) & !mt.(mt: mutexes_busy => mutex_holder(mt): tasks) & !mt.(mt: mutexes & mt/:mutexes_busy => mutex_holder(mt)/:tasks)) is preserved by the operation - ref 3.4'";
  (mutex_holder(mt): tasks\/{task});
  ("`Local hypotheses'" & task: TASK & not(task: tasks) & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task = TASK_NULL) & tasks\/{task}: FIN(TASK) & blocked: POW(tasks\/{task}) & n_runable: FIN(TASK) & n_runable: POW(tasks\/{task}) & suspended: POW(tasks\/{task}) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks\/{task} = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & active = TRUE & mt: mutexes & not(mt: mutexes_busy));
  (not(mutex_holder(mt): tasks));
  (not(mutex_holder(mt) = task));
  ("`Local hypotheses'" & task: TASK & not(task: tasks) & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task = TASK_NULL) & running$0: n_runable & tasks\/{task}: FIN(TASK) & blocked: POW(tasks\/{task}) & n_runable: FIN(TASK) & n_runable: POW(tasks\/{task}) & suspended: POW(tasks\/{task}) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks\/{task} = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & task: TASK & not(task: tasks) & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task = TASK_NULL) & running$0: n_runable & tasks\/{task}: FIN(TASK) & blocked: POW(tasks\/{task}) & n_runable: FIN(TASK) & n_runable: POW(tasks\/{task}) & suspended: POW(tasks\/{task}) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks\/{task} = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & active = TRUE & mt: mutexes_busy);
  ("`Local hypotheses'" & task: TASK & not(task: tasks) & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task = TASK_NULL) & running$0: n_runable & tasks\/{task}: FIN(TASK) & blocked: POW(tasks\/{task}) & n_runable: FIN(TASK) & n_runable: POW(tasks\/{task}) & suspended: POW(tasks\/{task}) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks\/{task} = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & active = TRUE & mt: mutexes & not(mt: mutexes_busy));
  ("`vTaskDelay preconditions in this component'" & xTicksToDelay: TICK & INCLUDE_vTaskDelay = 1 & not(running = idle) & running: runable);
  ("`Local hypotheses'" & 1<=xTicksToDelay & tickWakeup: TICK & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & blocked\/{running}: FIN(TASK) & running: tasks & n_runable: FIN(TASK) & not(running: n_runable) & n_runable/\blocked = {} & blocked\/{running}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/(blocked\/{running})\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked) & not(running$0 = running)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  "`Check that the invariant (!que.(que: queues => queue_sending(que) <: blocked\/suspended)) is preserved by the operation - ref 3.4'";
  (queue_sending(que): POW(blocked\/{running}\/suspended));
  "`Check that the invariant (!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) is preserved by the operation - ref 3.4'";
  (queue_receiving(que): POW(blocked\/{running}\/suspended));
  ("`vTaskDelayUntil preconditions in this component'" & pxPreviousWakeTime: TICK & xTimeIncrement: TICK & not(running = idle) & INCLUDE_vTaskDelayUntil = 1 & running: runable);
  ("`Local hypotheses'" & 1<=xTimeIncrement);
  "`Check preconditions of called operation, or While loop construction, or Assert predicates'";
  (TICK_INCREMENT(pxPreviousWakeTime,xTimeIncrement): TICK);
  ("`Local hypotheses'" & 1<=xTimeIncrement & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & blocked\/{running}: FIN(TASK) & running: tasks & n_runable: FIN(TASK) & not(running: n_runable) & n_runable/\blocked = {} & blocked\/{running}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/(blocked\/{running})\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked) & not(running$0 = running)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`vTaskDelete preconditions in this component'" & INCLUDE_vTaskDelete = 1 & pxTaskToDelete: TASK & pxTaskToDelete: tasks & not(pxTaskToDelete = idle) & not(pxTaskToDelete: ran(mutex_holder)));
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToDelete: queue_sending(pxQueue$0) & pxTaskToDelete: runable & n_runable: POW(tasks) & n_runable = runable-{pxTaskToDelete} & pxTaskToDelete = running & active = TRUE & running$0: n_runable & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & n_runable: FIN(TASK) & n_runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks-{pxTaskToDelete} = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & (active = TRUE => not(n_runable = {})));
  (ran(mutex_holder): POW(tasks-{pxTaskToDelete}\/{TASK_NULL}));
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToDelete: queue_sending(pxQueue$0) & pxTaskToDelete: runable & n_runable: POW(tasks) & n_runable = runable-{pxTaskToDelete} & pxTaskToDelete = running & active = TRUE & running$0: n_runable & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & n_runable: FIN(TASK) & n_runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks-{pxTaskToDelete} = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & (active = TRUE => not(n_runable = {})) & mt: mutexes_busy);
  (mutex_holder(mt): tasks);
  (not(mutex_holder(mt) = pxTaskToDelete));
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToDelete: queue_sending(pxQueue$0) & pxTaskToDelete: runable & n_runable: POW(tasks) & n_runable = runable-{pxTaskToDelete} & pxTaskToDelete = running & active = TRUE & running$0: n_runable & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & n_runable: FIN(TASK) & n_runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks-{pxTaskToDelete} = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & (active = TRUE => not(n_runable = {})) & mt: mutexes & not(mt: mutexes_busy) & mutex_holder(mt): tasks);
  (mutex_holder(mt) = pxTaskToDelete);
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToDelete: queue_sending(pxQueue$0) & pxTaskToDelete: runable & n_runable: POW(tasks) & n_runable = runable-{pxTaskToDelete} & pxTaskToDelete = running & active = TRUE & running$0: n_runable & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & n_runable: FIN(TASK) & n_runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks-{pxTaskToDelete} = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  "`Check that the invariant (!mt.(mt: mutexes => queue_sending(mt) = {})) is preserved by the operation - ref 3.4'";
  ((queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(mt) = {});
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToDelete: queue_sending(pxQueue$0) & pxTaskToDelete: runable & n_runable: POW(tasks) & n_runable = runable-{pxTaskToDelete} & pxTaskToDelete = running & active = TRUE & running$0: n_runable & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & n_runable: FIN(TASK) & n_runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks-{pxTaskToDelete} = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & (active = TRUE => not(n_runable = {})) & que: queues);
  ((queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(que): POW(blocked\/suspended));
  ((queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(que): POW(blocked\/suspended));
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToDelete: queue_sending(pxQueue$0) & pxTaskToDelete: runable & n_runable: POW(tasks) & n_runable = runable-{pxTaskToDelete} & pxTaskToDelete = running & not(active = TRUE) & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & n_runable: FIN(TASK) & n_runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks-{pxTaskToDelete} = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToDelete: queue_sending(pxQueue$0) & pxTaskToDelete: runable & n_runable: POW(tasks) & n_runable = runable-{pxTaskToDelete} & pxTaskToDelete = running & not(active = TRUE) & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & n_runable: FIN(TASK) & n_runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks-{pxTaskToDelete} = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToDelete: queue_sending(pxQueue$0) & pxTaskToDelete: runable & n_runable: POW(tasks) & n_runable = runable-{pxTaskToDelete} & pxTaskToDelete = running & not(active = TRUE) & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & n_runable: FIN(TASK) & n_runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks-{pxTaskToDelete} = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToDelete: queue_sending(pxQueue$0) & pxTaskToDelete: runable & n_runable: POW(tasks) & n_runable = runable-{pxTaskToDelete} & not(pxTaskToDelete = running) & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & n_runable: FIN(TASK) & n_runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks-{pxTaskToDelete} = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToDelete: queue_sending(pxQueue$0) & pxTaskToDelete: runable & n_runable: POW(tasks) & n_runable = runable-{pxTaskToDelete} & not(pxTaskToDelete = running) & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & n_runable: FIN(TASK) & n_runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks-{pxTaskToDelete} = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & (active = TRUE => not(n_runable = {})) & active = TRUE & mt: mutexes_busy);
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToDelete: queue_sending(pxQueue$0) & pxTaskToDelete: runable & n_runable: POW(tasks) & n_runable = runable-{pxTaskToDelete} & not(pxTaskToDelete = running) & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & n_runable: FIN(TASK) & n_runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks-{pxTaskToDelete} = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & (active = TRUE => not(n_runable = {})) & active = TRUE & mt: mutexes & not(mt: mutexes_busy) & mutex_holder(mt): tasks);
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToDelete: queue_sending(pxQueue$0) & pxTaskToDelete: runable & n_runable: POW(tasks) & n_runable = runable-{pxTaskToDelete} & not(pxTaskToDelete = running) & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & n_runable: FIN(TASK) & n_runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks-{pxTaskToDelete} = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToDelete: queue_sending(pxQueue$0) & pxTaskToDelete: runable & n_runable: POW(tasks) & n_runable = runable-{pxTaskToDelete} & not(pxTaskToDelete = running) & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & n_runable: FIN(TASK) & n_runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks-{pxTaskToDelete} = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToDelete: queue_sending(pxQueue$0) & not(pxTaskToDelete: runable) & pxTaskToDelete: blocked & tasks-{pxTaskToDelete}: FIN(TASK) & blocked-{pxTaskToDelete}: FIN(TASK) & blocked-{pxTaskToDelete}: POW(tasks-{pxTaskToDelete}) & runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & runable/\blocked-{pxTaskToDelete} = {} & blocked-{pxTaskToDelete}/\suspended = {} & tasks-{pxTaskToDelete} = suspended\/blocked-{pxTaskToDelete}\/runable & (active = TRUE => not(runable = {}) & running: runable & idle: runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & (active = TRUE => not(running: blocked & not(running = pxTaskToDelete))) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})));
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToDelete: queue_sending(pxQueue$0) & not(pxTaskToDelete: runable) & pxTaskToDelete: blocked & tasks-{pxTaskToDelete}: FIN(TASK) & blocked-{pxTaskToDelete}: FIN(TASK) & blocked-{pxTaskToDelete}: POW(tasks-{pxTaskToDelete}) & runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & runable/\blocked-{pxTaskToDelete} = {} & blocked-{pxTaskToDelete}/\suspended = {} & tasks-{pxTaskToDelete} = suspended\/blocked-{pxTaskToDelete}\/runable & (active = TRUE => not(runable = {}) & running: runable & idle: runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & (active = TRUE => not(running: blocked & not(running = pxTaskToDelete))) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & active = TRUE & mt: mutexes_busy);
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToDelete: queue_sending(pxQueue$0) & not(pxTaskToDelete: runable) & pxTaskToDelete: blocked & tasks-{pxTaskToDelete}: FIN(TASK) & blocked-{pxTaskToDelete}: FIN(TASK) & blocked-{pxTaskToDelete}: POW(tasks-{pxTaskToDelete}) & runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & runable/\blocked-{pxTaskToDelete} = {} & blocked-{pxTaskToDelete}/\suspended = {} & tasks-{pxTaskToDelete} = suspended\/blocked-{pxTaskToDelete}\/runable & (active = TRUE => not(runable = {}) & running: runable & idle: runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & (active = TRUE => not(running: blocked & not(running = pxTaskToDelete))) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & active = TRUE & mt: mutexes & not(mt: mutexes_busy) & mutex_holder(mt): tasks);
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToDelete: queue_sending(pxQueue$0) & not(pxTaskToDelete: runable) & pxTaskToDelete: blocked & tasks-{pxTaskToDelete}: FIN(TASK) & blocked-{pxTaskToDelete}: FIN(TASK) & blocked-{pxTaskToDelete}: POW(tasks-{pxTaskToDelete}) & runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & runable/\blocked-{pxTaskToDelete} = {} & blocked-{pxTaskToDelete}/\suspended = {} & tasks-{pxTaskToDelete} = suspended\/blocked-{pxTaskToDelete}\/runable & (active = TRUE => not(runable = {}) & running: runable & idle: runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & (active = TRUE => not(running: blocked & not(running = pxTaskToDelete))) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & mt: mutexes);
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToDelete: queue_sending(pxQueue$0) & not(pxTaskToDelete: runable) & pxTaskToDelete: blocked & tasks-{pxTaskToDelete}: FIN(TASK) & blocked-{pxTaskToDelete}: FIN(TASK) & blocked-{pxTaskToDelete}: POW(tasks-{pxTaskToDelete}) & runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & runable/\blocked-{pxTaskToDelete} = {} & blocked-{pxTaskToDelete}/\suspended = {} & tasks-{pxTaskToDelete} = suspended\/blocked-{pxTaskToDelete}\/runable & (active = TRUE => not(runable = {}) & running: runable & idle: runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & (active = TRUE => not(running: blocked & not(running = pxTaskToDelete))) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & que: queues);
  ((queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(que): POW(blocked-{pxTaskToDelete}\/suspended));
  ((queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(que): POW(blocked-{pxTaskToDelete}\/suspended));
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToDelete: queue_sending(pxQueue$0) & not(pxTaskToDelete: runable) & not(pxTaskToDelete: blocked) & pxTaskToDelete: suspended & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & runable: POW(tasks-{pxTaskToDelete}) & suspended-{pxTaskToDelete}: FIN(TASK) & suspended-{pxTaskToDelete}: POW(tasks-{pxTaskToDelete}) & blocked/\suspended-{pxTaskToDelete} = {} & suspended-{pxTaskToDelete}/\runable = {} & tasks-{pxTaskToDelete} = suspended-{pxTaskToDelete}\/blocked\/runable & (active = TRUE => not(runable = {}) & running: runable & idle: runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & (active = TRUE => not(running: suspended & not(running = pxTaskToDelete))) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})));
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToDelete: queue_sending(pxQueue$0) & not(pxTaskToDelete: runable) & not(pxTaskToDelete: blocked) & pxTaskToDelete: suspended & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & runable: POW(tasks-{pxTaskToDelete}) & suspended-{pxTaskToDelete}: FIN(TASK) & suspended-{pxTaskToDelete}: POW(tasks-{pxTaskToDelete}) & blocked/\suspended-{pxTaskToDelete} = {} & suspended-{pxTaskToDelete}/\runable = {} & tasks-{pxTaskToDelete} = suspended-{pxTaskToDelete}\/blocked\/runable & (active = TRUE => not(runable = {}) & running: runable & idle: runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & (active = TRUE => not(running: suspended & not(running = pxTaskToDelete))) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & active = TRUE & mt: mutexes_busy);
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToDelete: queue_sending(pxQueue$0) & not(pxTaskToDelete: runable) & not(pxTaskToDelete: blocked) & pxTaskToDelete: suspended & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & runable: POW(tasks-{pxTaskToDelete}) & suspended-{pxTaskToDelete}: FIN(TASK) & suspended-{pxTaskToDelete}: POW(tasks-{pxTaskToDelete}) & blocked/\suspended-{pxTaskToDelete} = {} & suspended-{pxTaskToDelete}/\runable = {} & tasks-{pxTaskToDelete} = suspended-{pxTaskToDelete}\/blocked\/runable & (active = TRUE => not(runable = {}) & running: runable & idle: runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & (active = TRUE => not(running: suspended & not(running = pxTaskToDelete))) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & active = TRUE & mt: mutexes & not(mt: mutexes_busy) & mutex_holder(mt): tasks);
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToDelete: queue_sending(pxQueue$0) & not(pxTaskToDelete: runable) & not(pxTaskToDelete: blocked) & pxTaskToDelete: suspended & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & runable: POW(tasks-{pxTaskToDelete}) & suspended-{pxTaskToDelete}: FIN(TASK) & suspended-{pxTaskToDelete}: POW(tasks-{pxTaskToDelete}) & blocked/\suspended-{pxTaskToDelete} = {} & suspended-{pxTaskToDelete}/\runable = {} & tasks-{pxTaskToDelete} = suspended-{pxTaskToDelete}\/blocked\/runable & (active = TRUE => not(runable = {}) & running: runable & idle: runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & (active = TRUE => not(running: suspended & not(running = pxTaskToDelete))) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & mt: mutexes);
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToDelete: queue_sending(pxQueue$0) & not(pxTaskToDelete: runable) & not(pxTaskToDelete: blocked) & pxTaskToDelete: suspended & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & runable: POW(tasks-{pxTaskToDelete}) & suspended-{pxTaskToDelete}: FIN(TASK) & suspended-{pxTaskToDelete}: POW(tasks-{pxTaskToDelete}) & blocked/\suspended-{pxTaskToDelete} = {} & suspended-{pxTaskToDelete}/\runable = {} & tasks-{pxTaskToDelete} = suspended-{pxTaskToDelete}\/blocked\/runable & (active = TRUE => not(runable = {}) & running: runable & idle: runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & (active = TRUE => not(running: suspended & not(running = pxTaskToDelete))) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & que: queues);
  ((queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(que): POW(blocked\/suspended-{pxTaskToDelete}));
  ((queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(que): POW(blocked\/suspended-{pxTaskToDelete}));
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToDelete: queue_sending(pxQueue$0) & not(pxTaskToDelete: runable) & not(pxTaskToDelete: blocked) & not(pxTaskToDelete: suspended) & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & tasks-{pxTaskToDelete} = suspended\/blocked\/runable & (active = TRUE => not(runable = {}) & running: runable & idle: runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})));
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToDelete: queue_sending(pxQueue$0) & not(pxTaskToDelete: runable) & not(pxTaskToDelete: blocked) & not(pxTaskToDelete: suspended) & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & tasks-{pxTaskToDelete} = suspended\/blocked\/runable & (active = TRUE => not(runable = {}) & running: runable & idle: runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & active = TRUE & mt: mutexes_busy);
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToDelete: queue_sending(pxQueue$0) & not(pxTaskToDelete: runable) & not(pxTaskToDelete: blocked) & not(pxTaskToDelete: suspended) & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & tasks-{pxTaskToDelete} = suspended\/blocked\/runable & (active = TRUE => not(runable = {}) & running: runable & idle: runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & active = TRUE & mt: mutexes & not(mt: mutexes_busy) & mutex_holder(mt): tasks);
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToDelete: queue_sending(pxQueue$0) & not(pxTaskToDelete: runable) & not(pxTaskToDelete: blocked) & not(pxTaskToDelete: suspended) & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & tasks-{pxTaskToDelete} = suspended\/blocked\/runable & (active = TRUE => not(runable = {}) & running: runable & idle: runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & mt: mutexes);
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToDelete: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToDelete: queue_sending(pxQueue$0) & not(pxTaskToDelete: runable) & not(pxTaskToDelete: blocked) & not(pxTaskToDelete: suspended) & tasks-{pxTaskToDelete}: FIN(TASK) & blocked: POW(tasks-{pxTaskToDelete}) & runable: POW(tasks-{pxTaskToDelete}) & suspended: POW(tasks-{pxTaskToDelete}) & tasks-{pxTaskToDelete} = suspended\/blocked\/runable & (active = TRUE => not(runable = {}) & running: runable & idle: runable & not(TASK_NULL: tasks & not(TASK_NULL = pxTaskToDelete))) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToDelete}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToDelete}})(q2))) & (active = TRUE => not(tasks = {}) & not(tasks = {pxTaskToDelete})) & que: queues);
  ("`vTaskEndScheduler preconditions in this component'" & active = TRUE);
  ("`Local hypotheses'" & {}: FIN(TASK) & {}: POW({}) & {}: POW(QUEUE) & {}: QUEUE +-> POW(TASK) & dom({}) = {} & {}: QUEUE +-> POW(ITEM) & {}: QUEUE +-> TASK);
  ("`vTaskResume preconditions in this component'" & INCLUDE_vTaskSuspend = 1 & not(suspended = {}) & pxTaskToResume: TASK & pxTaskToResume: suspended);
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToResume: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToResume: queue_sending(pxQueue$0) & n_runable: POW(tasks) & n_runable = runable\/{pxTaskToResume} & running$0: n_runable & n_runable: FIN(TASK) & suspended-{pxTaskToResume}: FIN(TASK) & suspended-{pxTaskToResume}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{pxTaskToResume} = {} & suspended-{pxTaskToResume}/\n_runable = {} & tasks = suspended-{pxTaskToResume}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToResume}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToResume}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToResume}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToResume}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToResume}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToResume}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToResume}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToResume}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToResume}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToResume}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToResume}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToResume}})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = pxTaskToResume))) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = pxTaskToResume))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ((queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToResume}})(mt) = {});
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToResume: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToResume: queue_sending(pxQueue$0) & n_runable: POW(tasks) & n_runable = runable\/{pxTaskToResume} & running$0: n_runable & n_runable: FIN(TASK) & suspended-{pxTaskToResume}: FIN(TASK) & suspended-{pxTaskToResume}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{pxTaskToResume} = {} & suspended-{pxTaskToResume}/\n_runable = {} & tasks = suspended-{pxTaskToResume}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToResume}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToResume}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToResume}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToResume}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToResume}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToResume}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToResume}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToResume}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToResume}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToResume}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToResume}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToResume}})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = pxTaskToResume))) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = pxTaskToResume))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ((queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToResume}})(que): POW(blocked\/suspended-{pxTaskToResume}));
  ((queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToResume}})(que): POW(blocked\/suspended-{pxTaskToResume}));
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToResume: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToResume: queue_sending(pxQueue$0) & n_runable: POW(tasks) & n_runable = runable\/{pxTaskToResume} & n_runable: FIN(TASK) & suspended-{pxTaskToResume}: FIN(TASK) & suspended-{pxTaskToResume}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{pxTaskToResume} = {} & suspended-{pxTaskToResume}/\n_runable = {} & tasks = suspended-{pxTaskToResume}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToResume}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToResume}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToResume}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToResume}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToResume}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToResume}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToResume}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToResume}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToResume}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToResume}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToResume}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToResume}})(q2))) & (active = TRUE => not(running: suspended & not(running = pxTaskToResume))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = pxTaskToResume))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & pxQueue: queues & pxTaskToResume: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToResume: queue_sending(pxQueue$0) & n_runable: POW(tasks) & n_runable = runable\/{pxTaskToResume} & n_runable: FIN(TASK) & suspended-{pxTaskToResume}: FIN(TASK) & suspended-{pxTaskToResume}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{pxTaskToResume} = {} & suspended-{pxTaskToResume}/\n_runable = {} & tasks = suspended-{pxTaskToResume}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToResume}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToResume}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToResume}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToResume}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToResume}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToResume}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToResume}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToResume}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToResume}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToResume}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToResume}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToResume}})(q2))) & (active = TRUE => not(running: suspended & not(running = pxTaskToResume))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = pxTaskToResume))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`xTaskResumeAll preconditions in this component'" & active = FALSE);
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked));
  (unblocked: POW(TASK));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_receiving = {}) & not(queue_sending = {}) & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & running$0: n_runable & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0: unblocked))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  "`Check that the invariant (tickCount: TICK) is preserved by the operation - ref 3.4'";
  (TICK_INCREMENT(tickCount,tickMissed): TICK);
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_receiving = {}) & not(queue_sending = {}) & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & running$0: n_runable & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0: unblocked))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  (remove_task(queue_sending,unblocked)(mt) = {});
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_receiving = {}) & not(queue_sending = {}) & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & running$0: n_runable & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0: unblocked))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  (remove_task(queue_sending,unblocked)(que): POW(blocked-unblocked\/suspended));
  (remove_task(queue_receiving,unblocked)(que): POW(blocked-unblocked\/suspended));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_receiving = {}) & not(queue_sending = {}) & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & (active = TRUE => not(running: blocked & not(running: unblocked))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_receiving = {}) & not(queue_sending = {}) & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & (active = TRUE => not(running: blocked & not(running: unblocked))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_receiving = {}) & not(queue_sending = {}) & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & (active = TRUE => not(running: blocked & not(running: unblocked))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_receiving = {}) & not(queue_sending = {}) & unblocked = {} & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_receiving = {}) & not(queue_sending = {}) & unblocked = {} & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & mt: mutexes);
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_receiving = {}) & not(queue_sending = {}) & unblocked = {} & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & que: queues);
  (remove_task(queue_sending,unblocked)(que): POW(blocked\/suspended));
  (remove_task(queue_receiving,unblocked)(que): POW(blocked\/suspended));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_receiving = {}) & queue_sending = {} & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & running$0: n_runable & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0: unblocked))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_receiving = {}) & queue_sending = {} & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & running$0: n_runable & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0: unblocked))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  (queue_sending(que): POW(blocked-unblocked\/suspended));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_receiving = {}) & queue_sending = {} & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & (active = TRUE => not(running: blocked & not(running: unblocked))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_receiving = {}) & queue_sending = {} & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & (active = TRUE => not(running: blocked & not(running: unblocked))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_receiving = {}) & queue_sending = {} & unblocked = {} & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_receiving = {}) & queue_sending = {} & unblocked = {} & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & que: queues);
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_receiving = {} & not(queue_sending = {}) & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & running$0: n_runable & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0: unblocked))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_receiving = {} & not(queue_sending = {}) & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & running$0: n_runable & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0: unblocked))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_receiving = {} & not(queue_sending = {}) & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & running$0: n_runable & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0: unblocked))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  (queue_receiving(que): POW(blocked-unblocked\/suspended));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_receiving = {} & not(queue_sending = {}) & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & (active = TRUE => not(running: blocked & not(running: unblocked))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_receiving = {} & not(queue_sending = {}) & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & (active = TRUE => not(running: blocked & not(running: unblocked))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_receiving = {} & not(queue_sending = {}) & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & (active = TRUE => not(running: blocked & not(running: unblocked))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_receiving = {} & not(queue_sending = {}) & unblocked = {} & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_receiving = {} & not(queue_sending = {}) & unblocked = {} & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & mt: mutexes);
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_receiving = {} & not(queue_sending = {}) & unblocked = {} & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & que: queues);
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_receiving = {} & queue_sending = {} & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & running$0: n_runable & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0: unblocked))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_receiving = {} & queue_sending = {} & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & running$0: n_runable & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0: unblocked))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_receiving = {} & queue_sending = {} & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & (active = TRUE => not(running: blocked & not(running: unblocked))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_receiving = {} & queue_sending = {} & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & (active = TRUE => not(running: blocked & not(running: unblocked))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_receiving = {} & queue_sending = {} & unblocked = {});
  ("`vTaskStartScheduler preconditions in this component'" & active = FALSE);
  ("`Local hypotheses'" & idle_task: TASK & not(idle_task: tasks) & n_runable: POW(tasks) & n_runable = runable\/{idle_task} & running$0: n_runable & tasks\/{idle_task}: FIN(TASK) & blocked: POW(tasks\/{idle_task}) & runable: POW(tasks\/{idle_task}) & suspended: POW(tasks\/{idle_task}) & tasks\/{idle_task} = suspended\/blocked\/runable & running$0: TASK & not(runable = {}) & running$0: runable & idle_task: runable & not(TASK_NULL: tasks) & not(TASK_NULL = idle_task) & not(running$0: suspended) & not(running$0: blocked) & not(idle_task = TASK_NULL) & not(idle_task: suspended) & not(idle_task: blocked));
  (ran(mutex_holder): POW(tasks\/{idle_task}\/{TASK_NULL}));
  (not(idle_task: ran(mutex_holder)));
  ("`Local hypotheses'" & idle_task: TASK & not(idle_task: tasks) & n_runable: POW(tasks) & n_runable = runable\/{idle_task} & running$0: n_runable & tasks\/{idle_task}: FIN(TASK) & blocked: POW(tasks\/{idle_task}) & runable: POW(tasks\/{idle_task}) & suspended: POW(tasks\/{idle_task}) & tasks\/{idle_task} = suspended\/blocked\/runable & running$0: TASK & not(runable = {}) & running$0: runable & idle_task: runable & not(TASK_NULL: tasks) & not(TASK_NULL = idle_task) & not(running$0: suspended) & not(running$0: blocked) & not(idle_task = TASK_NULL) & not(idle_task: suspended) & not(idle_task: blocked) & mt: mutexes_busy);
  (mutex_holder(mt): tasks\/{idle_task});
  ("`Local hypotheses'" & idle_task: TASK & not(idle_task: tasks) & n_runable: POW(tasks) & n_runable = runable\/{idle_task} & running$0: n_runable & tasks\/{idle_task}: FIN(TASK) & blocked: POW(tasks\/{idle_task}) & runable: POW(tasks\/{idle_task}) & suspended: POW(tasks\/{idle_task}) & tasks\/{idle_task} = suspended\/blocked\/runable & running$0: TASK & not(runable = {}) & running$0: runable & idle_task: runable & not(TASK_NULL: tasks) & not(TASK_NULL = idle_task) & not(running$0: suspended) & not(running$0: blocked) & not(idle_task = TASK_NULL) & not(idle_task: suspended) & not(idle_task: blocked) & mt: mutexes & not(mt: mutexes_busy));
  (not(mutex_holder(mt) = idle_task));
  ("`vTaskSuspend preconditions in this component'" & INCLUDE_vTaskSuspend = 1 & pxTaskToSuspend: TASK & pxTaskToSuspend: tasks & not(pxTaskToSuspend = idle));
  ("`Local hypotheses'" & not(pxTaskToSuspend: suspended) & pxQueue: queues & pxTaskToSuspend: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToSuspend: queue_sending(pxQueue$0) & pxTaskToSuspend: runable & n_runable: POW(tasks) & n_runable = runable-{pxTaskToSuspend} & pxTaskToSuspend = running & running$0: n_runable & n_runable: FIN(TASK) & suspended\/{pxTaskToSuspend}: FIN(TASK) & n_runable/\blocked = {} & not(pxTaskToSuspend: blocked) & suspended\/{pxTaskToSuspend}/\n_runable = {} & tasks = suspended\/{pxTaskToSuspend}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q2))) & (active = TRUE => not(running$0: suspended) & not(running$0 = pxTaskToSuspend)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ((queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(mt) = {});
  ("`Local hypotheses'" & not(pxTaskToSuspend: suspended) & pxQueue: queues & pxTaskToSuspend: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToSuspend: queue_sending(pxQueue$0) & pxTaskToSuspend: runable & n_runable: POW(tasks) & n_runable = runable-{pxTaskToSuspend} & pxTaskToSuspend = running & running$0: n_runable & n_runable: FIN(TASK) & suspended\/{pxTaskToSuspend}: FIN(TASK) & n_runable/\blocked = {} & not(pxTaskToSuspend: blocked) & suspended\/{pxTaskToSuspend}/\n_runable = {} & tasks = suspended\/{pxTaskToSuspend}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q2))) & (active = TRUE => not(running$0: suspended) & not(running$0 = pxTaskToSuspend)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ((queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(que): POW(blocked\/(suspended\/{pxTaskToSuspend})));
  ((queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(que): POW(blocked\/(suspended\/{pxTaskToSuspend})));
  ("`Local hypotheses'" & not(pxTaskToSuspend: suspended) & pxQueue: queues & pxTaskToSuspend: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToSuspend: queue_sending(pxQueue$0) & pxTaskToSuspend: runable & n_runable: POW(tasks) & n_runable = runable-{pxTaskToSuspend} & not(pxTaskToSuspend = running) & n_runable: FIN(TASK) & suspended\/{pxTaskToSuspend}: FIN(TASK) & n_runable/\blocked = {} & not(pxTaskToSuspend: blocked) & suspended\/{pxTaskToSuspend}/\n_runable = {} & tasks = suspended\/{pxTaskToSuspend}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q2))) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(pxTaskToSuspend: suspended) & pxQueue: queues & pxTaskToSuspend: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToSuspend: queue_sending(pxQueue$0) & pxTaskToSuspend: runable & n_runable: POW(tasks) & n_runable = runable-{pxTaskToSuspend} & not(pxTaskToSuspend = running) & n_runable: FIN(TASK) & suspended\/{pxTaskToSuspend}: FIN(TASK) & n_runable/\blocked = {} & not(pxTaskToSuspend: blocked) & suspended\/{pxTaskToSuspend}/\n_runable = {} & tasks = suspended\/{pxTaskToSuspend}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q2))) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(pxTaskToSuspend: suspended) & pxQueue: queues & pxTaskToSuspend: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToSuspend: queue_sending(pxQueue$0) & not(pxTaskToSuspend: runable) & pxTaskToSuspend: blocked & blocked-{pxTaskToSuspend}: FIN(TASK) & blocked-{pxTaskToSuspend}: POW(tasks) & suspended\/{pxTaskToSuspend}: FIN(TASK) & runable/\blocked-{pxTaskToSuspend} = {} & blocked-{pxTaskToSuspend}/\suspended = {} & suspended\/{pxTaskToSuspend}/\runable = {} & tasks = suspended\/{pxTaskToSuspend}\/blocked-{pxTaskToSuspend}\/runable & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q2))) & (active = TRUE => not(running: suspended) & not(running = pxTaskToSuspend)) & (active = TRUE => not(running: blocked & not(running = pxTaskToSuspend))) & mt: mutexes);
  ("`Local hypotheses'" & not(pxTaskToSuspend: suspended) & pxQueue: queues & pxTaskToSuspend: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToSuspend: queue_sending(pxQueue$0) & not(pxTaskToSuspend: runable) & pxTaskToSuspend: blocked & blocked-{pxTaskToSuspend}: FIN(TASK) & blocked-{pxTaskToSuspend}: POW(tasks) & suspended\/{pxTaskToSuspend}: FIN(TASK) & runable/\blocked-{pxTaskToSuspend} = {} & blocked-{pxTaskToSuspend}/\suspended = {} & suspended\/{pxTaskToSuspend}/\runable = {} & tasks = suspended\/{pxTaskToSuspend}\/blocked-{pxTaskToSuspend}\/runable & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q2))) & (active = TRUE => not(running: suspended) & not(running = pxTaskToSuspend)) & (active = TRUE => not(running: blocked & not(running = pxTaskToSuspend))) & que: queues);
  ((queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(que): POW(blocked-{pxTaskToSuspend}\/(suspended\/{pxTaskToSuspend})));
  ((queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(que): POW(blocked-{pxTaskToSuspend}\/(suspended\/{pxTaskToSuspend})));
  ("`Local hypotheses'" & not(pxTaskToSuspend: suspended) & pxQueue: queues & pxTaskToSuspend: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToSuspend: queue_sending(pxQueue$0) & not(pxTaskToSuspend: runable) & not(pxTaskToSuspend: blocked) & suspended\/{pxTaskToSuspend}: FIN(TASK) & suspended\/{pxTaskToSuspend}/\runable = {} & tasks = suspended\/{pxTaskToSuspend}\/blocked\/runable & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q2))) & (active = TRUE => not(running: suspended) & not(running = pxTaskToSuspend)) & mt: mutexes);
  ("`Local hypotheses'" & not(pxTaskToSuspend: suspended) & pxQueue: queues & pxTaskToSuspend: queue_receiving(pxQueue) & pxQueue$0: queues & pxTaskToSuspend: queue_sending(pxQueue$0) & not(pxTaskToSuspend: runable) & not(pxTaskToSuspend: blocked) & suspended\/{pxTaskToSuspend}: FIN(TASK) & suspended\/{pxTaskToSuspend}/\runable = {} & tasks = suspended\/{pxTaskToSuspend}\/blocked\/runable & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}}: QUEUE +-> POW(TASK) & queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}}) & queues = dom(queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{pxTaskToSuspend}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q1) => not(tk: (queue_sending<+{pxQueue$0|->queue_sending(pxQueue$0)-{pxTaskToSuspend}})(q2))) & (active = TRUE => not(running: suspended) & not(running = pxTaskToSuspend)) & que: queues);
  ("`xQueueCreate preconditions in this component'" & uxQueueLength: INTEGER & 0<=uxQueueLength & uxQueueLength<=2147483647 & uxItemSize: INTEGER & 0<=uxItemSize & uxItemSize<=2147483647);
  (uxQueueLength: QUEUE_LENGTH);
  (uxItemSize: QUEUE_LENGTH);
  (1<=uxQueueLength);
  ("`Local hypotheses'" & pxQueue: QUEUE & not(pxQueue: queues) & queue_receiving\/{pxQueue|->{}}: QUEUE +-> POW(TASK) & queue_sending\/{pxQueue|->{}}: QUEUE +-> POW(TASK) & queues\/{pxQueue} = dom(queue_receiving\/{pxQueue|->{}}) & queues\/{pxQueue} = dom(queue_sending\/{pxQueue|->{}}) & pxQueue: queues\/{pxQueue} & queues_msg: POW(queues\/{pxQueue}) & queues_msg_full: POW(queues_msg\/{pxQueue}) & pxQueue: queues_msg\/{pxQueue} & queues_msg_empty: POW(queues_msg\/{pxQueue}) & not(pxQueue: queues_msg_full) & queue_items\/{pxQueue|->{}}: QUEUE +-> POW(ITEM) & queues_msg\/{pxQueue} = dom(queue_items\/{pxQueue|->{}}) & !(q1,q2,tk).(q1: queues\/{pxQueue} & q2: queues\/{pxQueue} & tk: TASK & tk: (queue_receiving\/{pxQueue|->{}})(q1) => not(tk: (queue_sending\/{pxQueue|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{pxQueue} & q2: queues\/{pxQueue} & tk: TASK & tk: (queue_sending\/{pxQueue|->{}})(q2) => not(tk: (queue_receiving\/{pxQueue|->{}})(q1))) & !(q1,q2,tk).(q1: queues\/{pxQueue} & q2: queues\/{pxQueue} & not(q1 = q2) & tk: TASK & tk: (queue_receiving\/{pxQueue|->{}})(q1) => not(tk: (queue_receiving\/{pxQueue|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{pxQueue} & q2: queues\/{pxQueue} & not(q1 = q2) & tk: TASK & tk: (queue_sending\/{pxQueue|->{}})(q1) => not(tk: (queue_sending\/{pxQueue|->{}})(q2))) & semaphores: POW(queues\/{pxQueue}) & mutexes: POW(queues\/{pxQueue}) & queues_msg\/{pxQueue}/\semaphores = {} & queues_msg\/{pxQueue}/\mutexes = {} & !que.(que: QUEUE & (not(que: queues) & not(que = pxQueue)) => not(que: mutexes)) & !que.(que: QUEUE & (not(que: queues) & not(que = pxQueue)) => not(que: semaphores)) & mt: mutexes);
  ((queue_sending\/{pxQueue|->{}})(mt) = {});
  ("`Local hypotheses'" & pxQueue: QUEUE & not(pxQueue: queues) & queue_receiving\/{pxQueue|->{}}: QUEUE +-> POW(TASK) & queue_sending\/{pxQueue|->{}}: QUEUE +-> POW(TASK) & queues\/{pxQueue} = dom(queue_receiving\/{pxQueue|->{}}) & queues\/{pxQueue} = dom(queue_sending\/{pxQueue|->{}}) & pxQueue: queues\/{pxQueue} & queues_msg: POW(queues\/{pxQueue}) & queues_msg_full: POW(queues_msg\/{pxQueue}) & pxQueue: queues_msg\/{pxQueue} & queues_msg_empty: POW(queues_msg\/{pxQueue}) & not(pxQueue: queues_msg_full) & queue_items\/{pxQueue|->{}}: QUEUE +-> POW(ITEM) & queues_msg\/{pxQueue} = dom(queue_items\/{pxQueue|->{}}) & !(q1,q2,tk).(q1: queues\/{pxQueue} & q2: queues\/{pxQueue} & tk: TASK & tk: (queue_receiving\/{pxQueue|->{}})(q1) => not(tk: (queue_sending\/{pxQueue|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{pxQueue} & q2: queues\/{pxQueue} & tk: TASK & tk: (queue_sending\/{pxQueue|->{}})(q2) => not(tk: (queue_receiving\/{pxQueue|->{}})(q1))) & !(q1,q2,tk).(q1: queues\/{pxQueue} & q2: queues\/{pxQueue} & not(q1 = q2) & tk: TASK & tk: (queue_receiving\/{pxQueue|->{}})(q1) => not(tk: (queue_receiving\/{pxQueue|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{pxQueue} & q2: queues\/{pxQueue} & not(q1 = q2) & tk: TASK & tk: (queue_sending\/{pxQueue|->{}})(q1) => not(tk: (queue_sending\/{pxQueue|->{}})(q2))) & semaphores: POW(queues\/{pxQueue}) & mutexes: POW(queues\/{pxQueue}) & queues_msg\/{pxQueue}/\semaphores = {} & queues_msg\/{pxQueue}/\mutexes = {} & !que.(que: QUEUE & (not(que: queues) & not(que = pxQueue)) => not(que: mutexes)) & !que.(que: QUEUE & (not(que: queues) & not(que = pxQueue)) => not(que: semaphores)) & que: queues\/{pxQueue});
  ((queue_sending\/{pxQueue|->{}})(que): POW(blocked\/suspended));
  ((queue_receiving\/{pxQueue|->{}})(que): POW(blocked\/suspended));
  ("`queueDelete preconditions in this component'" & pxQueue: queues_msg & queue_receiving(pxQueue) = {} & queue_sending(pxQueue) = {});
  (pxQueue: queues);
  (not(pxQueue: semaphores));
  (not(pxQueue: mutexes));
  ("`Local hypotheses'" & pxQueue: queues_msg_full & pxQueue: queues_msg_empty & queues-{pxQueue}: POW(QUEUE) & {pxQueue}<<|queue_receiving: QUEUE +-> POW(TASK) & {pxQueue}<<|queue_sending: QUEUE +-> POW(TASK) & queues-{pxQueue} = dom({pxQueue}<<|queue_receiving) & queues-{pxQueue} = dom({pxQueue}<<|queue_sending) & queues_msg-{pxQueue}: POW(queues-{pxQueue}) & queues_msg_full-{pxQueue}: POW(queues_msg-{pxQueue}) & queues_msg_empty-{pxQueue}: POW(queues_msg-{pxQueue}) & queues_msg_full-{pxQueue}/\queues_msg_empty-{pxQueue} = {} & {pxQueue}<<|queue_items: QUEUE +-> POW(ITEM) & queues_msg-{pxQueue} = dom({pxQueue}<<|queue_items) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q2) => not(tk: ({pxQueue}<<|queue_receiving)(q1))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_receiving)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & semaphores: POW(queues-{pxQueue}) & mutexes: POW(queues-{pxQueue}) & queues_msg-{pxQueue}/\semaphores = {} & queues_msg-{pxQueue}/\mutexes = {} & !que.(que: QUEUE & not(que: queues & not(que = pxQueue)) => not(que: mutexes)) & !que.(que: QUEUE & not(que: queues & not(que = pxQueue)) => not(que: semaphores)) & mt: mutexes);
  (({pxQueue}<<|queue_sending)(mt) = {});
  ("`Local hypotheses'" & pxQueue: queues_msg_full & pxQueue: queues_msg_empty & queues-{pxQueue}: POW(QUEUE) & {pxQueue}<<|queue_receiving: QUEUE +-> POW(TASK) & {pxQueue}<<|queue_sending: QUEUE +-> POW(TASK) & queues-{pxQueue} = dom({pxQueue}<<|queue_receiving) & queues-{pxQueue} = dom({pxQueue}<<|queue_sending) & queues_msg-{pxQueue}: POW(queues-{pxQueue}) & queues_msg_full-{pxQueue}: POW(queues_msg-{pxQueue}) & queues_msg_empty-{pxQueue}: POW(queues_msg-{pxQueue}) & queues_msg_full-{pxQueue}/\queues_msg_empty-{pxQueue} = {} & {pxQueue}<<|queue_items: QUEUE +-> POW(ITEM) & queues_msg-{pxQueue} = dom({pxQueue}<<|queue_items) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q2) => not(tk: ({pxQueue}<<|queue_receiving)(q1))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_receiving)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & semaphores: POW(queues-{pxQueue}) & mutexes: POW(queues-{pxQueue}) & queues_msg-{pxQueue}/\semaphores = {} & queues_msg-{pxQueue}/\mutexes = {} & !que.(que: QUEUE & not(que: queues & not(que = pxQueue)) => not(que: mutexes)) & !que.(que: QUEUE & not(que: queues & not(que = pxQueue)) => not(que: semaphores)) & que: queues & not(que = pxQueue));
  (({pxQueue}<<|queue_sending)(que): POW(blocked\/suspended));
  (({pxQueue}<<|queue_receiving)(que): POW(blocked\/suspended));
  ("`Local hypotheses'" & pxQueue: queues_msg_full & not(pxQueue: queues_msg_empty) & queues-{pxQueue}: POW(QUEUE) & {pxQueue}<<|queue_receiving: QUEUE +-> POW(TASK) & {pxQueue}<<|queue_sending: QUEUE +-> POW(TASK) & queues-{pxQueue} = dom({pxQueue}<<|queue_receiving) & queues-{pxQueue} = dom({pxQueue}<<|queue_sending) & queues_msg-{pxQueue}: POW(queues-{pxQueue}) & queues_msg_full-{pxQueue}: POW(queues_msg-{pxQueue}) & queues_msg_empty: POW(queues_msg-{pxQueue}) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & {pxQueue}<<|queue_items: QUEUE +-> POW(ITEM) & queues_msg-{pxQueue} = dom({pxQueue}<<|queue_items) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q2) => not(tk: ({pxQueue}<<|queue_receiving)(q1))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_receiving)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & semaphores: POW(queues-{pxQueue}) & mutexes: POW(queues-{pxQueue}) & queues_msg-{pxQueue}/\semaphores = {} & queues_msg-{pxQueue}/\mutexes = {} & !que.(que: QUEUE & not(que: queues & not(que = pxQueue)) => not(que: mutexes)) & !que.(que: QUEUE & not(que: queues & not(que = pxQueue)) => not(que: semaphores)) & mt: mutexes);
  ("`Local hypotheses'" & pxQueue: queues_msg_full & not(pxQueue: queues_msg_empty) & queues-{pxQueue}: POW(QUEUE) & {pxQueue}<<|queue_receiving: QUEUE +-> POW(TASK) & {pxQueue}<<|queue_sending: QUEUE +-> POW(TASK) & queues-{pxQueue} = dom({pxQueue}<<|queue_receiving) & queues-{pxQueue} = dom({pxQueue}<<|queue_sending) & queues_msg-{pxQueue}: POW(queues-{pxQueue}) & queues_msg_full-{pxQueue}: POW(queues_msg-{pxQueue}) & queues_msg_empty: POW(queues_msg-{pxQueue}) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & {pxQueue}<<|queue_items: QUEUE +-> POW(ITEM) & queues_msg-{pxQueue} = dom({pxQueue}<<|queue_items) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q2) => not(tk: ({pxQueue}<<|queue_receiving)(q1))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_receiving)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & semaphores: POW(queues-{pxQueue}) & mutexes: POW(queues-{pxQueue}) & queues_msg-{pxQueue}/\semaphores = {} & queues_msg-{pxQueue}/\mutexes = {} & !que.(que: QUEUE & not(que: queues & not(que = pxQueue)) => not(que: mutexes)) & !que.(que: QUEUE & not(que: queues & not(que = pxQueue)) => not(que: semaphores)) & que: queues & not(que = pxQueue));
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & pxQueue: queues_msg_empty & queues-{pxQueue}: POW(QUEUE) & {pxQueue}<<|queue_receiving: QUEUE +-> POW(TASK) & {pxQueue}<<|queue_sending: QUEUE +-> POW(TASK) & queues-{pxQueue} = dom({pxQueue}<<|queue_receiving) & queues-{pxQueue} = dom({pxQueue}<<|queue_sending) & queues_msg-{pxQueue}: POW(queues-{pxQueue}) & queues_msg_full: POW(queues_msg-{pxQueue}) & queues_msg_empty-{pxQueue}: POW(queues_msg-{pxQueue}) & queues_msg_full/\queues_msg_empty-{pxQueue} = {} & {pxQueue}<<|queue_items: QUEUE +-> POW(ITEM) & queues_msg-{pxQueue} = dom({pxQueue}<<|queue_items) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q2) => not(tk: ({pxQueue}<<|queue_receiving)(q1))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_receiving)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & semaphores: POW(queues-{pxQueue}) & mutexes: POW(queues-{pxQueue}) & queues_msg-{pxQueue}/\semaphores = {} & queues_msg-{pxQueue}/\mutexes = {} & !que.(que: QUEUE & not(que: queues & not(que = pxQueue)) => not(que: mutexes)) & !que.(que: QUEUE & not(que: queues & not(que = pxQueue)) => not(que: semaphores)) & mt: mutexes);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & pxQueue: queues_msg_empty & queues-{pxQueue}: POW(QUEUE) & {pxQueue}<<|queue_receiving: QUEUE +-> POW(TASK) & {pxQueue}<<|queue_sending: QUEUE +-> POW(TASK) & queues-{pxQueue} = dom({pxQueue}<<|queue_receiving) & queues-{pxQueue} = dom({pxQueue}<<|queue_sending) & queues_msg-{pxQueue}: POW(queues-{pxQueue}) & queues_msg_full: POW(queues_msg-{pxQueue}) & queues_msg_empty-{pxQueue}: POW(queues_msg-{pxQueue}) & queues_msg_full/\queues_msg_empty-{pxQueue} = {} & {pxQueue}<<|queue_items: QUEUE +-> POW(ITEM) & queues_msg-{pxQueue} = dom({pxQueue}<<|queue_items) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q2) => not(tk: ({pxQueue}<<|queue_receiving)(q1))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_receiving)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & semaphores: POW(queues-{pxQueue}) & mutexes: POW(queues-{pxQueue}) & queues_msg-{pxQueue}/\semaphores = {} & queues_msg-{pxQueue}/\mutexes = {} & !que.(que: QUEUE & not(que: queues & not(que = pxQueue)) => not(que: mutexes)) & !que.(que: QUEUE & not(que: queues & not(que = pxQueue)) => not(que: semaphores)) & que: queues & not(que = pxQueue));
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & not(pxQueue: queues_msg_empty) & queues-{pxQueue}: POW(QUEUE) & {pxQueue}<<|queue_receiving: QUEUE +-> POW(TASK) & {pxQueue}<<|queue_sending: QUEUE +-> POW(TASK) & queues-{pxQueue} = dom({pxQueue}<<|queue_receiving) & queues-{pxQueue} = dom({pxQueue}<<|queue_sending) & queues_msg-{pxQueue}: POW(queues-{pxQueue}) & queues_msg_full: POW(queues_msg-{pxQueue}) & queues_msg_empty: POW(queues_msg-{pxQueue}) & {pxQueue}<<|queue_items: QUEUE +-> POW(ITEM) & queues_msg-{pxQueue} = dom({pxQueue}<<|queue_items) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q2) => not(tk: ({pxQueue}<<|queue_receiving)(q1))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_receiving)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & semaphores: POW(queues-{pxQueue}) & mutexes: POW(queues-{pxQueue}) & queues_msg-{pxQueue}/\semaphores = {} & queues_msg-{pxQueue}/\mutexes = {} & !que.(que: QUEUE & not(que: queues & not(que = pxQueue)) => not(que: mutexes)) & !que.(que: QUEUE & not(que: queues & not(que = pxQueue)) => not(que: semaphores)) & mt: mutexes);
  ("`Local hypotheses'" & not(pxQueue: queues_msg_full) & not(pxQueue: queues_msg_empty) & queues-{pxQueue}: POW(QUEUE) & {pxQueue}<<|queue_receiving: QUEUE +-> POW(TASK) & {pxQueue}<<|queue_sending: QUEUE +-> POW(TASK) & queues-{pxQueue} = dom({pxQueue}<<|queue_receiving) & queues-{pxQueue} = dom({pxQueue}<<|queue_sending) & queues_msg-{pxQueue}: POW(queues-{pxQueue}) & queues_msg_full: POW(queues_msg-{pxQueue}) & queues_msg_empty: POW(queues_msg-{pxQueue}) & {pxQueue}<<|queue_items: QUEUE +-> POW(ITEM) & queues_msg-{pxQueue} = dom({pxQueue}<<|queue_items) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q2) => not(tk: ({pxQueue}<<|queue_receiving)(q1))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_receiving)(q1) => not(tk: ({pxQueue}<<|queue_receiving)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = pxQueue) & (q2: queues & not(q2 = pxQueue)) & not(q1 = q2) & tk: TASK & tk: ({pxQueue}<<|queue_sending)(q1) => not(tk: ({pxQueue}<<|queue_sending)(q2))) & semaphores: POW(queues-{pxQueue}) & mutexes: POW(queues-{pxQueue}) & queues_msg-{pxQueue}/\semaphores = {} & queues_msg-{pxQueue}/\mutexes = {} & !que.(que: QUEUE & not(que: queues & not(que = pxQueue)) => not(que: mutexes)) & !que.(que: QUEUE & not(que: queues & not(que = pxQueue)) => not(que: semaphores)) & que: queues & not(que = pxQueue));
  ("`sendItem preconditions in this component'" & pxQueue: queues_msg & pvItemToQueue: ITEM & xTicksToWait: TICK & copy_position: (1..2)*{COPY_POSITION} & not(running = idle) & running: runable & not(pvItemToQueue: queue_items(pxQueue)));
  "`Check preconditions of called operation, or While loop construction, or Assert predicates'";
  ("`Local hypotheses'" & q1: queues);
  (not(running: queue_sending(q1)));
  (not(running: queue_receiving(q1)));
  (running: tasks);
  ("`Local hypotheses'" & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & blocked\/{running}: FIN(TASK) & running: tasks & n_runable: FIN(TASK) & not(running: n_runable) & n_runable/\blocked = {} & blocked\/{running}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/(blocked\/{running})\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q1) => not(tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked) & not(running$0 = running)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  "`Check that the invariant (!mt.(mt: mutexes => queue_sending(mt) = {})) is preserved by the operation - ref 3.4'";
  ((queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(mt) = {});
  ("`Local hypotheses'" & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & blocked\/{running}: FIN(TASK) & running: tasks & n_runable: FIN(TASK) & not(running: n_runable) & n_runable/\blocked = {} & blocked\/{running}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/(blocked\/{running})\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q1) => not(tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked) & not(running$0 = running)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  "`Check that the invariant (!que.(que: queues => queue_sending(que) <: blocked\/suspended)) is preserved by the operation - ref 3.4'";
  ((queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(que): POW(blocked\/{running}\/suspended));
  "`Check that the invariant (!que.(que: queues => queue_receiving(que) <: blocked\/suspended)) is preserved by the operation - ref 3.4'";
  ("`Local hypotheses'" & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & n_runable: FIN(TASK) & suspended\/{running}: FIN(TASK) & running: tasks & n_runable/\blocked = {} & not(running: blocked) & suspended\/{running}/\n_runable = {} & tasks = suspended\/{running}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q1) => not(tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q2))) & (active = TRUE => not(running$0: suspended) & not(running$0 = running)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & n_runable: FIN(TASK) & suspended\/{running}: FIN(TASK) & running: tasks & n_runable/\blocked = {} & not(running: blocked) & suspended\/{running}/\n_runable = {} & tasks = suspended\/{running}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q1) => not(tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(q2))) & (active = TRUE => not(running$0: suspended) & not(running$0 = running)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ((queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{running})})(que): POW(blocked\/(suspended\/{running})));
  (queue_receiving(que): POW(blocked\/(suspended\/{running})));
  ("`Local hypotheses'" & task: TASK & task: blocked\/suspended & task: queue_receiving(pxQueue));
  (not(pxQueue: queues_msg_full));
  ("`Local hypotheses'" & task: TASK & task: blocked\/suspended & task: queue_receiving(pxQueue) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & task: suspended & task: blocked & pxQueue: queues_msg_empty & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & queues_msg_empty-{pxQueue}: POW(queues_msg) & queues_msg_full\/{pxQueue}/\queues_msg_empty-{pxQueue} = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = task))) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  (queue_sending(que): POW(blocked-{task}\/suspended-{task}));
  ((queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que): POW(blocked-{task}\/suspended-{task}));
  ("`Local hypotheses'" & task: TASK & task: blocked\/suspended & task: queue_receiving(pxQueue) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & task: suspended & task: blocked & not(pxQueue: queues_msg_empty) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & queues_msg_full\/{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = task))) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & task: TASK & task: blocked\/suspended & task: queue_receiving(pxQueue) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & task: suspended & task: blocked & pxQueue: queues_msg_empty & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & queues_msg_empty-{pxQueue}: POW(queues_msg) & queues_msg_full/\queues_msg_empty-{pxQueue} = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = task))) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & task: TASK & task: blocked\/suspended & task: queue_receiving(pxQueue) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & task: suspended & task: blocked & not(pxQueue: queues_msg_empty) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = task))) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & task: TASK & task: blocked\/suspended & task: queue_receiving(pxQueue) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & task: suspended & not(task: blocked) & pxQueue: queues_msg_empty & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & queues_msg_empty-{pxQueue}: POW(queues_msg) & queues_msg_full\/{pxQueue}/\queues_msg_empty-{pxQueue} = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = task))) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  (queue_sending(que): POW(blocked\/suspended-{task}));
  ((queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que): POW(blocked\/suspended-{task}));
  ("`Local hypotheses'" & task: TASK & task: blocked\/suspended & task: queue_receiving(pxQueue) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & task: suspended & not(task: blocked) & not(pxQueue: queues_msg_empty) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & queues_msg_full\/{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = task))) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & task: TASK & task: blocked\/suspended & task: queue_receiving(pxQueue) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & task: suspended & not(task: blocked) & pxQueue: queues_msg_empty & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & queues_msg_empty-{pxQueue}: POW(queues_msg) & queues_msg_full/\queues_msg_empty-{pxQueue} = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = task))) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & task: TASK & task: blocked\/suspended & task: queue_receiving(pxQueue) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & task: suspended & not(task: blocked) & not(pxQueue: queues_msg_empty) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = task))) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & task: TASK & task: blocked\/suspended & task: queue_receiving(pxQueue) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & not(task: suspended) & task: blocked & pxQueue: queues_msg_empty & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & queues_msg_empty-{pxQueue}: POW(queues_msg) & queues_msg_full\/{pxQueue}/\queues_msg_empty-{pxQueue} = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  (queue_sending(que): POW(blocked-{task}\/suspended));
  ((queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que): POW(blocked-{task}\/suspended));
  ("`Local hypotheses'" & task: TASK & task: blocked\/suspended & task: queue_receiving(pxQueue) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & not(task: suspended) & task: blocked & not(pxQueue: queues_msg_empty) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & queues_msg_full\/{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & task: TASK & task: blocked\/suspended & task: queue_receiving(pxQueue) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & not(task: suspended) & task: blocked & pxQueue: queues_msg_empty & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & queues_msg_empty-{pxQueue}: POW(queues_msg) & queues_msg_full/\queues_msg_empty-{pxQueue} = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & task: TASK & task: blocked\/suspended & task: queue_receiving(pxQueue) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & not(task: suspended) & task: blocked & not(pxQueue: queues_msg_empty) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & task: TASK & task: blocked\/suspended & task: queue_receiving(pxQueue) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & not(task: suspended) & not(task: blocked) & pxQueue: queues_msg_empty & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & queues_msg_empty-{pxQueue}: POW(queues_msg) & queues_msg_full\/{pxQueue}/\queues_msg_empty-{pxQueue} = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ((queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(que): POW(blocked\/suspended));
  ("`Local hypotheses'" & task: TASK & task: blocked\/suspended & task: queue_receiving(pxQueue) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & not(task: suspended) & not(task: blocked) & not(pxQueue: queues_msg_empty) & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & queues_msg_full\/{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & task: TASK & task: blocked\/suspended & task: queue_receiving(pxQueue) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & not(task: suspended) & not(task: blocked) & pxQueue: queues_msg_empty & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & queues_msg_empty-{pxQueue}: POW(queues_msg) & queues_msg_full/\queues_msg_empty-{pxQueue} = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & task: TASK & task: blocked\/suspended & task: queue_receiving(pxQueue) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & not(task: suspended) & not(task: blocked) & not(pxQueue: queues_msg_empty) & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & task: TASK & task: blocked\/suspended & task: queue_receiving(pxQueue) & n_runable: POW(tasks) & n_runable = runable\/{task} & task: suspended & task: blocked & pxQueue: queues_msg_empty & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & queues_msg_empty-{pxQueue}: POW(queues_msg) & queues_msg_full\/{pxQueue}/\queues_msg_empty-{pxQueue} = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & (active = TRUE => not(running: suspended & not(running = task))) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & task: TASK & task: blocked\/suspended & task: queue_receiving(pxQueue) & n_runable: POW(tasks) & n_runable = runable\/{task} & task: suspended & task: blocked & not(pxQueue: queues_msg_empty) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & queues_msg_full\/{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & (active = TRUE => not(running: suspended & not(running = task))) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & task: TASK & task: blocked\/suspended & task: queue_receiving(pxQueue) & n_runable: POW(tasks) & n_runable = runable\/{task} & task: suspended & task: blocked & pxQueue: queues_msg_empty & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & queues_msg_empty-{pxQueue}: POW(queues_msg) & queues_msg_full/\queues_msg_empty-{pxQueue} = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & (active = TRUE => not(running: suspended & not(running = task))) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & task: TASK & task: blocked\/suspended & task: queue_receiving(pxQueue) & n_runable: POW(tasks) & n_runable = runable\/{task} & task: suspended & task: blocked & not(pxQueue: queues_msg_empty) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & (active = TRUE => not(running: suspended & not(running = task))) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & task: TASK & task: blocked\/suspended & task: queue_receiving(pxQueue) & n_runable: POW(tasks) & n_runable = runable\/{task} & task: suspended & not(task: blocked) & pxQueue: queues_msg_empty & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & queues_msg_empty-{pxQueue}: POW(queues_msg) & queues_msg_full\/{pxQueue}/\queues_msg_empty-{pxQueue} = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & (active = TRUE => not(running: suspended & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & task: TASK & task: blocked\/suspended & task: queue_receiving(pxQueue) & n_runable: POW(tasks) & n_runable = runable\/{task} & task: suspended & not(task: blocked) & not(pxQueue: queues_msg_empty) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & queues_msg_full\/{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & (active = TRUE => not(running: suspended & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & task: TASK & task: blocked\/suspended & task: queue_receiving(pxQueue) & n_runable: POW(tasks) & n_runable = runable\/{task} & task: suspended & not(task: blocked) & pxQueue: queues_msg_empty & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & queues_msg_empty-{pxQueue}: POW(queues_msg) & queues_msg_full/\queues_msg_empty-{pxQueue} = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & (active = TRUE => not(running: suspended & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & task: TASK & task: blocked\/suspended & task: queue_receiving(pxQueue) & n_runable: POW(tasks) & n_runable = runable\/{task} & task: suspended & not(task: blocked) & not(pxQueue: queues_msg_empty) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & (active = TRUE => not(running: suspended & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & task: TASK & task: blocked\/suspended & task: queue_receiving(pxQueue) & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task: suspended) & task: blocked & pxQueue: queues_msg_empty & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & queues_msg_empty-{pxQueue}: POW(queues_msg) & queues_msg_full\/{pxQueue}/\queues_msg_empty-{pxQueue} = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & task: TASK & task: blocked\/suspended & task: queue_receiving(pxQueue) & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task: suspended) & task: blocked & not(pxQueue: queues_msg_empty) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & queues_msg_full\/{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & task: TASK & task: blocked\/suspended & task: queue_receiving(pxQueue) & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task: suspended) & task: blocked & pxQueue: queues_msg_empty & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & queues_msg_empty-{pxQueue}: POW(queues_msg) & queues_msg_full/\queues_msg_empty-{pxQueue} = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & task: TASK & task: blocked\/suspended & task: queue_receiving(pxQueue) & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task: suspended) & task: blocked & not(pxQueue: queues_msg_empty) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & task: TASK & task: blocked\/suspended & task: queue_receiving(pxQueue) & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task: suspended) & not(task: blocked) & pxQueue: queues_msg_empty & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & queues_msg_empty-{pxQueue}: POW(queues_msg) & queues_msg_full\/{pxQueue}/\queues_msg_empty-{pxQueue} = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & task: TASK & task: blocked\/suspended & task: queue_receiving(pxQueue) & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task: suspended) & not(task: blocked) & not(pxQueue: queues_msg_empty) & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & queues_msg_full\/{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & task: TASK & task: blocked\/suspended & task: queue_receiving(pxQueue) & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task: suspended) & not(task: blocked) & pxQueue: queues_msg_empty & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & queues_msg_empty-{pxQueue}: POW(queues_msg) & queues_msg_full/\queues_msg_empty-{pxQueue} = {} & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & task: TASK & task: blocked\/suspended & task: queue_receiving(pxQueue) & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task: suspended) & not(task: blocked) & not(pxQueue: queues_msg_empty) & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}}) & queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->(queue_items(pxQueue)\/{pvItemToQueue})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) => not(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q2))) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`receiveItem preconditions in this component'" & active = TRUE & not(running = idle) & pxQueue: QUEUE & pxQueue: queues_msg & xTicksToWait: TICK & justPeeking: BOOL & running: runable & not(running = TASK_NULL));
  ("`Local hypotheses'" & queue_items(pxQueue) = {});
  ("`Local hypotheses'" & queue_items(pxQueue) = {} & q1: queues);
  ("`Local hypotheses'" & queue_items(pxQueue) = {} & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & blocked\/{running}: FIN(TASK) & running: tasks & n_runable: FIN(TASK) & not(running: n_runable) & n_runable/\blocked = {} & blocked\/{running}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/(blocked\/{running})\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q1) => not(tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked) & not(running$0 = running)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ((queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(que): POW(blocked\/{running}\/suspended));
  ("`Local hypotheses'" & queue_items(pxQueue) = {} & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & n_runable: FIN(TASK) & suspended\/{running}: FIN(TASK) & running: tasks & n_runable/\blocked = {} & suspended\/{running}/\n_runable = {} & tasks = suspended\/{running}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q1) => not(tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(q2))) & (active = TRUE => not(running$0: suspended) & not(running$0 = running)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  (queue_sending(que): POW(blocked\/(suspended\/{running})));
  ((queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{running})})(que): POW(blocked\/(suspended\/{running})));
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked\/suspended);
  (not(pxQueue: queues_msg_empty));
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked\/suspended & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & task: suspended & task: blocked & item: ITEM & item: queue_items(pxQueue) & pxQueue: queues_msg_full & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = task))) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ((queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(mt) = {});
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked\/suspended & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & task: suspended & task: blocked & item: ITEM & item: queue_items(pxQueue) & pxQueue: queues_msg_full & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = task))) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ((queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(que): POW(blocked-{task}\/suspended-{task}));
  (queue_receiving(que): POW(blocked-{task}\/suspended-{task}));
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked\/suspended & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & task: suspended & task: blocked & item: ITEM & item: queue_items(pxQueue) & not(pxQueue: queues_msg_full) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = task))) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked\/suspended & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & task: suspended & task: blocked & item: ITEM & item: queue_items(pxQueue) & not(pxQueue: queues_msg_full) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = task))) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked\/suspended & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & task: suspended & not(task: blocked) & item: ITEM & item: queue_items(pxQueue) & pxQueue: queues_msg_full & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = task))) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked\/suspended & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & task: suspended & not(task: blocked) & item: ITEM & item: queue_items(pxQueue) & pxQueue: queues_msg_full & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = task))) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ((queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(que): POW(blocked\/suspended-{task}));
  (queue_receiving(que): POW(blocked\/suspended-{task}));
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked\/suspended & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & task: suspended & not(task: blocked) & item: ITEM & item: queue_items(pxQueue) & not(pxQueue: queues_msg_full) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = task))) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked\/suspended & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & task: suspended & not(task: blocked) & item: ITEM & item: queue_items(pxQueue) & not(pxQueue: queues_msg_full) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = task))) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked\/suspended & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & not(task: suspended) & task: blocked & item: ITEM & item: queue_items(pxQueue) & pxQueue: queues_msg_full & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked\/suspended & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & not(task: suspended) & task: blocked & item: ITEM & item: queue_items(pxQueue) & pxQueue: queues_msg_full & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ((queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(que): POW(blocked-{task}\/suspended));
  (queue_receiving(que): POW(blocked-{task}\/suspended));
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked\/suspended & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & not(task: suspended) & task: blocked & item: ITEM & item: queue_items(pxQueue) & not(pxQueue: queues_msg_full) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked\/suspended & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & not(task: suspended) & task: blocked & item: ITEM & item: queue_items(pxQueue) & not(pxQueue: queues_msg_full) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked\/suspended & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & not(task: suspended) & not(task: blocked) & item: ITEM & item: queue_items(pxQueue) & pxQueue: queues_msg_full & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked\/suspended & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & not(task: suspended) & not(task: blocked) & item: ITEM & item: queue_items(pxQueue) & pxQueue: queues_msg_full & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ((queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(que): POW(blocked\/suspended));
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked\/suspended & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & not(task: suspended) & not(task: blocked) & item: ITEM & item: queue_items(pxQueue) & not(pxQueue: queues_msg_full) & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked\/suspended & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & not(task: suspended) & not(task: blocked) & item: ITEM & item: queue_items(pxQueue) & not(pxQueue: queues_msg_full) & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked\/suspended & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & task: suspended & task: blocked & item: ITEM & item: queue_items(pxQueue) & pxQueue: queues_msg_full & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & (active = TRUE => not(running: suspended & not(running = task))) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked\/suspended & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & task: suspended & task: blocked & item: ITEM & item: queue_items(pxQueue) & pxQueue: queues_msg_full & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & (active = TRUE => not(running: suspended & not(running = task))) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked\/suspended & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & task: suspended & task: blocked & item: ITEM & item: queue_items(pxQueue) & not(pxQueue: queues_msg_full) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & (active = TRUE => not(running: suspended & not(running = task))) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked\/suspended & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & task: suspended & task: blocked & item: ITEM & item: queue_items(pxQueue) & not(pxQueue: queues_msg_full) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & (active = TRUE => not(running: suspended & not(running = task))) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked\/suspended & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & task: suspended & not(task: blocked) & item: ITEM & item: queue_items(pxQueue) & pxQueue: queues_msg_full & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & (active = TRUE => not(running: suspended & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked\/suspended & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & task: suspended & not(task: blocked) & item: ITEM & item: queue_items(pxQueue) & pxQueue: queues_msg_full & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & (active = TRUE => not(running: suspended & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked\/suspended & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & task: suspended & not(task: blocked) & item: ITEM & item: queue_items(pxQueue) & not(pxQueue: queues_msg_full) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & (active = TRUE => not(running: suspended & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked\/suspended & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & task: suspended & not(task: blocked) & item: ITEM & item: queue_items(pxQueue) & not(pxQueue: queues_msg_full) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & (active = TRUE => not(running: suspended & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked\/suspended & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task: suspended) & task: blocked & item: ITEM & item: queue_items(pxQueue) & pxQueue: queues_msg_full & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked\/suspended & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task: suspended) & task: blocked & item: ITEM & item: queue_items(pxQueue) & pxQueue: queues_msg_full & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked\/suspended & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task: suspended) & task: blocked & item: ITEM & item: queue_items(pxQueue) & not(pxQueue: queues_msg_full) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked\/suspended & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task: suspended) & task: blocked & item: ITEM & item: queue_items(pxQueue) & not(pxQueue: queues_msg_full) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked\/suspended & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task: suspended) & not(task: blocked) & item: ITEM & item: queue_items(pxQueue) & pxQueue: queues_msg_full & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked\/suspended & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task: suspended) & not(task: blocked) & item: ITEM & item: queue_items(pxQueue) & pxQueue: queues_msg_full & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & queues_msg_full-{pxQueue}: POW(queues_msg) & queues_msg_full-{pxQueue}/\queues_msg_empty = {} & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked\/suspended & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task: suspended) & not(task: blocked) & item: ITEM & item: queue_items(pxQueue) & not(pxQueue: queues_msg_full) & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(queue_items(pxQueue) = {}) & task: TASK & task: queue_sending(pxQueue) & task: blocked\/suspended & justPeeking = FALSE & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task: suspended) & not(task: blocked) & item: ITEM & item: queue_items(pxQueue) & not(pxQueue: queues_msg_full) & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}}) & queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}: QUEUE +-> POW(ITEM) & queues_msg = dom(queue_items<+{pxQueue|->queue_items(pxQueue)-{item}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) => not(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2))) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`createSemaphore preconditions in this component'" & maxCount: INTEGER & maxCount<=2147483647 & -2147483647<=maxCount & initialCount: INTEGER & initialCount<=2147483647 & -2147483647<=initialCount & initialCount<=maxCount);
  (maxCount: QUEUE_LENGTH);
  (initialCount: QUEUE_LENGTH);
  ("`Local hypotheses'" & semaphore$0: QUEUE & not(semaphore$0: queues) & queue_receiving\/{semaphore$0|->{}}: QUEUE +-> POW(TASK) & queue_sending\/{semaphore$0|->{}}: QUEUE +-> POW(TASK) & queues\/{semaphore$0} = dom(queue_receiving\/{semaphore$0|->{}}) & queues\/{semaphore$0} = dom(queue_sending\/{semaphore$0|->{}}) & queues_msg: POW(queues\/{semaphore$0}) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & tk: TASK & tk: (queue_receiving\/{semaphore$0|->{}})(q1) => not(tk: (queue_sending\/{semaphore$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & tk: TASK & tk: (queue_sending\/{semaphore$0|->{}})(q2) => not(tk: (queue_receiving\/{semaphore$0|->{}})(q1))) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & not(q1 = q2) & tk: TASK & tk: (queue_receiving\/{semaphore$0|->{}})(q1) => not(tk: (queue_receiving\/{semaphore$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & not(q1 = q2) & tk: TASK & tk: (queue_sending\/{semaphore$0|->{}})(q1) => not(tk: (queue_sending\/{semaphore$0|->{}})(q2))) & semaphore$0: queues\/{semaphore$0} & semaphores: POW(queues\/{semaphore$0}) & semaphore$0: semaphores\/{semaphore$0} & semaphores_busy: POW(semaphores\/{semaphore$0}) & mutexes: POW(queues\/{semaphore$0}) & not(semaphore$0: queues_msg) & not(semaphore$0: mutexes) & !que.(que: QUEUE & (not(que: queues) & not(que = semaphore$0)) => not(que: mutexes)) & !que.(que: QUEUE & (not(que: queues) & not(que = semaphore$0)) => not(que: semaphores) & not(que = semaphore$0)) & mt: mutexes);
  ((queue_sending\/{semaphore$0|->{}})(mt) = {});
  ("`Local hypotheses'" & semaphore$0: QUEUE & not(semaphore$0: queues) & queue_receiving\/{semaphore$0|->{}}: QUEUE +-> POW(TASK) & queue_sending\/{semaphore$0|->{}}: QUEUE +-> POW(TASK) & queues\/{semaphore$0} = dom(queue_receiving\/{semaphore$0|->{}}) & queues\/{semaphore$0} = dom(queue_sending\/{semaphore$0|->{}}) & queues_msg: POW(queues\/{semaphore$0}) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & tk: TASK & tk: (queue_receiving\/{semaphore$0|->{}})(q1) => not(tk: (queue_sending\/{semaphore$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & tk: TASK & tk: (queue_sending\/{semaphore$0|->{}})(q2) => not(tk: (queue_receiving\/{semaphore$0|->{}})(q1))) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & not(q1 = q2) & tk: TASK & tk: (queue_receiving\/{semaphore$0|->{}})(q1) => not(tk: (queue_receiving\/{semaphore$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & not(q1 = q2) & tk: TASK & tk: (queue_sending\/{semaphore$0|->{}})(q1) => not(tk: (queue_sending\/{semaphore$0|->{}})(q2))) & semaphore$0: queues\/{semaphore$0} & semaphores: POW(queues\/{semaphore$0}) & semaphore$0: semaphores\/{semaphore$0} & semaphores_busy: POW(semaphores\/{semaphore$0}) & mutexes: POW(queues\/{semaphore$0}) & not(semaphore$0: queues_msg) & not(semaphore$0: mutexes) & !que.(que: QUEUE & (not(que: queues) & not(que = semaphore$0)) => not(que: mutexes)) & !que.(que: QUEUE & (not(que: queues) & not(que = semaphore$0)) => not(que: semaphores) & not(que = semaphore$0)) & que: queues\/{semaphore$0});
  ((queue_sending\/{semaphore$0|->{}})(que): POW(blocked\/suspended));
  ((queue_receiving\/{semaphore$0|->{}})(que): POW(blocked\/suspended));
  ("`Local hypotheses'" & semaphore$0: QUEUE & not(semaphore$0: queues) & queue_receiving\/{semaphore$0|->{}}: QUEUE +-> POW(TASK) & queue_sending\/{semaphore$0|->{}}: QUEUE +-> POW(TASK) & queues\/{semaphore$0} = dom(queue_receiving\/{semaphore$0|->{}}) & queues\/{semaphore$0} = dom(queue_sending\/{semaphore$0|->{}}) & queues_msg: POW(queues\/{semaphore$0}) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & tk: TASK & tk: (queue_receiving\/{semaphore$0|->{}})(q1) => not(tk: (queue_sending\/{semaphore$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & tk: TASK & tk: (queue_sending\/{semaphore$0|->{}})(q2) => not(tk: (queue_receiving\/{semaphore$0|->{}})(q1))) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & not(q1 = q2) & tk: TASK & tk: (queue_receiving\/{semaphore$0|->{}})(q1) => not(tk: (queue_receiving\/{semaphore$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & not(q1 = q2) & tk: TASK & tk: (queue_sending\/{semaphore$0|->{}})(q1) => not(tk: (queue_sending\/{semaphore$0|->{}})(q2))) & semaphore$0: queues\/{semaphore$0} & semaphores: POW(queues\/{semaphore$0}) & semaphores_busy: POW(semaphores\/{semaphore$0}) & mutexes: POW(queues\/{semaphore$0}) & not(semaphore$0: queues_msg) & not(semaphore$0: mutexes) & !que.(que: QUEUE & (not(que: queues) & not(que = semaphore$0)) => not(que: mutexes)) & !que.(que: QUEUE & (not(que: queues) & not(que = semaphore$0)) => not(que: semaphores) & not(que = semaphore$0)) & mt: mutexes);
  ("`Local hypotheses'" & semaphore$0: QUEUE & not(semaphore$0: queues) & queue_receiving\/{semaphore$0|->{}}: QUEUE +-> POW(TASK) & queue_sending\/{semaphore$0|->{}}: QUEUE +-> POW(TASK) & queues\/{semaphore$0} = dom(queue_receiving\/{semaphore$0|->{}}) & queues\/{semaphore$0} = dom(queue_sending\/{semaphore$0|->{}}) & queues_msg: POW(queues\/{semaphore$0}) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & tk: TASK & tk: (queue_receiving\/{semaphore$0|->{}})(q1) => not(tk: (queue_sending\/{semaphore$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & tk: TASK & tk: (queue_sending\/{semaphore$0|->{}})(q2) => not(tk: (queue_receiving\/{semaphore$0|->{}})(q1))) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & not(q1 = q2) & tk: TASK & tk: (queue_receiving\/{semaphore$0|->{}})(q1) => not(tk: (queue_receiving\/{semaphore$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{semaphore$0} & q2: queues\/{semaphore$0} & not(q1 = q2) & tk: TASK & tk: (queue_sending\/{semaphore$0|->{}})(q1) => not(tk: (queue_sending\/{semaphore$0|->{}})(q2))) & semaphore$0: queues\/{semaphore$0} & semaphores: POW(queues\/{semaphore$0}) & semaphores_busy: POW(semaphores\/{semaphore$0}) & mutexes: POW(queues\/{semaphore$0}) & not(semaphore$0: queues_msg) & not(semaphore$0: mutexes) & !que.(que: QUEUE & (not(que: queues) & not(que = semaphore$0)) => not(que: mutexes)) & !que.(que: QUEUE & (not(que: queues) & not(que = semaphore$0)) => not(que: semaphores) & not(que = semaphore$0)) & que: queues\/{semaphore$0});
  ("`deleteSemaphore preconditions in this component'" & semaphore: semaphores & not(queue_sending(semaphore) = {}) & not(queue_receiving(semaphore) = {}));
  ("`Local hypotheses'" & semaphore: semaphores_busy & queues-{semaphore}: POW(QUEUE) & {semaphore}<<|queue_receiving: QUEUE +-> POW(TASK) & {semaphore}<<|queue_sending: QUEUE +-> POW(TASK) & queues-{semaphore} = dom({semaphore}<<|queue_receiving) & queues-{semaphore} = dom({semaphore}<<|queue_sending) & queues_msg: POW(queues-{semaphore}) & !(q1,q2,tk).(q1: queues & not(q1 = semaphore) & (q2: queues & not(q2 = semaphore)) & tk: TASK & tk: ({semaphore}<<|queue_receiving)(q1) => not(tk: ({semaphore}<<|queue_sending)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = semaphore) & (q2: queues & not(q2 = semaphore)) & tk: TASK & tk: ({semaphore}<<|queue_sending)(q2) => not(tk: ({semaphore}<<|queue_receiving)(q1))) & !(q1,q2,tk).(q1: queues & not(q1 = semaphore) & (q2: queues & not(q2 = semaphore)) & not(q1 = q2) & tk: TASK & tk: ({semaphore}<<|queue_receiving)(q1) => not(tk: ({semaphore}<<|queue_receiving)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = semaphore) & (q2: queues & not(q2 = semaphore)) & not(q1 = q2) & tk: TASK & tk: ({semaphore}<<|queue_sending)(q1) => not(tk: ({semaphore}<<|queue_sending)(q2))) & semaphores-{semaphore}: POW(QUEUE) & semaphores-{semaphore}: POW(queues-{semaphore}) & semaphores_busy-{semaphore}: POW(semaphores-{semaphore}) & mutexes: POW(queues-{semaphore}) & queues_msg/\semaphores-{semaphore} = {} & mutexes/\semaphores-{semaphore} = {} & !que.(que: QUEUE & not(que: queues & not(que = semaphore)) => not(que: mutexes)) & !que.(que: QUEUE & not(que: queues & not(que = semaphore)) => not(que: semaphores & not(que = semaphore))) & mt: mutexes);
  (({semaphore}<<|queue_sending)(mt) = {});
  ("`Local hypotheses'" & semaphore: semaphores_busy & queues-{semaphore}: POW(QUEUE) & {semaphore}<<|queue_receiving: QUEUE +-> POW(TASK) & {semaphore}<<|queue_sending: QUEUE +-> POW(TASK) & queues-{semaphore} = dom({semaphore}<<|queue_receiving) & queues-{semaphore} = dom({semaphore}<<|queue_sending) & queues_msg: POW(queues-{semaphore}) & !(q1,q2,tk).(q1: queues & not(q1 = semaphore) & (q2: queues & not(q2 = semaphore)) & tk: TASK & tk: ({semaphore}<<|queue_receiving)(q1) => not(tk: ({semaphore}<<|queue_sending)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = semaphore) & (q2: queues & not(q2 = semaphore)) & tk: TASK & tk: ({semaphore}<<|queue_sending)(q2) => not(tk: ({semaphore}<<|queue_receiving)(q1))) & !(q1,q2,tk).(q1: queues & not(q1 = semaphore) & (q2: queues & not(q2 = semaphore)) & not(q1 = q2) & tk: TASK & tk: ({semaphore}<<|queue_receiving)(q1) => not(tk: ({semaphore}<<|queue_receiving)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = semaphore) & (q2: queues & not(q2 = semaphore)) & not(q1 = q2) & tk: TASK & tk: ({semaphore}<<|queue_sending)(q1) => not(tk: ({semaphore}<<|queue_sending)(q2))) & semaphores-{semaphore}: POW(QUEUE) & semaphores-{semaphore}: POW(queues-{semaphore}) & semaphores_busy-{semaphore}: POW(semaphores-{semaphore}) & mutexes: POW(queues-{semaphore}) & queues_msg/\semaphores-{semaphore} = {} & mutexes/\semaphores-{semaphore} = {} & !que.(que: QUEUE & not(que: queues & not(que = semaphore)) => not(que: mutexes)) & !que.(que: QUEUE & not(que: queues & not(que = semaphore)) => not(que: semaphores & not(que = semaphore))) & que: queues & not(que = semaphore));
  (({semaphore}<<|queue_sending)(que): POW(blocked\/suspended));
  (({semaphore}<<|queue_receiving)(que): POW(blocked\/suspended));
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & queues-{semaphore}: POW(QUEUE) & {semaphore}<<|queue_receiving: QUEUE +-> POW(TASK) & {semaphore}<<|queue_sending: QUEUE +-> POW(TASK) & queues-{semaphore} = dom({semaphore}<<|queue_receiving) & queues-{semaphore} = dom({semaphore}<<|queue_sending) & queues_msg: POW(queues-{semaphore}) & !(q1,q2,tk).(q1: queues & not(q1 = semaphore) & (q2: queues & not(q2 = semaphore)) & tk: TASK & tk: ({semaphore}<<|queue_receiving)(q1) => not(tk: ({semaphore}<<|queue_sending)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = semaphore) & (q2: queues & not(q2 = semaphore)) & tk: TASK & tk: ({semaphore}<<|queue_sending)(q2) => not(tk: ({semaphore}<<|queue_receiving)(q1))) & !(q1,q2,tk).(q1: queues & not(q1 = semaphore) & (q2: queues & not(q2 = semaphore)) & not(q1 = q2) & tk: TASK & tk: ({semaphore}<<|queue_receiving)(q1) => not(tk: ({semaphore}<<|queue_receiving)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = semaphore) & (q2: queues & not(q2 = semaphore)) & not(q1 = q2) & tk: TASK & tk: ({semaphore}<<|queue_sending)(q1) => not(tk: ({semaphore}<<|queue_sending)(q2))) & semaphores-{semaphore}: POW(QUEUE) & semaphores-{semaphore}: POW(queues-{semaphore}) & semaphores_busy: POW(semaphores-{semaphore}) & mutexes: POW(queues-{semaphore}) & queues_msg/\semaphores-{semaphore} = {} & mutexes/\semaphores-{semaphore} = {} & !que.(que: QUEUE & not(que: queues & not(que = semaphore)) => not(que: mutexes)) & !que.(que: QUEUE & not(que: queues & not(que = semaphore)) => not(que: semaphores & not(que = semaphore))) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & queues-{semaphore}: POW(QUEUE) & {semaphore}<<|queue_receiving: QUEUE +-> POW(TASK) & {semaphore}<<|queue_sending: QUEUE +-> POW(TASK) & queues-{semaphore} = dom({semaphore}<<|queue_receiving) & queues-{semaphore} = dom({semaphore}<<|queue_sending) & queues_msg: POW(queues-{semaphore}) & !(q1,q2,tk).(q1: queues & not(q1 = semaphore) & (q2: queues & not(q2 = semaphore)) & tk: TASK & tk: ({semaphore}<<|queue_receiving)(q1) => not(tk: ({semaphore}<<|queue_sending)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = semaphore) & (q2: queues & not(q2 = semaphore)) & tk: TASK & tk: ({semaphore}<<|queue_sending)(q2) => not(tk: ({semaphore}<<|queue_receiving)(q1))) & !(q1,q2,tk).(q1: queues & not(q1 = semaphore) & (q2: queues & not(q2 = semaphore)) & not(q1 = q2) & tk: TASK & tk: ({semaphore}<<|queue_receiving)(q1) => not(tk: ({semaphore}<<|queue_receiving)(q2))) & !(q1,q2,tk).(q1: queues & not(q1 = semaphore) & (q2: queues & not(q2 = semaphore)) & not(q1 = q2) & tk: TASK & tk: ({semaphore}<<|queue_sending)(q1) => not(tk: ({semaphore}<<|queue_sending)(q2))) & semaphores-{semaphore}: POW(QUEUE) & semaphores-{semaphore}: POW(queues-{semaphore}) & semaphores_busy: POW(semaphores-{semaphore}) & mutexes: POW(queues-{semaphore}) & queues_msg/\semaphores-{semaphore} = {} & mutexes/\semaphores-{semaphore} = {} & !que.(que: QUEUE & not(que: queues & not(que = semaphore)) => not(que: mutexes)) & !que.(que: QUEUE & not(que: queues & not(que = semaphore)) => not(que: semaphores & not(que = semaphore))) & que: queues & not(que = semaphore));
  ("`takeSemaphore preconditions in this component'" & semaphore: semaphores & xTicksToWait: TICK & not(running = idle) & running: runable & not(running = TASK_NULL));
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & task: TASK & task: blocked\/suspended & task: queue_sending(semaphore) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & task: suspended & task: blocked & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->queue_sending(semaphore)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->queue_sending(semaphore)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q1) => not(tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = task))) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ((queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(mt) = {});
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & task: TASK & task: blocked\/suspended & task: queue_sending(semaphore) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & task: suspended & task: blocked & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->queue_sending(semaphore)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->queue_sending(semaphore)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q1) => not(tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = task))) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ((queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(que): POW(blocked-{task}\/suspended-{task}));
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & task: TASK & task: blocked\/suspended & task: queue_sending(semaphore) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & task: suspended & not(task: blocked) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->queue_sending(semaphore)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->queue_sending(semaphore)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q1) => not(tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = task))) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & task: TASK & task: blocked\/suspended & task: queue_sending(semaphore) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & task: suspended & not(task: blocked) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->queue_sending(semaphore)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->queue_sending(semaphore)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q1) => not(tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = task))) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ((queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(que): POW(blocked\/suspended-{task}));
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & task: TASK & task: blocked\/suspended & task: queue_sending(semaphore) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & not(task: suspended) & task: blocked & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->queue_sending(semaphore)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->queue_sending(semaphore)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q1) => not(tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & task: TASK & task: blocked\/suspended & task: queue_sending(semaphore) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & not(task: suspended) & task: blocked & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->queue_sending(semaphore)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->queue_sending(semaphore)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q1) => not(tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ((queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(que): POW(blocked-{task}\/suspended));
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & task: TASK & task: blocked\/suspended & task: queue_sending(semaphore) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & not(task: suspended) & not(task: blocked) & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->queue_sending(semaphore)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->queue_sending(semaphore)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q1) => not(tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & task: TASK & task: blocked\/suspended & task: queue_sending(semaphore) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & not(task: suspended) & not(task: blocked) & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->queue_sending(semaphore)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->queue_sending(semaphore)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q1) => not(tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ((queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(que): POW(blocked\/suspended));
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & task: TASK & task: blocked\/suspended & task: queue_sending(semaphore) & n_runable: POW(tasks) & n_runable = runable\/{task} & task: suspended & task: blocked & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->queue_sending(semaphore)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->queue_sending(semaphore)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q1) => not(tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q2))) & (active = TRUE => not(running: suspended & not(running = task))) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & task: TASK & task: blocked\/suspended & task: queue_sending(semaphore) & n_runable: POW(tasks) & n_runable = runable\/{task} & task: suspended & task: blocked & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->queue_sending(semaphore)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->queue_sending(semaphore)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q1) => not(tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q2))) & (active = TRUE => not(running: suspended & not(running = task))) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & task: TASK & task: blocked\/suspended & task: queue_sending(semaphore) & n_runable: POW(tasks) & n_runable = runable\/{task} & task: suspended & not(task: blocked) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->queue_sending(semaphore)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->queue_sending(semaphore)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q1) => not(tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q2))) & (active = TRUE => not(running: suspended & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & task: TASK & task: blocked\/suspended & task: queue_sending(semaphore) & n_runable: POW(tasks) & n_runable = runable\/{task} & task: suspended & not(task: blocked) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->queue_sending(semaphore)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->queue_sending(semaphore)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q1) => not(tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q2))) & (active = TRUE => not(running: suspended & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & task: TASK & task: blocked\/suspended & task: queue_sending(semaphore) & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task: suspended) & task: blocked & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->queue_sending(semaphore)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->queue_sending(semaphore)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q1) => not(tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q2))) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & task: TASK & task: blocked\/suspended & task: queue_sending(semaphore) & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task: suspended) & task: blocked & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->queue_sending(semaphore)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->queue_sending(semaphore)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q1) => not(tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q2))) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & task: TASK & task: blocked\/suspended & task: queue_sending(semaphore) & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task: suspended) & not(task: blocked) & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->queue_sending(semaphore)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->queue_sending(semaphore)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q1) => not(tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q2))) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & not(semaphore: semaphores_busy) & task: TASK & task: blocked\/suspended & task: queue_sending(semaphore) & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task: suspended) & not(task: blocked) & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->queue_sending(semaphore)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->queue_sending(semaphore)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q1) => not(tk: (queue_sending<+{semaphore|->queue_sending(semaphore)-{task}})(q2))) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & semaphore: semaphores_busy);
  (semaphore: queues);
  ("`Local hypotheses'" & semaphore: semaphores_busy & q1: queues);
  ("`Local hypotheses'" & semaphore: semaphores_busy & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & blocked\/{running}: FIN(TASK) & running: tasks & n_runable: FIN(TASK) & not(running: n_runable) & n_runable/\blocked = {} & blocked\/{running}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/(blocked\/{running})\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})})(q1) => not(tk: (queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked) & not(running$0 = running)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ((queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})})(que): POW(blocked\/{running}\/suspended));
  ("`Local hypotheses'" & semaphore: semaphores_busy & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & n_runable: FIN(TASK) & suspended\/{running}: FIN(TASK) & running: tasks & n_runable/\blocked = {} & not(running: blocked) & suspended\/{running}/\n_runable = {} & tasks = suspended\/{running}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})})(q1) => not(tk: (queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})})(q2))) & (active = TRUE => not(running$0: suspended) & not(running$0 = running)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ((queue_receiving<+{semaphore|->(queue_receiving(semaphore)\/{running})})(que): POW(blocked\/(suspended\/{running})));
  ("`giveSemaphore preconditions in this component'" & semaphore: semaphores & xTicksToWait: TICK & not(running = idle) & running: runable & not(running = TASK_NULL));
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_receiving(semaphore));
  (task: TASK);
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_receiving(semaphore) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & task: suspended & task: blocked & semaphore: semaphores_busy & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q1) => not(tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q2))) & semaphores_busy-{semaphore}: POW(semaphores) & (active = TRUE => not(running$0: suspended & not(running$0 = task))) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ((queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(que): POW(blocked-{task}\/suspended-{task}));
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_receiving(semaphore) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & task: suspended & task: blocked & not(semaphore: semaphores_busy) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q1) => not(tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = task))) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_receiving(semaphore) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & task: suspended & not(task: blocked) & semaphore: semaphores_busy & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q1) => not(tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q2))) & semaphores_busy-{semaphore}: POW(semaphores) & (active = TRUE => not(running$0: suspended & not(running$0 = task))) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ((queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(que): POW(blocked\/suspended-{task}));
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_receiving(semaphore) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & task: suspended & not(task: blocked) & not(semaphore: semaphores_busy) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q1) => not(tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q2))) & (active = TRUE => not(running$0: suspended & not(running$0 = task))) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_receiving(semaphore) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & not(task: suspended) & task: blocked & semaphore: semaphores_busy & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q1) => not(tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q2))) & semaphores_busy-{semaphore}: POW(semaphores) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ((queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(que): POW(blocked-{task}\/suspended));
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_receiving(semaphore) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & not(task: suspended) & task: blocked & not(semaphore: semaphores_busy) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q1) => not(tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_receiving(semaphore) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & not(task: suspended) & not(task: blocked) & semaphore: semaphores_busy & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q1) => not(tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q2))) & semaphores_busy-{semaphore}: POW(semaphores) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ((queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(que): POW(blocked\/suspended));
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_receiving(semaphore) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & not(task: suspended) & not(task: blocked) & not(semaphore: semaphores_busy) & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q1) => not(tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_receiving(semaphore) & n_runable: POW(tasks) & n_runable = runable\/{task} & task: suspended & task: blocked & semaphore: semaphores_busy & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q1) => not(tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q2))) & semaphores_busy-{semaphore}: POW(semaphores) & (active = TRUE => not(running: suspended & not(running = task))) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_receiving(semaphore) & n_runable: POW(tasks) & n_runable = runable\/{task} & task: suspended & task: blocked & not(semaphore: semaphores_busy) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q1) => not(tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q2))) & (active = TRUE => not(running: suspended & not(running = task))) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_receiving(semaphore) & n_runable: POW(tasks) & n_runable = runable\/{task} & task: suspended & not(task: blocked) & semaphore: semaphores_busy & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q1) => not(tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q2))) & semaphores_busy-{semaphore}: POW(semaphores) & (active = TRUE => not(running: suspended & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_receiving(semaphore) & n_runable: POW(tasks) & n_runable = runable\/{task} & task: suspended & not(task: blocked) & not(semaphore: semaphores_busy) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q1) => not(tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q2))) & (active = TRUE => not(running: suspended & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_receiving(semaphore) & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task: suspended) & task: blocked & semaphore: semaphores_busy & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q1) => not(tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q2))) & semaphores_busy-{semaphore}: POW(semaphores) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_receiving(semaphore) & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task: suspended) & task: blocked & not(semaphore: semaphores_busy) & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q1) => not(tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q2))) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_receiving(semaphore) & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task: suspended) & not(task: blocked) & semaphore: semaphores_busy & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q1) => not(tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q2))) & semaphores_busy-{semaphore}: POW(semaphores) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_receiving(semaphore) & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task: suspended) & not(task: blocked) & not(semaphore: semaphores_busy) & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q1) => not(tk: (queue_receiving<+{semaphore|->queue_receiving(semaphore)-{task}})(q2))) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & blocked\/{running}: FIN(TASK) & running: tasks & n_runable: FIN(TASK) & not(running: n_runable) & n_runable/\blocked = {} & blocked\/{running}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/(blocked\/{running})\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q1) => not(tk: (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked) & not(running$0 = running)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ((queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(mt) = {});
  ("`Local hypotheses'" & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & blocked\/{running}: FIN(TASK) & running: tasks & n_runable: FIN(TASK) & not(running: n_runable) & n_runable/\blocked = {} & blocked\/{running}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/(blocked\/{running})\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q1) => not(tk: (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked) & not(running$0 = running)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ((queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(que): POW(blocked\/{running}\/suspended));
  ("`Local hypotheses'" & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & n_runable: FIN(TASK) & suspended\/{running}: FIN(TASK) & running: tasks & n_runable/\blocked = {} & not(running: blocked) & suspended\/{running}/\n_runable = {} & tasks = suspended\/{running}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q1) => not(tk: (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q2))) & (active = TRUE => not(running$0: suspended) & not(running$0 = running)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & n_runable: FIN(TASK) & suspended\/{running}: FIN(TASK) & running: tasks & n_runable/\blocked = {} & not(running: blocked) & suspended\/{running}/\n_runable = {} & tasks = suspended\/{running}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})}: QUEUE +-> POW(TASK) & queues = dom(queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q1) => not(tk: (queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(q2))) & (active = TRUE => not(running$0: suspended) & not(running$0 = running)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ((queue_sending<+{semaphore|->(queue_sending(semaphore)\/{running})})(que): POW(blocked\/(suspended\/{running})));
  ("`Local hypotheses'" & mutex$0: QUEUE & not(mutex$0: queues) & queue_receiving\/{mutex$0|->{}}: QUEUE +-> POW(TASK) & queue_sending\/{mutex$0|->{}}: QUEUE +-> POW(TASK) & queues\/{mutex$0} = dom(queue_receiving\/{mutex$0|->{}}) & queues\/{mutex$0} = dom(queue_sending\/{mutex$0|->{}}) & queues_msg: POW(queues\/{mutex$0}) & !(q1,q2,tk).(q1: queues\/{mutex$0} & q2: queues\/{mutex$0} & tk: TASK & tk: (queue_receiving\/{mutex$0|->{}})(q1) => not(tk: (queue_sending\/{mutex$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{mutex$0} & q2: queues\/{mutex$0} & tk: TASK & tk: (queue_sending\/{mutex$0|->{}})(q2) => not(tk: (queue_receiving\/{mutex$0|->{}})(q1))) & !(q1,q2,tk).(q1: queues\/{mutex$0} & q2: queues\/{mutex$0} & not(q1 = q2) & tk: TASK & tk: (queue_receiving\/{mutex$0|->{}})(q1) => not(tk: (queue_receiving\/{mutex$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{mutex$0} & q2: queues\/{mutex$0} & not(q1 = q2) & tk: TASK & tk: (queue_sending\/{mutex$0|->{}})(q1) => not(tk: (queue_sending\/{mutex$0|->{}})(q2))) & semaphores: POW(queues\/{mutex$0}) & mutex$0: queues\/{mutex$0} & mutexes: POW(queues\/{mutex$0}) & mutex_holder\/{mutex$0|->TASK_NULL}: QUEUE +-> TASK & mutexes\/{mutex$0} = dom(mutex_holder\/{mutex$0|->TASK_NULL}) & mutexes_busy: POW(mutexes\/{mutex$0}) & !mt.(mt: mutexes_busy => not((mutex_holder\/{mutex$0|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes\/{mutex$0} & not(mt: mutexes_busy) => (mutex_holder\/{mutex$0|->TASK_NULL})(mt) = TASK_NULL) & not(mutex$0: queues_msg) & mutexes\/{mutex$0}/\semaphores = {} & !que.(que: QUEUE & (not(que: queues) & not(que = mutex$0)) => not(que: mutexes) & not(que = mutex$0)) & !que.(que: QUEUE & (not(que: queues) & not(que = mutex$0)) => not(que: semaphores)));
  (ran(mutex_holder\/{mutex$0|->TASK_NULL}): POW(tasks\/{TASK_NULL}));
  ("`Local hypotheses'" & mutex$0: QUEUE & not(mutex$0: queues) & queue_receiving\/{mutex$0|->{}}: QUEUE +-> POW(TASK) & queue_sending\/{mutex$0|->{}}: QUEUE +-> POW(TASK) & queues\/{mutex$0} = dom(queue_receiving\/{mutex$0|->{}}) & queues\/{mutex$0} = dom(queue_sending\/{mutex$0|->{}}) & queues_msg: POW(queues\/{mutex$0}) & !(q1,q2,tk).(q1: queues\/{mutex$0} & q2: queues\/{mutex$0} & tk: TASK & tk: (queue_receiving\/{mutex$0|->{}})(q1) => not(tk: (queue_sending\/{mutex$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{mutex$0} & q2: queues\/{mutex$0} & tk: TASK & tk: (queue_sending\/{mutex$0|->{}})(q2) => not(tk: (queue_receiving\/{mutex$0|->{}})(q1))) & !(q1,q2,tk).(q1: queues\/{mutex$0} & q2: queues\/{mutex$0} & not(q1 = q2) & tk: TASK & tk: (queue_receiving\/{mutex$0|->{}})(q1) => not(tk: (queue_receiving\/{mutex$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{mutex$0} & q2: queues\/{mutex$0} & not(q1 = q2) & tk: TASK & tk: (queue_sending\/{mutex$0|->{}})(q1) => not(tk: (queue_sending\/{mutex$0|->{}})(q2))) & semaphores: POW(queues\/{mutex$0}) & mutex$0: queues\/{mutex$0} & mutexes: POW(queues\/{mutex$0}) & mutex_holder\/{mutex$0|->TASK_NULL}: QUEUE +-> TASK & mutexes\/{mutex$0} = dom(mutex_holder\/{mutex$0|->TASK_NULL}) & mutexes_busy: POW(mutexes\/{mutex$0}) & !mt.(mt: mutexes_busy => not((mutex_holder\/{mutex$0|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes\/{mutex$0} & not(mt: mutexes_busy) => (mutex_holder\/{mutex$0|->TASK_NULL})(mt) = TASK_NULL) & not(mutex$0: queues_msg) & mutexes\/{mutex$0}/\semaphores = {} & !que.(que: QUEUE & (not(que: queues) & not(que = mutex$0)) => not(que: mutexes) & not(que = mutex$0)) & !que.(que: QUEUE & (not(que: queues) & not(que = mutex$0)) => not(que: semaphores)) & active = TRUE);
  (not(idle: ran(mutex_holder\/{mutex$0|->TASK_NULL})));
  ("`Local hypotheses'" & mutex$0: QUEUE & not(mutex$0: queues) & queue_receiving\/{mutex$0|->{}}: QUEUE +-> POW(TASK) & queue_sending\/{mutex$0|->{}}: QUEUE +-> POW(TASK) & queues\/{mutex$0} = dom(queue_receiving\/{mutex$0|->{}}) & queues\/{mutex$0} = dom(queue_sending\/{mutex$0|->{}}) & queues_msg: POW(queues\/{mutex$0}) & !(q1,q2,tk).(q1: queues\/{mutex$0} & q2: queues\/{mutex$0} & tk: TASK & tk: (queue_receiving\/{mutex$0|->{}})(q1) => not(tk: (queue_sending\/{mutex$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{mutex$0} & q2: queues\/{mutex$0} & tk: TASK & tk: (queue_sending\/{mutex$0|->{}})(q2) => not(tk: (queue_receiving\/{mutex$0|->{}})(q1))) & !(q1,q2,tk).(q1: queues\/{mutex$0} & q2: queues\/{mutex$0} & not(q1 = q2) & tk: TASK & tk: (queue_receiving\/{mutex$0|->{}})(q1) => not(tk: (queue_receiving\/{mutex$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{mutex$0} & q2: queues\/{mutex$0} & not(q1 = q2) & tk: TASK & tk: (queue_sending\/{mutex$0|->{}})(q1) => not(tk: (queue_sending\/{mutex$0|->{}})(q2))) & semaphores: POW(queues\/{mutex$0}) & mutex$0: queues\/{mutex$0} & mutexes: POW(queues\/{mutex$0}) & mutex_holder\/{mutex$0|->TASK_NULL}: QUEUE +-> TASK & mutexes\/{mutex$0} = dom(mutex_holder\/{mutex$0|->TASK_NULL}) & mutexes_busy: POW(mutexes\/{mutex$0}) & !mt.(mt: mutexes_busy => not((mutex_holder\/{mutex$0|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes\/{mutex$0} & not(mt: mutexes_busy) => (mutex_holder\/{mutex$0|->TASK_NULL})(mt) = TASK_NULL) & not(mutex$0: queues_msg) & mutexes\/{mutex$0}/\semaphores = {} & !que.(que: QUEUE & (not(que: queues) & not(que = mutex$0)) => not(que: mutexes) & not(que = mutex$0)) & !que.(que: QUEUE & (not(que: queues) & not(que = mutex$0)) => not(que: semaphores)) & active = TRUE & mt: mutexes_busy);
  ((mutex_holder\/{mutex$0|->TASK_NULL})(mt): tasks);
  ("`Local hypotheses'" & mutex$0: QUEUE & not(mutex$0: queues) & queue_receiving\/{mutex$0|->{}}: QUEUE +-> POW(TASK) & queue_sending\/{mutex$0|->{}}: QUEUE +-> POW(TASK) & queues\/{mutex$0} = dom(queue_receiving\/{mutex$0|->{}}) & queues\/{mutex$0} = dom(queue_sending\/{mutex$0|->{}}) & queues_msg: POW(queues\/{mutex$0}) & !(q1,q2,tk).(q1: queues\/{mutex$0} & q2: queues\/{mutex$0} & tk: TASK & tk: (queue_receiving\/{mutex$0|->{}})(q1) => not(tk: (queue_sending\/{mutex$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{mutex$0} & q2: queues\/{mutex$0} & tk: TASK & tk: (queue_sending\/{mutex$0|->{}})(q2) => not(tk: (queue_receiving\/{mutex$0|->{}})(q1))) & !(q1,q2,tk).(q1: queues\/{mutex$0} & q2: queues\/{mutex$0} & not(q1 = q2) & tk: TASK & tk: (queue_receiving\/{mutex$0|->{}})(q1) => not(tk: (queue_receiving\/{mutex$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{mutex$0} & q2: queues\/{mutex$0} & not(q1 = q2) & tk: TASK & tk: (queue_sending\/{mutex$0|->{}})(q1) => not(tk: (queue_sending\/{mutex$0|->{}})(q2))) & semaphores: POW(queues\/{mutex$0}) & mutex$0: queues\/{mutex$0} & mutexes: POW(queues\/{mutex$0}) & mutex_holder\/{mutex$0|->TASK_NULL}: QUEUE +-> TASK & mutexes\/{mutex$0} = dom(mutex_holder\/{mutex$0|->TASK_NULL}) & mutexes_busy: POW(mutexes\/{mutex$0}) & !mt.(mt: mutexes_busy => not((mutex_holder\/{mutex$0|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes\/{mutex$0} & not(mt: mutexes_busy) => (mutex_holder\/{mutex$0|->TASK_NULL})(mt) = TASK_NULL) & not(mutex$0: queues_msg) & mutexes\/{mutex$0}/\semaphores = {} & !que.(que: QUEUE & (not(que: queues) & not(que = mutex$0)) => not(que: mutexes) & not(que = mutex$0)) & !que.(que: QUEUE & (not(que: queues) & not(que = mutex$0)) => not(que: semaphores)) & active = TRUE & mt: mutexes\/{mutex$0} & not(mt: mutexes_busy));
  (not((mutex_holder\/{mutex$0|->TASK_NULL})(mt): tasks));
  ("`Local hypotheses'" & mutex$0: QUEUE & not(mutex$0: queues) & queue_receiving\/{mutex$0|->{}}: QUEUE +-> POW(TASK) & queue_sending\/{mutex$0|->{}}: QUEUE +-> POW(TASK) & queues\/{mutex$0} = dom(queue_receiving\/{mutex$0|->{}}) & queues\/{mutex$0} = dom(queue_sending\/{mutex$0|->{}}) & queues_msg: POW(queues\/{mutex$0}) & !(q1,q2,tk).(q1: queues\/{mutex$0} & q2: queues\/{mutex$0} & tk: TASK & tk: (queue_receiving\/{mutex$0|->{}})(q1) => not(tk: (queue_sending\/{mutex$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{mutex$0} & q2: queues\/{mutex$0} & tk: TASK & tk: (queue_sending\/{mutex$0|->{}})(q2) => not(tk: (queue_receiving\/{mutex$0|->{}})(q1))) & !(q1,q2,tk).(q1: queues\/{mutex$0} & q2: queues\/{mutex$0} & not(q1 = q2) & tk: TASK & tk: (queue_receiving\/{mutex$0|->{}})(q1) => not(tk: (queue_receiving\/{mutex$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{mutex$0} & q2: queues\/{mutex$0} & not(q1 = q2) & tk: TASK & tk: (queue_sending\/{mutex$0|->{}})(q1) => not(tk: (queue_sending\/{mutex$0|->{}})(q2))) & semaphores: POW(queues\/{mutex$0}) & mutex$0: queues\/{mutex$0} & mutexes: POW(queues\/{mutex$0}) & mutex_holder\/{mutex$0|->TASK_NULL}: QUEUE +-> TASK & mutexes\/{mutex$0} = dom(mutex_holder\/{mutex$0|->TASK_NULL}) & mutexes_busy: POW(mutexes\/{mutex$0}) & !mt.(mt: mutexes_busy => not((mutex_holder\/{mutex$0|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes\/{mutex$0} & not(mt: mutexes_busy) => (mutex_holder\/{mutex$0|->TASK_NULL})(mt) = TASK_NULL) & not(mutex$0: queues_msg) & mutexes\/{mutex$0}/\semaphores = {} & !que.(que: QUEUE & (not(que: queues) & not(que = mutex$0)) => not(que: mutexes) & not(que = mutex$0)) & !que.(que: QUEUE & (not(que: queues) & not(que = mutex$0)) => not(que: semaphores)) & mt: mutexes\/{mutex$0});
  ((queue_sending\/{mutex$0|->{}})(mt) = {});
  ("`Local hypotheses'" & mutex$0: QUEUE & not(mutex$0: queues) & queue_receiving\/{mutex$0|->{}}: QUEUE +-> POW(TASK) & queue_sending\/{mutex$0|->{}}: QUEUE +-> POW(TASK) & queues\/{mutex$0} = dom(queue_receiving\/{mutex$0|->{}}) & queues\/{mutex$0} = dom(queue_sending\/{mutex$0|->{}}) & queues_msg: POW(queues\/{mutex$0}) & !(q1,q2,tk).(q1: queues\/{mutex$0} & q2: queues\/{mutex$0} & tk: TASK & tk: (queue_receiving\/{mutex$0|->{}})(q1) => not(tk: (queue_sending\/{mutex$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{mutex$0} & q2: queues\/{mutex$0} & tk: TASK & tk: (queue_sending\/{mutex$0|->{}})(q2) => not(tk: (queue_receiving\/{mutex$0|->{}})(q1))) & !(q1,q2,tk).(q1: queues\/{mutex$0} & q2: queues\/{mutex$0} & not(q1 = q2) & tk: TASK & tk: (queue_receiving\/{mutex$0|->{}})(q1) => not(tk: (queue_receiving\/{mutex$0|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{mutex$0} & q2: queues\/{mutex$0} & not(q1 = q2) & tk: TASK & tk: (queue_sending\/{mutex$0|->{}})(q1) => not(tk: (queue_sending\/{mutex$0|->{}})(q2))) & semaphores: POW(queues\/{mutex$0}) & mutex$0: queues\/{mutex$0} & mutexes: POW(queues\/{mutex$0}) & mutex_holder\/{mutex$0|->TASK_NULL}: QUEUE +-> TASK & mutexes\/{mutex$0} = dom(mutex_holder\/{mutex$0|->TASK_NULL}) & mutexes_busy: POW(mutexes\/{mutex$0}) & !mt.(mt: mutexes_busy => not((mutex_holder\/{mutex$0|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes\/{mutex$0} & not(mt: mutexes_busy) => (mutex_holder\/{mutex$0|->TASK_NULL})(mt) = TASK_NULL) & not(mutex$0: queues_msg) & mutexes\/{mutex$0}/\semaphores = {} & !que.(que: QUEUE & (not(que: queues) & not(que = mutex$0)) => not(que: mutexes) & not(que = mutex$0)) & !que.(que: QUEUE & (not(que: queues) & not(que = mutex$0)) => not(que: semaphores)) & que: queues\/{mutex$0});
  ((queue_sending\/{mutex$0|->{}})(que): POW(blocked\/suspended));
  ((queue_receiving\/{mutex$0|->{}})(que): POW(blocked\/suspended));
  ("`takeMutex preconditions in this component'" & mutex: mutexes & xTicksToWait: TICK & active = TRUE & not(running = idle));
  ("`Local hypotheses'" & mutex: mutexes_busy);
  (mutex_holder(mutex): tasks);
  (not(mutex_holder(mutex) = idle));
  (mutex: queues);
  ("`Local hypotheses'" & mutex: mutexes_busy & q1: queues);
  ("`Local hypotheses'" & mutex: mutexes_busy & n_runable: POW(tasks) & n_runable = runable-{running} & running$0: n_runable & blocked\/{running}: FIN(TASK) & running: tasks & n_runable: FIN(TASK) & not(running: n_runable) & n_runable/\blocked = {} & blocked\/{running}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/(blocked\/{running})\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->(queue_receiving(mutex)\/{running})}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->(queue_receiving(mutex)\/{running})}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->(queue_receiving(mutex)\/{running})})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->(queue_receiving(mutex)\/{running})})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->(queue_receiving(mutex)\/{running})})(q1) => not(tk: (queue_receiving<+{mutex|->(queue_receiving(mutex)\/{running})})(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked) & not(running$0 = running)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ((queue_receiving<+{mutex|->(queue_receiving(mutex)\/{running})})(que): POW(blocked\/{running}\/suspended));
  ("`Local hypotheses'" & not(mutex: mutexes_busy));
  (not(running = TASK_NULL));
  ("`Local hypotheses'" & not(mutex: mutexes_busy) & mutex_holder<+{mutex|->running}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->running}) & !mt.(mt: mutexes_busy\/{mutex} => not((mutex_holder<+{mutex|->running})(mt) = TASK_NULL)) & !mt.(mt: mutexes & (not(mt: mutexes_busy) & not(mt = mutex)) => (mutex_holder<+{mutex|->running})(mt) = TASK_NULL));
  (ran(mutex_holder<+{mutex|->running}): POW(tasks\/{TASK_NULL}));
  (not(idle: ran(mutex_holder<+{mutex|->running})));
  ("`Local hypotheses'" & not(mutex: mutexes_busy) & mutex_holder<+{mutex|->running}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->running}) & !mt.(mt: mutexes_busy\/{mutex} => not((mutex_holder<+{mutex|->running})(mt) = TASK_NULL)) & !mt.(mt: mutexes & (not(mt: mutexes_busy) & not(mt = mutex)) => (mutex_holder<+{mutex|->running})(mt) = TASK_NULL) & mt: mutexes_busy\/{mutex});
  ((mutex_holder<+{mutex|->running})(mt): tasks);
  ("`Local hypotheses'" & not(mutex: mutexes_busy) & mutex_holder<+{mutex|->running}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->running}) & !mt.(mt: mutexes_busy\/{mutex} => not((mutex_holder<+{mutex|->running})(mt) = TASK_NULL)) & !mt.(mt: mutexes & (not(mt: mutexes_busy) & not(mt = mutex)) => (mutex_holder<+{mutex|->running})(mt) = TASK_NULL) & mt: mutexes & not(mt: mutexes_busy) & not(mt = mutex));
  (not((mutex_holder<+{mutex|->running})(mt): tasks));
  ("`giveMutex preconditions in this component'" & mutex: mutexes & mutex: mutexes_busy & mutex_holder(mutex) = running & xTicksToWait: TICK);
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_sending(mutex));
  (task: tasks);
  (active = TRUE);
  (not(running = idle));
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_sending(mutex) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & task: suspended & task: blocked & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running$0: suspended & not(running$0 = task))) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  (ran(mutex_holder<+{mutex|->TASK_NULL}): POW(tasks\/{TASK_NULL}));
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_sending(mutex) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & task: suspended & task: blocked & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running$0: suspended & not(running$0 = task))) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & active = TRUE);
  (not(idle: ran(mutex_holder<+{mutex|->TASK_NULL})));
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_sending(mutex) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & task: suspended & task: blocked & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running$0: suspended & not(running$0 = task))) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & active = TRUE & mt: mutexes_busy & not(mt = mutex));
  ((mutex_holder<+{mutex|->TASK_NULL})(mt): tasks);
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_sending(mutex) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & task: suspended & task: blocked & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running$0: suspended & not(running$0 = task))) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & active = TRUE & mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)));
  (not((mutex_holder<+{mutex|->TASK_NULL})(mt): tasks));
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_sending(mutex) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & task: suspended & task: blocked & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running$0: suspended & not(running$0 = task))) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ((queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(que): POW(blocked-{task}\/suspended-{task}));
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_sending(mutex) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & task: suspended & not(task: blocked) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running$0: suspended & not(running$0 = task))) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_sending(mutex) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & task: suspended & not(task: blocked) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running$0: suspended & not(running$0 = task))) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & active = TRUE);
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_sending(mutex) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & task: suspended & not(task: blocked) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running$0: suspended & not(running$0 = task))) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & active = TRUE & mt: mutexes_busy & not(mt = mutex));
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_sending(mutex) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & task: suspended & not(task: blocked) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running$0: suspended & not(running$0 = task))) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & active = TRUE & mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)));
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_sending(mutex) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & task: suspended & not(task: blocked) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running$0: suspended & not(running$0 = task))) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ((queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(que): POW(blocked\/suspended-{task}));
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_sending(mutex) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & not(task: suspended) & task: blocked & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_sending(mutex) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & not(task: suspended) & task: blocked & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & active = TRUE);
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_sending(mutex) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & not(task: suspended) & task: blocked & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & active = TRUE & mt: mutexes_busy & not(mt = mutex));
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_sending(mutex) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & not(task: suspended) & task: blocked & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & active = TRUE & mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)));
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_sending(mutex) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & not(task: suspended) & task: blocked & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0 = task))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ((queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(que): POW(blocked-{task}\/suspended));
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_sending(mutex) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & not(task: suspended) & not(task: blocked) & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_sending(mutex) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & not(task: suspended) & not(task: blocked) & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & active = TRUE);
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_sending(mutex) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & not(task: suspended) & not(task: blocked) & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & active = TRUE & mt: mutexes_busy & not(mt = mutex));
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_sending(mutex) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & not(task: suspended) & not(task: blocked) & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & active = TRUE & mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)));
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_sending(mutex) & n_runable: POW(tasks) & n_runable = runable\/{task} & running$0: n_runable & not(task: suspended) & not(task: blocked) & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked)) & (active = TRUE => running$0: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ((queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(que): POW(blocked\/suspended));
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_sending(mutex) & n_runable: POW(tasks) & n_runable = runable\/{task} & task: suspended & task: blocked & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running: suspended & not(running = task))) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_sending(mutex) & n_runable: POW(tasks) & n_runable = runable\/{task} & task: suspended & task: blocked & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running: suspended & not(running = task))) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & active = TRUE);
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_sending(mutex) & n_runable: POW(tasks) & n_runable = runable\/{task} & task: suspended & task: blocked & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running: suspended & not(running = task))) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & active = TRUE & mt: mutexes_busy & not(mt = mutex));
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_sending(mutex) & n_runable: POW(tasks) & n_runable = runable\/{task} & task: suspended & task: blocked & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running: suspended & not(running = task))) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & active = TRUE & mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)));
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_sending(mutex) & n_runable: POW(tasks) & n_runable = runable\/{task} & task: suspended & task: blocked & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running: suspended & not(running = task))) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_sending(mutex) & n_runable: POW(tasks) & n_runable = runable\/{task} & task: suspended & not(task: blocked) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running: suspended & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_sending(mutex) & n_runable: POW(tasks) & n_runable = runable\/{task} & task: suspended & not(task: blocked) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running: suspended & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & active = TRUE);
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_sending(mutex) & n_runable: POW(tasks) & n_runable = runable\/{task} & task: suspended & not(task: blocked) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running: suspended & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & active = TRUE & mt: mutexes_busy & not(mt = mutex));
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_sending(mutex) & n_runable: POW(tasks) & n_runable = runable\/{task} & task: suspended & not(task: blocked) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running: suspended & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & active = TRUE & mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)));
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_sending(mutex) & n_runable: POW(tasks) & n_runable = runable\/{task} & task: suspended & not(task: blocked) & n_runable: FIN(TASK) & suspended-{task}: FIN(TASK) & suspended-{task}: POW(tasks) & n_runable/\blocked = {} & blocked/\suspended-{task} = {} & suspended-{task}/\n_runable = {} & tasks = suspended-{task}\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running: suspended & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: suspended & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_sending(mutex) & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task: suspended) & task: blocked & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_sending(mutex) & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task: suspended) & task: blocked & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & active = TRUE);
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_sending(mutex) & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task: suspended) & task: blocked & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & active = TRUE & mt: mutexes_busy & not(mt = mutex));
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_sending(mutex) & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task: suspended) & task: blocked & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & active = TRUE & mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)));
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_sending(mutex) & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task: suspended) & task: blocked & blocked-{task}: FIN(TASK) & blocked-{task}: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-{task} = {} & blocked-{task}/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-{task}\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => not(running: blocked & not(running = task))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle = task))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_sending(mutex) & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task: suspended) & not(task: blocked) & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_sending(mutex) & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task: suspended) & not(task: blocked) & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & active = TRUE);
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_sending(mutex) & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task: suspended) & not(task: blocked) & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & active = TRUE & mt: mutexes_busy & not(mt = mutex));
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_sending(mutex) & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task: suspended) & not(task: blocked) & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & active = TRUE & mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)));
  ("`Local hypotheses'" & task: blocked\/suspended & task: queue_sending(mutex) & n_runable: POW(tasks) & n_runable = runable\/{task} & not(task: suspended) & not(task: blocked) & n_runable: FIN(TASK) & n_runable/\blocked = {} & suspended/\n_runable = {} & tasks = suspended\/blocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}: QUEUE +-> POW(TASK) & queues = dom(queue_receiving<+{mutex|->queue_receiving(mutex)-{task}}) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q1) => not(tk: (queue_receiving<+{mutex|->queue_receiving(mutex)-{task}})(q2))) & mutex_holder<+{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes = dom(mutex_holder<+{mutex|->TASK_NULL}) & mutexes_busy-{mutex}: POW(mutexes) & !mt.(mt: mutexes_busy & not(mt = mutex) => not((mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes & not(mt: mutexes_busy & not(mt = mutex)) => (mutex_holder<+{mutex|->TASK_NULL})(mt) = TASK_NULL) & (active = TRUE => running: n_runable) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`incrementTick preconditions in this component'" & active = TRUE);
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_sending = {}) & not(queue_receiving = {}) & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & running$0: n_runable & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0: unblocked))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  (TICK_INCREMENT(tickCount,1): TICK);
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_sending = {}) & not(queue_receiving = {}) & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & running$0: n_runable & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0: unblocked))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_sending = {}) & not(queue_receiving = {}) & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & running$0: n_runable & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0: unblocked))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_sending = {}) & not(queue_receiving = {}) & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & (active = TRUE => not(running: blocked & not(running: unblocked))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_sending = {}) & not(queue_receiving = {}) & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & (active = TRUE => not(running: blocked & not(running: unblocked))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_sending = {}) & not(queue_receiving = {}) & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & (active = TRUE => not(running: blocked & not(running: unblocked))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_sending = {}) & not(queue_receiving = {}) & unblocked = {} & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_sending = {}) & not(queue_receiving = {}) & unblocked = {} & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & mt: mutexes);
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_sending = {}) & not(queue_receiving = {}) & unblocked = {} & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & que: queues);
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_sending = {}) & queue_receiving = {} & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & running$0: n_runable & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0: unblocked))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_sending = {}) & queue_receiving = {} & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & running$0: n_runable & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0: unblocked))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_sending = {}) & queue_receiving = {} & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & running$0: n_runable & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0: unblocked))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_sending = {}) & queue_receiving = {} & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & (active = TRUE => not(running: blocked & not(running: unblocked))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_sending = {}) & queue_receiving = {} & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & (active = TRUE => not(running: blocked & not(running: unblocked))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & mt: mutexes);
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_sending = {}) & queue_receiving = {} & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & (active = TRUE => not(running: blocked & not(running: unblocked))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_sending = {}) & queue_receiving = {} & unblocked = {} & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_sending = {}) & queue_receiving = {} & unblocked = {} & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & mt: mutexes);
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & not(queue_sending = {}) & queue_receiving = {} & unblocked = {} & remove_task(queue_sending,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_sending,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_sending,unblocked)(q2) => not(tk: queue_receiving(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_sending,unblocked)(q1) => not(tk: remove_task(queue_sending,unblocked)(q2))) & que: queues);
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_sending = {} & not(queue_receiving = {}) & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & running$0: n_runable & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0: unblocked))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_sending = {} & not(queue_receiving = {}) & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & running$0: n_runable & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0: unblocked))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_sending = {} & not(queue_receiving = {}) & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & (active = TRUE => not(running: blocked & not(running: unblocked))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_sending = {} & not(queue_receiving = {}) & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & (active = TRUE => not(running: blocked & not(running: unblocked))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_sending = {} & not(queue_receiving = {}) & unblocked = {} & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_sending = {} & not(queue_receiving = {}) & unblocked = {} & remove_task(queue_receiving,unblocked): QUEUE +-> POW(TASK) & queues = dom(remove_task(queue_receiving,unblocked)) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: queue_sending(q2))) & !(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => not(tk: remove_task(queue_receiving,unblocked)(q1))) & !(q1,q2,tk).(q1: queues & q2: queues & not(q1 = q2) & tk: TASK & tk: remove_task(queue_receiving,unblocked)(q1) => not(tk: remove_task(queue_receiving,unblocked)(q2))) & que: queues);
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_sending = {} & queue_receiving = {} & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & running$0: n_runable & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0: unblocked))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_sending = {} & queue_receiving = {} & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & running$0: n_runable & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & running$0: TASK & (active = TRUE => not(n_runable = {}) & running$0: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & (active = TRUE => not(running$0: suspended)) & (active = TRUE => not(running$0: blocked & not(running$0: unblocked))) & (active = TRUE => running$0: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_sending = {} & queue_receiving = {} & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & (active = TRUE => not(running: blocked & not(running: unblocked))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})));
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_sending = {} & queue_receiving = {} & not(unblocked = {}) & n_runable: POW(tasks) & n_runable = runable\/unblocked & blocked-unblocked: FIN(TASK) & blocked-unblocked: POW(tasks) & n_runable: FIN(TASK) & n_runable/\blocked-unblocked = {} & blocked-unblocked/\suspended = {} & suspended/\n_runable = {} & tasks = suspended\/blocked-unblocked\/n_runable & (active = TRUE => not(n_runable = {}) & running: n_runable & idle: n_runable & not(TASK_NULL: tasks)) & (active = TRUE => not(running: blocked & not(running: unblocked))) & (active = TRUE => running: n_runable) & (active = TRUE => not(idle: blocked & not(idle: unblocked))) & (active = TRUE => idle: n_runable) & (active = TRUE => not(n_runable = {})) & que: queues);
  ("`Local hypotheses'" & unblocked: FIN(TASK) & unblocked: POW(blocked) & queue_sending = {} & queue_receiving = {} & unblocked = {});
  ("`Local hypotheses'" & mutex: QUEUE & not(mutex: queues) & queue_receiving\/{mutex|->{}}: QUEUE +-> POW(TASK) & queue_sending\/{mutex|->{}}: QUEUE +-> POW(TASK) & queues\/{mutex} = dom(queue_receiving\/{mutex|->{}}) & queues\/{mutex} = dom(queue_sending\/{mutex|->{}}) & queues_msg: POW(queues\/{mutex}) & !(q1,q2,tk).(q1: queues\/{mutex} & q2: queues\/{mutex} & tk: TASK & tk: (queue_receiving\/{mutex|->{}})(q1) => not(tk: (queue_sending\/{mutex|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{mutex} & q2: queues\/{mutex} & tk: TASK & tk: (queue_sending\/{mutex|->{}})(q2) => not(tk: (queue_receiving\/{mutex|->{}})(q1))) & !(q1,q2,tk).(q1: queues\/{mutex} & q2: queues\/{mutex} & not(q1 = q2) & tk: TASK & tk: (queue_receiving\/{mutex|->{}})(q1) => not(tk: (queue_receiving\/{mutex|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{mutex} & q2: queues\/{mutex} & not(q1 = q2) & tk: TASK & tk: (queue_sending\/{mutex|->{}})(q1) => not(tk: (queue_sending\/{mutex|->{}})(q2))) & semaphores: POW(queues\/{mutex}) & mutex: queues\/{mutex} & mutexes: POW(queues\/{mutex}) & mutex_holder\/{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes\/{mutex} = dom(mutex_holder\/{mutex|->TASK_NULL}) & mutexes_busy: POW(mutexes\/{mutex}) & !mt.(mt: mutexes_busy => not((mutex_holder\/{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes\/{mutex} & not(mt: mutexes_busy) => (mutex_holder\/{mutex|->TASK_NULL})(mt) = TASK_NULL) & not(mutex: queues_msg) & mutexes\/{mutex}/\semaphores = {} & !que.(que: QUEUE & (not(que: queues) & not(que = mutex)) => not(que: mutexes) & not(que = mutex)) & !que.(que: QUEUE & (not(que: queues) & not(que = mutex)) => not(que: semaphores)));
  (ran(mutex_holder\/{mutex|->TASK_NULL}): POW(tasks\/{TASK_NULL}));
  ("`Local hypotheses'" & mutex: QUEUE & not(mutex: queues) & queue_receiving\/{mutex|->{}}: QUEUE +-> POW(TASK) & queue_sending\/{mutex|->{}}: QUEUE +-> POW(TASK) & queues\/{mutex} = dom(queue_receiving\/{mutex|->{}}) & queues\/{mutex} = dom(queue_sending\/{mutex|->{}}) & queues_msg: POW(queues\/{mutex}) & !(q1,q2,tk).(q1: queues\/{mutex} & q2: queues\/{mutex} & tk: TASK & tk: (queue_receiving\/{mutex|->{}})(q1) => not(tk: (queue_sending\/{mutex|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{mutex} & q2: queues\/{mutex} & tk: TASK & tk: (queue_sending\/{mutex|->{}})(q2) => not(tk: (queue_receiving\/{mutex|->{}})(q1))) & !(q1,q2,tk).(q1: queues\/{mutex} & q2: queues\/{mutex} & not(q1 = q2) & tk: TASK & tk: (queue_receiving\/{mutex|->{}})(q1) => not(tk: (queue_receiving\/{mutex|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{mutex} & q2: queues\/{mutex} & not(q1 = q2) & tk: TASK & tk: (queue_sending\/{mutex|->{}})(q1) => not(tk: (queue_sending\/{mutex|->{}})(q2))) & semaphores: POW(queues\/{mutex}) & mutex: queues\/{mutex} & mutexes: POW(queues\/{mutex}) & mutex_holder\/{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes\/{mutex} = dom(mutex_holder\/{mutex|->TASK_NULL}) & mutexes_busy: POW(mutexes\/{mutex}) & !mt.(mt: mutexes_busy => not((mutex_holder\/{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes\/{mutex} & not(mt: mutexes_busy) => (mutex_holder\/{mutex|->TASK_NULL})(mt) = TASK_NULL) & not(mutex: queues_msg) & mutexes\/{mutex}/\semaphores = {} & !que.(que: QUEUE & (not(que: queues) & not(que = mutex)) => not(que: mutexes) & not(que = mutex)) & !que.(que: QUEUE & (not(que: queues) & not(que = mutex)) => not(que: semaphores)) & active = TRUE);
  (not(idle: ran(mutex_holder\/{mutex|->TASK_NULL})));
  ("`Local hypotheses'" & mutex: QUEUE & not(mutex: queues) & queue_receiving\/{mutex|->{}}: QUEUE +-> POW(TASK) & queue_sending\/{mutex|->{}}: QUEUE +-> POW(TASK) & queues\/{mutex} = dom(queue_receiving\/{mutex|->{}}) & queues\/{mutex} = dom(queue_sending\/{mutex|->{}}) & queues_msg: POW(queues\/{mutex}) & !(q1,q2,tk).(q1: queues\/{mutex} & q2: queues\/{mutex} & tk: TASK & tk: (queue_receiving\/{mutex|->{}})(q1) => not(tk: (queue_sending\/{mutex|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{mutex} & q2: queues\/{mutex} & tk: TASK & tk: (queue_sending\/{mutex|->{}})(q2) => not(tk: (queue_receiving\/{mutex|->{}})(q1))) & !(q1,q2,tk).(q1: queues\/{mutex} & q2: queues\/{mutex} & not(q1 = q2) & tk: TASK & tk: (queue_receiving\/{mutex|->{}})(q1) => not(tk: (queue_receiving\/{mutex|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{mutex} & q2: queues\/{mutex} & not(q1 = q2) & tk: TASK & tk: (queue_sending\/{mutex|->{}})(q1) => not(tk: (queue_sending\/{mutex|->{}})(q2))) & semaphores: POW(queues\/{mutex}) & mutex: queues\/{mutex} & mutexes: POW(queues\/{mutex}) & mutex_holder\/{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes\/{mutex} = dom(mutex_holder\/{mutex|->TASK_NULL}) & mutexes_busy: POW(mutexes\/{mutex}) & !mt.(mt: mutexes_busy => not((mutex_holder\/{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes\/{mutex} & not(mt: mutexes_busy) => (mutex_holder\/{mutex|->TASK_NULL})(mt) = TASK_NULL) & not(mutex: queues_msg) & mutexes\/{mutex}/\semaphores = {} & !que.(que: QUEUE & (not(que: queues) & not(que = mutex)) => not(que: mutexes) & not(que = mutex)) & !que.(que: QUEUE & (not(que: queues) & not(que = mutex)) => not(que: semaphores)) & active = TRUE & mt: mutexes_busy);
  ((mutex_holder\/{mutex|->TASK_NULL})(mt): tasks);
  ("`Local hypotheses'" & mutex: QUEUE & not(mutex: queues) & queue_receiving\/{mutex|->{}}: QUEUE +-> POW(TASK) & queue_sending\/{mutex|->{}}: QUEUE +-> POW(TASK) & queues\/{mutex} = dom(queue_receiving\/{mutex|->{}}) & queues\/{mutex} = dom(queue_sending\/{mutex|->{}}) & queues_msg: POW(queues\/{mutex}) & !(q1,q2,tk).(q1: queues\/{mutex} & q2: queues\/{mutex} & tk: TASK & tk: (queue_receiving\/{mutex|->{}})(q1) => not(tk: (queue_sending\/{mutex|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{mutex} & q2: queues\/{mutex} & tk: TASK & tk: (queue_sending\/{mutex|->{}})(q2) => not(tk: (queue_receiving\/{mutex|->{}})(q1))) & !(q1,q2,tk).(q1: queues\/{mutex} & q2: queues\/{mutex} & not(q1 = q2) & tk: TASK & tk: (queue_receiving\/{mutex|->{}})(q1) => not(tk: (queue_receiving\/{mutex|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{mutex} & q2: queues\/{mutex} & not(q1 = q2) & tk: TASK & tk: (queue_sending\/{mutex|->{}})(q1) => not(tk: (queue_sending\/{mutex|->{}})(q2))) & semaphores: POW(queues\/{mutex}) & mutex: queues\/{mutex} & mutexes: POW(queues\/{mutex}) & mutex_holder\/{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes\/{mutex} = dom(mutex_holder\/{mutex|->TASK_NULL}) & mutexes_busy: POW(mutexes\/{mutex}) & !mt.(mt: mutexes_busy => not((mutex_holder\/{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes\/{mutex} & not(mt: mutexes_busy) => (mutex_holder\/{mutex|->TASK_NULL})(mt) = TASK_NULL) & not(mutex: queues_msg) & mutexes\/{mutex}/\semaphores = {} & !que.(que: QUEUE & (not(que: queues) & not(que = mutex)) => not(que: mutexes) & not(que = mutex)) & !que.(que: QUEUE & (not(que: queues) & not(que = mutex)) => not(que: semaphores)) & active = TRUE & mt: mutexes\/{mutex} & not(mt: mutexes_busy));
  (not((mutex_holder\/{mutex|->TASK_NULL})(mt): tasks));
  ("`Local hypotheses'" & mutex: QUEUE & not(mutex: queues) & queue_receiving\/{mutex|->{}}: QUEUE +-> POW(TASK) & queue_sending\/{mutex|->{}}: QUEUE +-> POW(TASK) & queues\/{mutex} = dom(queue_receiving\/{mutex|->{}}) & queues\/{mutex} = dom(queue_sending\/{mutex|->{}}) & queues_msg: POW(queues\/{mutex}) & !(q1,q2,tk).(q1: queues\/{mutex} & q2: queues\/{mutex} & tk: TASK & tk: (queue_receiving\/{mutex|->{}})(q1) => not(tk: (queue_sending\/{mutex|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{mutex} & q2: queues\/{mutex} & tk: TASK & tk: (queue_sending\/{mutex|->{}})(q2) => not(tk: (queue_receiving\/{mutex|->{}})(q1))) & !(q1,q2,tk).(q1: queues\/{mutex} & q2: queues\/{mutex} & not(q1 = q2) & tk: TASK & tk: (queue_receiving\/{mutex|->{}})(q1) => not(tk: (queue_receiving\/{mutex|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{mutex} & q2: queues\/{mutex} & not(q1 = q2) & tk: TASK & tk: (queue_sending\/{mutex|->{}})(q1) => not(tk: (queue_sending\/{mutex|->{}})(q2))) & semaphores: POW(queues\/{mutex}) & mutex: queues\/{mutex} & mutexes: POW(queues\/{mutex}) & mutex_holder\/{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes\/{mutex} = dom(mutex_holder\/{mutex|->TASK_NULL}) & mutexes_busy: POW(mutexes\/{mutex}) & !mt.(mt: mutexes_busy => not((mutex_holder\/{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes\/{mutex} & not(mt: mutexes_busy) => (mutex_holder\/{mutex|->TASK_NULL})(mt) = TASK_NULL) & not(mutex: queues_msg) & mutexes\/{mutex}/\semaphores = {} & !que.(que: QUEUE & (not(que: queues) & not(que = mutex)) => not(que: mutexes) & not(que = mutex)) & !que.(que: QUEUE & (not(que: queues) & not(que = mutex)) => not(que: semaphores)) & mt: mutexes\/{mutex});
  ((queue_sending\/{mutex|->{}})(mt) = {});
  ("`Local hypotheses'" & mutex: QUEUE & not(mutex: queues) & queue_receiving\/{mutex|->{}}: QUEUE +-> POW(TASK) & queue_sending\/{mutex|->{}}: QUEUE +-> POW(TASK) & queues\/{mutex} = dom(queue_receiving\/{mutex|->{}}) & queues\/{mutex} = dom(queue_sending\/{mutex|->{}}) & queues_msg: POW(queues\/{mutex}) & !(q1,q2,tk).(q1: queues\/{mutex} & q2: queues\/{mutex} & tk: TASK & tk: (queue_receiving\/{mutex|->{}})(q1) => not(tk: (queue_sending\/{mutex|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{mutex} & q2: queues\/{mutex} & tk: TASK & tk: (queue_sending\/{mutex|->{}})(q2) => not(tk: (queue_receiving\/{mutex|->{}})(q1))) & !(q1,q2,tk).(q1: queues\/{mutex} & q2: queues\/{mutex} & not(q1 = q2) & tk: TASK & tk: (queue_receiving\/{mutex|->{}})(q1) => not(tk: (queue_receiving\/{mutex|->{}})(q2))) & !(q1,q2,tk).(q1: queues\/{mutex} & q2: queues\/{mutex} & not(q1 = q2) & tk: TASK & tk: (queue_sending\/{mutex|->{}})(q1) => not(tk: (queue_sending\/{mutex|->{}})(q2))) & semaphores: POW(queues\/{mutex}) & mutex: queues\/{mutex} & mutexes: POW(queues\/{mutex}) & mutex_holder\/{mutex|->TASK_NULL}: QUEUE +-> TASK & mutexes\/{mutex} = dom(mutex_holder\/{mutex|->TASK_NULL}) & mutexes_busy: POW(mutexes\/{mutex}) & !mt.(mt: mutexes_busy => not((mutex_holder\/{mutex|->TASK_NULL})(mt) = TASK_NULL)) & !mt.(mt: mutexes\/{mutex} & not(mt: mutexes_busy) => (mutex_holder\/{mutex|->TASK_NULL})(mt) = TASK_NULL) & not(mutex: queues_msg) & mutexes\/{mutex}/\semaphores = {} & !que.(que: QUEUE & (not(que: queues) & not(que = mutex)) => not(que: mutexes) & not(que = mutex)) & !que.(que: QUEUE & (not(que: queues) & not(que = mutex)) => not(que: semaphores)) & que: queues\/{mutex});
  ((queue_sending\/{mutex|->{}})(que): POW(blocked\/suspended));
  ((queue_receiving\/{mutex|->{}})(que): POW(blocked\/suspended))
END
&
THEORY EnumerateX IS
  SCHEDULER_STATE == {taskSCHEDULER_NOT_STARTED,taskSCHEDULER_RUNNING,taskSCHEDULER_SUSPENDED};
  COPY_POSITION == {queueSEND_TO_BACK,queueSEND_TO_FRONT};
  QUEUE_TYPE == {TQUE,TSEMAPH,TMUT};
  ERROR_DEFINITION == {errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY,errNO_TASK_TO_RUN,errQUEUE_BLOCKED,errQUEUE_YIELD,errQUEUE_EMPTY,errQUEUE_FULL,pdPASS,pdFAIL,pdTRUE,pdFALSE}
END
&
THEORY Version IS
  POVersion(V3.8.3)(CLT == "V3.7.6")(genOPO == KO, genDivergencePO == KO, local_op == OK)
END
