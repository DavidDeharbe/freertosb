THEORY User_Pass IS
Operation(Initialisation) & Pattern(a: POW(b)) & ff(0) & pr;
Operation(Initialisation) & Pattern(a: b +-> POW(c)) & ff(0) & pr;
Operation(Initialisation) & Pattern(dom(a) = a) & ff(0) & pr;
Operation(Initialisation) & Pattern(a: POW(a)) & ff(0) & pr;
Operation(Initialisation) & Pattern(a: b +-> c) & ff(0) & pr;
Operation(AssertionLemmas) & Pattern(not(a: b)) & ff(0) & pr;
Operation(q_queueCreate) & Pattern(a\/{b|->c}: d +-> POW(e)) & ff(0) & pr;
Operation(q_queueCreate) & Pattern(a\/{b} = dom(c\/{b|->d})) & ff(0) & pr;
Operation(q_queueCreate) & Pattern(a: b\/{a}) & ff(0) & pr;
Operation(q_queueCreate) & Pattern(a: POW(b\/{c})) & ff(0) & pr;
Operation(q_queueDelete) & Pattern(a-{b}: POW(c)) & ff(0) & pr;
Operation(q_queueDelete) & Pattern({a}<<|b: c +-> POW(d)) & ff(0) & pr;
Operation(q_queueDelete) & Pattern(a-{b} = dom({b}<<|c)) & ff(0) & pr;
Operation(q_queueDelete) & Pattern(a-{b}: POW(c-{b})) & ff(0) & pr;
Operation(q_queueDelete) & Pattern(not(a: ({b}<<|c)(d))) & ff(0) & pr;
Operation(q_queueDelete) & Pattern(a: POW(b-{c})) & ff(0) & pr;
Operation(q_sendItem) & Pattern(a<+{b|->a(b)-{c}}: d +-> POW(e)) & ff(0) & pr;
Operation(q_sendItem) & Pattern(a = dom(b<+{c|->b(c)-{d}})) & ff(0) & pr;
Operation(q_sendItem) & Pattern(a<+{b|->(a(b)\/{c})}: d +-> POW(e)) & ff(0) & pr;
Operation(q_sendItem) & Pattern(a = dom(b<+{c|->(b(c)\/{d})})) & ff(0) & pr;
Operation(q_sendItem) & Pattern(not(a: (b<+{c|->b(c)-{d}})(e))) & ff(1) & pr;
Operation(q_receivedItem) & Pattern(a<+{b|->a(b)-{c}}: d +-> POW(e)) & ff(0) & pr;
Operation(q_receivedItem) & Pattern(a = dom(b<+{c|->b(c)-{d}})) & ff(0) & pr;
Operation(q_receivedItem) & Pattern(not(a: (b<+{c|->b(c)-{d}})(e))) & ff(1) & pr;
Operation(q_insertTaskWaitingToSend) & Pattern(a<+{b|->(a(b)\/{c})}: d +-> POW(e)) & ff(0) & pr;
Operation(q_insertTaskWaitingToSend) & Pattern(a = dom(b<+{c|->(b(c)\/{d})})) & ff(0) & pr;
Operation(q_insertTaskWaitingToSend) & Pattern(not(a: (b<+{c|->(b(c)\/{d})})(e))) & ff(1) & pr;
Operation(q_insertTaskWaitingToReceive) & Pattern(a<+{b|->(a(b)\/{c})}: d +-> POW(e)) & ff(0) & pr;
Operation(q_insertTaskWaitingToReceive) & Pattern(a = dom(b<+{c|->(b(c)\/{d})})) & ff(0) & pr;
Operation(q_insertTaskWaitingToReceive) & Pattern(not(a: (b<+{c|->(b(c)\/{d})})(e))) & ff(1) & pr;
Operation(q_removeFromEventListQueue) & Pattern(a<+{b|->a(b)-{c}}: d +-> POW(e)) & ff(0) & pr;
Operation(q_removeFromEventListQueue) & Pattern(a = dom(b<+{c|->b(c)-{d}})) & ff(1) & pr;
Operation(q_removeFromEventListQueue) & Pattern(not(a: (b<+{c|->b(c)-{d}})(e))) & ff(0) & pr;
Operation(q_createSemaphore) & Pattern(a\/{b|->c}: d +-> POW(e)) & ff(0) & pr;
Operation(q_createSemaphore) & Pattern(a\/{b} = dom(c\/{b|->d})) & ff(0) & pr;
Operation(q_createSemaphore) & Pattern(a: POW(b\/{c})) & ff(0) & pr;
Operation(q_createSemaphore) & Pattern(a: b\/{a}) & ff(0) & pr;
Operation(q_takeSemaphore) & Pattern(a<+{b|->a(b)-{c}}: d +-> POW(e)) & ff(0) & pr;
Operation(q_takeSemaphore) & Pattern(a = dom(b<+{c|->b(c)-{d}})) & ff(0) & pr;
Operation(q_takeSemaphore) & Pattern(not(a: (b<+{c|->b(c)-{d}})(e))) & ff(1) & pr;
Operation(q_giveSemaphore) & Pattern(a<+{b|->a(b)-{c}}: d +-> POW(e)) & ff(0) & pr;
Operation(q_giveSemaphore) & Pattern(a = dom(b<+{c|->b(c)-{d}})) & ff(0) & pr;
Operation(q_giveSemaphore) & Pattern(not(a: (b<+{c|->b(c)-{d}})(e))) & ff(1) & pr;
Operation(q_giveSemaphore) & Pattern(a-{b}: POW(c)) & ff(0) & pr;
Operation(q_createMutex) & Pattern(a\/{b|->c}: d +-> POW(e)) & ff(0) & pr;
Operation(q_createMutex) & Pattern(a\/{b} = dom(c\/{b|->d})) & ff(0) & pr;
Operation(q_createMutex) & Pattern(a: POW(b\/{c})) & ff(0) & pr;
Operation(q_createMutex) & Pattern(a: b\/{a}) & ff(0) & pr;
Operation(q_createMutex) & Pattern(a\/{b|->c}: d +-> e) & ff(0) & pr;
Operation(q_createMutex) & Pattern(not((a\/{b|->c})(d) = c)) & ff(0) & pr;
Operation(q_takeMutex) & Pattern(a<+{b|->c}: d +-> e) & ff(0) & pr;
Operation(q_takeMutex) & Pattern(a = dom(b<+{c|->d})) & ff(0) & pr;
Operation(q_takeMutex) & Pattern((a<+{b|->c})(d) = e) & ff(1) & pr;
Operation(q_giveMutex) & Pattern(a<+{b|->a(b)-{c}}: d +-> POW(e)) & ff(0) & pr;
Operation(q_giveMutex) & Pattern(a = dom(b<+{c|->b(c)-{d}})) & ff(0) & pr;
Operation(q_giveMutex) & Pattern(a<+{b|->c}: d +-> e) & ff(0) & pr;
Operation(q_giveMutex) & Pattern(a = dom(b<+{c|->d})) & ff(0) & pr;
Operation(q_giveMutex) & Pattern(a-{b}: POW(c)) & ff(0) & pr;
Operation(q_giveMutex) & Pattern(not((a<+{b|->c})(d) = c)) & ff(0) & pr;
Operation(q_giveMutex) & Pattern((a<+{b|->c})(d) = c) & ff(0) & pr;
Operation(q_endScheduler) & Pattern(a: POW(b)) & ff(0) & pr;
Operation(q_endScheduler) & Pattern(a: b +-> POW(c)) & ff(0) & pr;
Operation(q_endScheduler) & Pattern(dom(a) = a) & ff(0) & pr;
Operation(q_endScheduler) & Pattern(a: POW(a)) & ff(0) & pr;
Operation(q_endScheduler) & Pattern(a: b +-> c) & ff(0) & pr;
Operation(q_resumeAll) & Pattern(a(b,c): d +-> POW(e)) & ff(0) & pr;
Operation(q_resumeAll) & Pattern(a = dom(b(c,d))) & ff(0) & pr;
Operation(q_resumeAll) & Pattern(not(a: b(c))) & ff(0) & pr;
Operation(q_createMutex) & Pattern(a: POW(b\/{c})) & ff(0) & dd & pr;
Operation(q_resumeAll) & Pattern(a = dom(b(c,d))) & ff(0) & dd & pr & pp(rp.1);
Operation(q_queueCreate) & Pattern(a: POW(b\/{c})) & ff(0) & dc(pxQueue/=mt) & pr & pr;
Operation(q_resumeAll) & Pattern(not(a: b(c,d)(e))) & ff(0) & dd & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => tk/:queue_sending(q2))) & pr & pr & pr & ah(tk: remove_task(queue_receiving,unblocked)(q1)) & eh(remove_task,_h,Goal) & pr & eh(remove_task,_h,Goal) & pr;
Operation(q_resumeAll) & Pattern(not(a: b(c,d)(e))) & ff(0) & dd & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => tk/:queue_receiving(q1))) & pr & pr & pr & ah(tk: remove_task(queue_sending,unblocked)(q2)) & eh(remove_task,_h,Goal) & pr & pr;
Operation(q_resumeAll) & Pattern(not(a: b(c,d)(e))) & ff(0) & dd & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & eh(remove_task,_h,Goal) & pr;
Operation(q_queueCreate) & Pattern(a\/{b} = dom(c\/{b|->d})) & ff(2) & dd & dc(pxQueue = q2) & pr & pr;
Operation(q_queueCreate) & Pattern(not(a: (b\/{c|->d})(e))) & ff(1) & dc(pxQueue/=q1) & dd & pr & pr & pr;
Operation(q_takeSemaphore) & Pattern(not(a: b(c))) & ff(0) & dc(semaphore = q2) & pr & dd & dd & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => tk/:queue_receiving(q1))) & pr & pr & pr & ah((queue_sending<+{semaphore|->queue_sending(semaphore)-{pxTask}})(q2) = queue_sending(q2)) & pr & dd & pr;
Operation(q_resumeAll) & Pattern(a = dom(b(c,d))) & ff(0) & dd & pr & pr & pr & pr & eh(dom(queue_receiving),_h,Goal) & ah(dom(queue_receiving) = queues) & pr & dd & pr & eh(dom(queue_receiving),_h,Goal) & pp(rp.1);
Operation(q_resumeAll) & Pattern(not(a: b(c,d)(e))) & ff(0) & dd & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_receiving(q1) => tk/:queue_receiving(q2))) & pr & pr & pr & pr & ah(tk: remove_task(queue_receiving,unblocked)(q1)) & eh(remove_task,_h,Goal) & pr & pr;
Operation(q_resumeAll) & Pattern(not(a: b(c,d)(e))) & ff(0) & dd & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_sending(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & ah(tk: remove_task(queue_sending,unblocked)(q1)) & eh(remove_task,_h,Goal) & pr & pr;
Operation(q_resumeAll) & Pattern(not(a: b(c,d)(e))) & ff(0) & dd & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => tk/:queue_receiving(q1))) & pr & pr & pr & pr & dd & pr & eh(remove_task,_h,Goal) & pr;
Operation(q_giveSemaphore) & Pattern(not(a: b(c))) & ff(0) & dc(semaphore = q1) & pr & dd & dc(semaphore = q1) & pr & dd & dd & ah((queue_receiving<+{semaphore|->queue_receiving(semaphore)-{pxTask}})(q1) = queue_receiving(q1)) & pr & dd & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr;
Operation(q_createSemaphore) & Pattern(a: b\/{a}) & ff(2) & dc(semaphore = q1) & pr & dd & dc(semaphore = q2) & pr & dd & dd & pr;
Operation(q_createMutex) & Pattern(not(a: (b\/{c|->d})(e))) & ff(0) & dc(q1 = mutex) & pr & dd & dc(q2 = mutex) & pr & dd & dd & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => tk/:queue_receiving(q1))) & pr & pr & pr & ah(tk: (queue_sending\/{mutex|->{}})(q2) & mutex/=q2) & pr & pr & pr & pr;
Operation(q_createMutex) & Pattern(a: POW(b\/{c})) & ff(2) & dc(mutex = q1) & pr & dd & dc(mutex = q2) & pr & dd & dd & pr;
Operation(q_receivedItem) & Pattern(not(a: b(c))) & ff(0) & dc(pxQueue = q2) & pr & dd & dd & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => tk/:queue_receiving(q1))) & pr & pr & pr & ah(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) & pxQueue/=q2) & pr & pr & ae(queue_sending(pxQueue)-{task},aa) & dd & pr & ah(tk: (queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q2) & q2/=pxQueue) & pr & pr & pr;
Operation(q_insertTaskWaitingToSend) & Pattern(not(a: b(c))) & ff(0) & dc(pxQueue = q2) & pr & dd & dd & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => tk/:queue_receiving(q1))) & pr & pr & pr & ah(tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{pxTask})})(q2) & not(pxQueue = q2)) & pr & pr & ae(queue_sending(pxQueue)\/{pxTask},aa) & dd & pr & ah(tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{pxTask})})(q2) & not(q2 = pxQueue)) & pr & pr & pr;
Operation(q_insertTaskWaitingToReceive) & Pattern(not(a: b(c))) & ff(0) & dc(pxQueue = q1) & pr & dd & dd & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => tk/:queue_sending(q2))) & pr & pr & pr & ah(tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{pxTask})})(q1) & q1/=pxQueue) & pr & pr & ae(queue_receiving(pxQueue)\/{pxTask},aa) & dd & pr & ah(tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{pxTask})})(q1) & pxQueue/=q1) & pr & pr & eh(queue_receiving(pxQueue)\/{pxTask},_h,Goal) & pr;
Operation(q_createMutex) & Pattern(not(a: (b\/{c|->d})(e))) & ff(0) & dc(q1 = mutex) & pr & dd & dc(q2 = mutex) & pr & dd & dd & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_receiving(q1) => tk/:queue_receiving(q2))) & pr & pr & pr & pr & ah(tk: (queue_receiving\/{mutex|->{}})(q1) & mutex/=q1) & pr & pr & pr & pr;
Operation(q_createMutex) & Pattern((a\/{b|->c})(d) = c) & ff(2) & dc(mutex = mt$0) & pr & dd & dd & ph(mt$0,!mt.(mt: mutexes & mt/:mutexes_busy => queue_items(mt) = {ITEM_EMPTY})) & pr & pr & pr;
Operation(q_giveSemaphore) & Pattern(not(a: (b<+{c|->b(c)-{d}})(e))) & ff(0) & dc(semaphore = q1) & pr & dd & dc(semaphore = q2) & dd & pr & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_receiving(q1) => tk/:queue_receiving(q2))) & pr & pr & pr & pr & ah((queue_receiving<+{q2|->queue_receiving(q2)-{pxTask}})(q1) = queue_receiving(q1)) & pr & dd & pr & pr & dd & dd & ah((queue_receiving<+{semaphore|->queue_receiving(semaphore)-{pxTask}})(q1) = queue_receiving(q1)) & pr & dd & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_receiving(q1) => tk/:queue_receiving(q2))) & pr & pr & pr & pr & pr & pr;
Operation(q_receivedItem) & Pattern(not(a: (b<+{c|->b(c)-{d}})(e))) & ff(0) & dc(pxQueue = q1) & pr & dd & dd & dc(pxQueue = q2) & pr & ah((queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) = queue_sending(q1)) & pr & dd & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_sending(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & pr & pr & dd & pr & ah((queue_sending<+{pxQueue|->queue_sending(pxQueue)-{task}})(q1) = queue_sending(q1)) & pr & dd & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_sending(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & pr & pr;
Operation(q_queueCreate) & Pattern(not(a: (b\/{c|->d})(e))) & ff(1) & dc(pxQueue = q2) & pr & dd & dc(pxQueue = q1) & pr & dd & dd & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => tk/:queue_receiving(q1))) & pr & pr & pr & ah(tk: (queue_sending\/{pxQueue|->{}})(q2) & pxQueue/=q2) & pr & pr & ah((queue_sending\/{pxQueue|->{}})(q2) = queue_sending(q2)) & pr & dd & eh((queue_sending\/{pxQueue|->{}})(q2),_h,Goal) & dd & pr;
Operation(q_queueCreate) & Pattern(not(a: (b\/{c|->d})(e))) & ff(1) & dc(pxQueue = q1) & pr & dd & dc(pxQueue = q2) & pr & dd & dd & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_receiving(q1) => tk/:queue_receiving(q2))) & pr & pr & pr & pr & ah((queue_receiving\/{pxQueue|->{}})(q1) = queue_receiving(q1)) & pr & dd & pr & pr;
Operation(q_createSemaphore) & Pattern(not(a: (b\/{c|->d})(e))) & ff(1) & dc(semaphore = q1) & pr & dd & dc(semaphore = q2) & pr & dd & dd & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => tk/:queue_sending(q2))) & pr & pr & pr & ah(tk: (queue_receiving\/{semaphore|->{}})(q1) & semaphore/=q1) & pr & pr & ah((queue_receiving\/{semaphore|->{}})(q1) = queue_receiving(q1)) & pr & dd & eh((queue_receiving\/{semaphore|->{}})(q1),_h,Goal) & pr;
Operation(q_createSemaphore) & Pattern(not(a: (b\/{c|->d})(e))) & ff(1) & dc(semaphore = q1) & pr & dd & dc(semaphore = q2) & pr & dd & dd & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_sending(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & ah((queue_sending\/{semaphore|->{}})(q1) = queue_sending(q1)) & pr & dd & pr & pr;
Operation(q_createSemaphore) & Pattern(not(a: (b\/{c|->d})(e))) & ff(1) & dc(semaphore = q1) & pr & dd & dc(semaphore = q2) & pr & dd & dd & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_receiving(q1) => tk/:queue_receiving(q2))) & pr & pr & pr & pr & ah(tk: (queue_receiving\/{semaphore|->{}})(q1) & semaphore/=q1) & pr & pr & ah((queue_receiving\/{semaphore|->{}})(q1) = queue_receiving(q1)) & pr & dd & eh((queue_receiving\/{semaphore|->{}})(q1),_h,Goal) & pr;
Operation(q_createSemaphore) & Pattern(not(a: (b\/{c|->d})(e))) & ff(2) & dc(semaphore = q2) & pr & dd & dc(semaphore = q1) & pr & dd & dd & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => tk/:queue_receiving(q1))) & pr & pr & pr & pr & pr;
Operation(q_createMutex) & Pattern(not(a: (b\/{c|->d})(e))) & ff(2) & dc(mutex = q1) & pr & dd & dc(mutex = q2) & pr & dd & dd & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & pr;
Operation(q_createMutex) & Pattern(not(a: (b\/{c|->d})(e))) & ff(2) & dc(mutex = q2) & pr & dd & dc(mutex = q1) & pr & dd & dd & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_sending(q2) => tk/:queue_receiving(q1))) & pr & pr & pr & pr & pr;
Operation(q_takeSemaphore) & Pattern(not(a: (b<+{c|->b(c)-{d}})(e))) & ff(1) & dc(semaphore = q1) & pr & dd & dc(semaphore = q2) & dd & pr & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_sending(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & ah((queue_sending<+{q2|->queue_sending(q2)-{pxTask}})(q1) = queue_sending(q1)) & pr & dd & pr & pr & dd & dd & ah((queue_sending<+{semaphore|->queue_sending(semaphore)-{pxTask}})(q1) = queue_sending(q1)) & pr & dd & pr;
Operation(q_sendItem) & Pattern(not(a: b(c))) & ff(1) & dd & dc(pxQueue = q1) & dd & pr & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & dd & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & tk: TASK & tk: queue_receiving(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & ah(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) & not(pxQueue = q1)) & pr & pr & ae(queue_receiving(pxQueue)-{task},aa) & dd & pr;
Operation(q_insertTaskWaitingToSend) & Pattern(not(a: (b<+{c|->(b(c)\/{d})})(e))) & ff(1) & dc(pxQueue = q1) & pr & pr & dd & dd & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_sending(q1) => tk/:queue_sending(q2))) & pr & pr & pr & pr & ah(tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{pxTask})})(q1) & pxQueue/=q1) & pr & pr & ae(queue_sending(pxQueue)\/{pxTask},aa) & dd & ah((queue_sending<+{pxQueue|->aa})(q1) = queue_sending(q1)) & pr & dd & eh((queue_sending<+{pxQueue|->aa})(q1),_h,Goal) & dd & pr & eh(pxQueue,_h,Goal) & pr & ah(tk: queue_sending(q1)) & ah(tk: (queue_sending<+{pxQueue|->(queue_sending(pxQueue)\/{pxTask})})(q1) & pxQueue/=q1) & pr & pr & ae(queue_sending(pxQueue)\/{pxTask},aa) & dd & ah((queue_sending<+{pxQueue|->aa})(q1) = queue_sending(q1)) & pr & dd & eh((queue_sending<+{pxQueue|->aa})(q1),_h,Goal) & dd & ph(q1,!q1.(q1: queues => not(pxTask: queue_sending(q1)) & not(pxTask: queue_receiving(q1)))) & pr & dd & ah(tk: queue_sending(q1) & not(pxTask: queue_sending(q1))) & pr & pr & pr & dd & pr;
Operation(q_sendItem) & Pattern(not(a: (b<+{c|->b(c)-{d}})(e))) & ff(1) & dc(pxQueue = q1) & pr & dd & dd & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_receiving(q1) => tk/:queue_receiving(q2))) & pr & pr & pr & pr & ah(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) & pxQueue/=q1) & pr & pr & ae(queue_receiving(pxQueue)-{task},aa) & dd & pr & ah(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) & pxQueue/=q1) & pr & pr & eh(queue_receiving(pxQueue)-{task},_h,Goal) & pr & ah(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) & q1/=pxQueue) & pr & pr & eh(queue_receiving(pxQueue)-{task},_h,Goal) & pr & ah(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) & q1/=pxQueue) & pr & pr & eh(queue_receiving(pxQueue)-{task},_h,Goal) & pr & ah((queue_receiving<+{pxQueue|->aa})(q1) = queue_receiving(q1)) & pr & dd & ah(tk: (queue_receiving<+{pxQueue|->queue_receiving(pxQueue)-{task}})(q1) & q1/=pxQueue) & pr & pr & eh(queue_receiving(pxQueue)-{task},_h,Goal) & eh((queue_receiving<+{pxQueue|->aa})(q1),_h,Goal) & dd & pr & pr & pr & pr;
Operation(q_insertTaskWaitingToReceive) & Pattern(not(a: (b<+{c|->(b(c)\/{d})})(e))) & ff(1) & dc(pxQueue = q1) & pr & pr & dd & dd & pr & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_receiving(q1) => tk/:queue_receiving(q2))) & pr & pr & pr & pr & ah(tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{pxTask})})(q1) & pxQueue/=q1) & pr & pr & ae(queue_receiving(pxQueue)\/{pxTask},aa) & dd & ah((queue_receiving<+{pxQueue|->aa})(q1) = queue_receiving(q1)) & pr & dd & eh((queue_receiving<+{pxQueue|->aa})(q1),_h,Goal) & dd & pr & ah(tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{pxTask})})(q1)) & ae(queue_receiving(pxQueue)\/{pxTask},aa) & dd & ah((queue_receiving<+{pxQueue|->aa})(q1) = queue_receiving(q1)) & pr & dd & eh((queue_receiving<+{pxQueue|->aa})(q1),_h,Goal) & dd & ph(q1,!q1.(q1: queues => not(pxTask: queue_sending(q1)) & not(pxTask: queue_receiving(q1)))) & pr & dd & ah(tk: queue_receiving(q1) & not(pxTask: queue_receiving(q1))) & pr & pr & pr & dd & pr & ph(q1,q2,tk,!(q1,q2,tk).(q1: queues & q2: queues & q1/=q2 & tk: TASK & tk: queue_receiving(q1) => tk/:queue_receiving(q2))) & pr & pr & pr & pr & pr & ah(tk: (queue_receiving<+{pxQueue|->(queue_receiving(pxQueue)\/{pxTask})})(q1) & pxQueue/=q1) & pr & pr & ae(queue_receiving(pxQueue)\/{pxTask},aa) & dd & pr
END
